; Wed Oct 19 22:15:42 MSK 2016
; 
;+ (version "3.5")
;+ (build "Build 663")

([Examples_Class0] of  Rule

	(lhs "?goal (Goal action hold \n	argument1 ?name)\n?thing (Thing name ?name \n	location ?place \n	on-top-of ceiling \n	weight light)\n(Thing name ladder \n	location ?place)\n?monkey (Monkey location ?place \n	on-top-of ladder \n	holding blank)")
	(rhs "(ru.rules/display (str \"Monkey grabs the \" ?name \".\" ))\n(modify ?thing location held \n	on-top-of held)\n(modify ?monkey holding ?name)\n(retract ?goal)")
	(salience 0)
	(title "Grab-object-from-ladder"))

([Examples_Class1] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ?on \n	weight light\n	(not= ?on ceiling))\n(Monkey location ?place \n	on-top-of ?surf\n	(not= ?surf ?on))\n(not Goal action on \n	argument1 ?on)")
	(rhs "(asser Goal action on argument1 ?on)")
	(salience 0)
	(title "Climb-to-hold"))

([Examples_Class10] of  Rule

	(lhs "?goal (Goal action move \n	argument1 ?obj \n	argument2 ?place)\n(Thing name ?obj location ?place)")
	(rhs "(retract ?goal)")
	(salience 0)
	(title "Already-moved-object"))

([Examples_Class10000] of  Rule

	(lhs "(Goal action unlock \n	argument1 ?chest)\n(Thing name ?chest \n	on-top-of ?surf \n	weight light\n	(not= ?surf floor))\n(Monkey holding ?thing\n	(not= ?thing ?chest))\n(not Goal action hold argument1 ?chest)")
	(rhs "(asser Goal action hold \n	argument1 ?chest)")
	(salience 0)
	(title "Hold-chest-to-put-on-floor"))

([Examples_Class100000] of  Rule

	(lhs "(Patient spots true)\n(not Disease diagnosis measles)")
	(rhs "(asser Disease diagnosis allergy)\n(ru.rules/display \"Allergy diagnosed from spots and lack of measles<br>\")")
	(salience -1)
	(title "Allergy1"))

([Examples_Class100001] of  Rule

	(lhs "(Patient rash true)")
	(rhs "(asser Disease diagnosis allergy)\n(ru.rules/display \"Allergy diagnosed from rash<br>\")")
	(salience 0)
	(title "Allergy2"))

([Examples_Class100002] of  Rule

	(lhs "(Patient sore_throat true \n	fever ?f\n	[(= ?f mild)\n	 (= ?f high)])")
	(rhs "(asser Disease diagnosis flu)\n(ru.rules/display \"Flu diagnosed<br>\")")
	(salience 0)
	(title "Flu"))

([Examples_Class10015] of  Rule

	(lhs "?goal (Goal action walk-to \n	argument1 ?place)\n?monkey (Monkey location ?loc \n	on-top-of floor \n	holding blank\n	(not= ?loc ?place))")
	(rhs "(ru.rules/display (str \"Monkey walks to \" ?place \".\" ))\n(modify ?monkey location ?place)\n(retract ?goal)")
	(salience 0)
	(title "Walk-holding-nothing"))

([Examples_Class10016] of  Rule

	(lhs "?goal (Goal action walk-to \n	argument1 ?place)\n?monkey (Monkey location ?loc \n	on-top-of floor \n	holding ?obj\n	((not= ?loc ?place)\n	 (not= ?obj blank)))")
	(rhs "(ru.rules/display (str \"Monkey walks to \" ?place \" holding the \" ?obj \".\" ))\n(modify ?monkey location ?place)\n(retract ?goal)")
	(salience 0)
	(title "Walk-holding-object"))

([Examples_Class10017] of  Rule

	(lhs "?goal (Goal action on \n	argument1 floor)\n?monkey (Monkey on-top-of ?on\n	(not= ?on floor))")
	(rhs "(ru.rules/display (str \"Monkey jumps off the \" ?on \" onto the floor.\" ))\n(modify ?monkey on-top-of floor)\n(retract ?goal)")
	(salience 0)
	(title "Jump-onto-floor"))

([Examples_Class10018] of  Rule

	(lhs "(Goal action on argument1 ?obj)\n(Thing name ?obj \n	location ?place)\n(Monkey location ?loc\n	(not= ?loc ?place))\n(not Goal action walk-to argument1 ?place)")
	(rhs "(asser Goal action walk-to \n	argument1 ?place)")
	(salience 0)
	(title "Walk-to-place-to-climb"))

([Examples_Class10019] of  Rule

	(lhs "(Goal action on \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place)\n(Monkey location ?place \n	holding ?hold\n	(not= ?hold blank))\n(not Goal action hold \n	argument1 blank)")
	(rhs "(asser Goal action hold \n	argument1 blank)")
	(salience 0)
	(title "Drop-to-climb"))

([Examples_Class10020] of  Rule

	(lhs "(Goal action on \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ?on)\n(Monkey location ?place \n	on-top-of ?on2 \n	holding blank\n	((not= ?on2 ?on)\n	 (not= ?on2 ?obj)))\n(not Goal action on \n	argument1 ?on)")
	(rhs "(asser Goal action on \n	argument1 ?on)")
	(salience 0)
	(title "Climb-indirectly"))

([Examples_Class10021] of  Rule

	(lhs "?goal (Goal action on \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ?on)\n?monkey (Monkey location ?place \n	on-top-of ?on \n	holding blank)")
	(rhs "(ru.rules/display (str \"Monkey climbs onto the \" ?obj \".\" ))\n(modify ?monkey on-top-of ?obj)\n(retract ?goal)")
	(salience 0)
	(title "Climb-directly"))

([Examples_Class10022] of  Rule

	(lhs "?goal (Goal action on \n	argument1 ?obj)\n(Monkey on-top-of ?obj)")
	(rhs "(retract ?goal)")
	(salience 0)
	(title "Already-on-object"))

([Examples_Class10023] of  Rule

	(lhs "(Goal action eat \n	argument1 ?obj)\n(Monkey holding ?h\n	(not= ?h ?obj))\n(not Goal action hold \n	argument1 ?obj)")
	(rhs "(asser Goal action hold \n	argument1 ?obj)")
	(salience 0)
	(title "Hold-to-eat"))

([Examples_Class10024] of  Rule

	(lhs "?goal (Goal action eat \n	argument1 ?name)\n?monkey (Monkey holding ?name)\n?thing (Thing name ?name)")
	(rhs "(ru.rules/display (str \"Monkey eats the \" ?name \".\" ))\n(modify ?monkey holding blank)\n(retract ?goal ?thing)")
	(salience 0)
	(title "Satisfy-hunger"))

([Examples_Class10025] of  Monkey

	(holding "blank")
	(location "t5-7")
	(on-top-of "green-couch"))

([Examples_Class10026] of  Thing

	(location "t5-7")
	(name "green-couch")
	(on-top-of "floor")
	(weight "heavy"))

([Examples_Class10027] of  Goal

	(action "eat")
	(argument1 "bananas"))

([Examples_Class10028] of  Thing

	(location "t2-2")
	(name "red-couch")
	(on-top-of "floor")
	(weight "heavy"))

([Examples_Class10029] of  Thing

	(location "t2-2")
	(name "big-pillow")
	(on-top-of "red-couch")
	(weight "light"))

([Examples_Class10030] of  Thing

	(location "t2-2")
	(name "red-chest")
	(on-top-of "big-pillow")
	(weight "light"))

([Examples_Class10031] of  Thing

	(location "t7-7")
	(name "blue-chest")
	(on-top-of "ceiling")
	(weight "light"))

([Examples_Class10032] of  Thing

	(location "t8-8")
	(name "blue-couch")
	(on-top-of "floor")
	(weight "heavy"))

([Examples_Class10033] of  Thing

	(location "t8-8")
	(name "green-chest")
	(on-top-of "ceiling")
	(weight "light"))

([Examples_Class10034] of  Thing

	(location "t1-3")
	(name "red-key")
	(on-top-of "floor")
	(weight "light"))

([Examples_Class10035] of  Chest

	(contents "ladder")
	(name "red-chest")
	(unlocked-by "red-key"))

([Examples_Class10036] of  Chest

	(contents "bananas")
	(name "blue-chest")
	(unlocked-by "blue-key"))

([Examples_Class10037] of  Chest

	(contents "blue-key")
	(name "green-chest")
	(unlocked-by "red-key"))

([Examples_Class10040] of  CloFuncall

	(source "(ru.rules/sp :all)"))

([Examples_Class11] of  Rule

	(lhs "?goal (Goal action walk-to argument1 ?place)\n(Monkey location ?place)")
	(rhs "(retract ?goal)")
	(salience 0)
	(title "Already-at-place"))

([Examples_Class110000] of  RuleSet

	(rules
		[Examples_Class110001]
		[Examples_Class110002]
		[Examples_Class110003]
		[Examples_Class120000])
	(title "Treatment"))

([Examples_Class110001] of  Rule

	(lhs "?d (Disease diagnosis measles\n	treatment ?t\n	(nil? ?t))")
	(rhs "(modify ?d treatment pennicillin)\n(ru.rules/display \"Penicillin prescribed<br>\")")
	(salience 0)
	(title "Penicillin"))

([Examples_Class110002] of  Rule

	(lhs "?d (Disease diagnosis allergy\n	treatment ?t\n	(nil? ?t))")
	(rhs "(modify ?d treatment allergy_shot)\n(ru.rules/display \"Allergy shot prescribed<br>\")")
	(salience 0)
	(title "Allergy_pills"))

([Examples_Class110003] of  Rule

	(lhs "?d (Disease diagnosis flu\n	treatment ?t\n	(nil? ?t))")
	(rhs "(modify ?d treatment bed_rest)\n(ru.rules/display \"Bed rest prescribed<br>\")")
	(salience 0)
	(title "Bed_rest"))

([Examples_Class120000] of  Rule

	(lhs "(Patient)\n(not Disease)")
	(rhs "(ru.rules/display \"No diagnosis\")\n(ru.rules/display \"<span style='color:green'>Healthy lifestyle prescribed</span><br>\")")
	(salience -2)
	(title "Healthy"))

([Examples_Class13] of  Rule

	(lhs "(Goal action walk-to \n	argument1 ?place)\n(Monkey location ?loc \n	on-top-of ?surf\n	((not= ?loc ?place)\n	 (not= ?surf floor)))\n(not Goal action on \n	argument1 floor)")
	(rhs "(asser Goal action on \n	argument1 floor)")
	(salience 0)
	(title "Get-on-floor-to-walk"))

([Examples_Class130000] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(document [Examples_Class30000])
	(facts [Examples_Class30001])
	(mode run)
	(rule-sets
		[Examples_Class40012]
		[Examples_Class70000]
		[Examples_Class110000])
	(steps 1)
	(title "Patient Run"))

([Examples_Class130001] of  RuleSet

	(rules
		[Examples_Class150001]
		[Examples_Class150002])
	(templates
		[Disease]
		[Patient]
		[Visit])
	(title "Visit"))

([Examples_Class140000] of  Visit
)

([Examples_Class140001] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(facts [Examples_Class30023])
	(mode run)
	(rule-sets [Examples_Class20001])
	(steps 1)
	(title "Auto Run"))

([Examples_Class15] of  RuleSet

	(rules
		[Examples_Class10000]
		[Examples_Class16]
		[Examples_Class17]
		[Examples_Class18]
		[Examples_Class19]
		[Examples_Class20]
		[Examples_Class21]
		[Examples_Class22]
		[Examples_Class0]
		[Examples_Class1]
		[Examples_Class2]
		[Examples_Class3]
		[Examples_Class4]
		[Examples_Class5]
		[Examples_Class6]
		[Examples_Class7]
		[Examples_Class8]
		[Examples_Class9]
		[Examples_Class10]
		[Examples_Class11]
		[Examples_Class13]
		[Examples_Class10015]
		[Examples_Class10016]
		[Examples_Class10017]
		[Examples_Class10018]
		[Examples_Class10019]
		[Examples_Class10020]
		[Examples_Class10021]
		[Examples_Class10022]
		[Examples_Class10023]
		[Examples_Class10024])
	(templates
		[Chest]
		[Goal]
		[Monkey]
		[Thing])
	(title "Mab"))

([Examples_Class150000] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(facts [Examples_Class140000])
	(mode run)
	(rule-sets
		[Examples_Class40012]
		[Examples_Class70000]
		[Examples_Class110000]
		[Examples_Class130001])
	(steps 1)
	(title "Visit Run"))

([Examples_Class150001] of  Rule

	(lhs "?v (Visit name ?n\n	(nil? ?n))")
	(rhs "(let [n (ru.rules/input \"What is a name of a next patient?\" \"\" nil)\n       d (str (java.util.Date.))]\n  (modify ?v name n\n	date d)\n  (asser Patient))")
	(salience 3)
	(title "StartVisit"))

([Examples_Class150002] of  Rule

	(lhs "(Visit name ?n date ?d)\n(Patient fever ?f\n	innoculated ?i\n	rash ?r\n	sore_throat ?st\n	spots ?s\n	temperature ?t)\n(Disease diagnosis ?ds\n	treatment ?tr)")
	(rhs "(let [mp {:DIRTYP \"History\"\n	\"name\" ?n\n	\"date\" ?d\n	\"fever\" ?f\n	\"innoculated\" ?i\n	\"rash\" ?r\n	\"sore_throat\" ?st\n	\"spots\" ?s\n	\"temperature\" ?t\n	\"diagnosis\" ?ds\n	\"treatment\" ?tr\n	:DEPTH 0}\n       _ (println [:MP mp])\n       ins (protege.core/mti mp)]\n  (ru.rules/assert-instances [ins])\n  (.show protege.core/*prj* ins))")
	(salience -3)
	(title "WriteHistory"))

([Examples_Class16] of  Rule

	(lhs "(Goal action unlock \n	argument1 ?chest)\n?monkey (Monkey location ?place \n	on-top-of ?on \n	holding ?chest)\n?thing (Thing name ?chest)")
	(rhs "(ru.rules/display (str \"Monkey throws the \" ?chest \" off the \" ?on \" onto the floor.\" ))\n(modify ?monkey holding blank)\n(modify ?thing location ?place \n	on-top-of floor)")
	(salience 0)
	(title "Put-chest-on-floor"))

([Examples_Class160001] of  RuleSet

	(rules
		[Examples_Class150001]
		[Examples_Class30006])
	(templates
		[Disease]
		[Patient]
		[Visit])
	(title "Visit2"))

([Examples_Class17] of  Rule

	(lhs "(Goal action unlock \n	argument1 ?obj)\n(Thing name ?obj \n	on-top-of floor)\n(Chest name ?obj \n	unlocked-by ?key)\n(Monkey holding ?thing\n      (not= ?thing ?key))\n(not Goal action hold argument1 ?key)")
	(rhs "(asser Goal action hold \n	argument1 ?key)")
	(salience 0)
	(title "Get-key-to-unlock"))

([Examples_Class18] of  Rule

	(lhs "(Goal action unlock \n	argument1 ?chest)\n(Monkey location ?mplace \n	holding ?key)\n(Thing name ?chest \n	location ?cplace \n	on-top-of floor\n	(not= ?cplace ?mplace))\n(Chest name ?chest \n	unlocked-by ?key)\n(not Goal action walk-to \n	argument1 ?cplace)")
	(rhs "(asser Goal action walk-to \n	argument1 ?cplace)")
	(salience 0)
	(title "Move-to-chest-with-key"))

([Examples_Class180004] of  CloFuncall

	(source "(ru.rules/f 9)"))

([Examples_Class19] of  Rule

	(lhs "?goal (Goal action unlock \n	argument1 ?name)\n?chest (Chest name ?name \n	contents ?contents \n	unlocked-by ?key)\n(Thing name ?name \n	location ?place \n	on-top-of ?on)\n(Monkey location ?place \n	on-top-of ?on \n	holding ?key)")
	(rhs "(ru.rules/display (str \"Monkey opens the \" ?name \" with the \" ?key \" revealing the \" ?contents \".\" ))\n(modify ?chest contents nothing)\n(asser Thing name ?contents \n	location ?place \n	on-top-of ?name \n	weight light)\n(retract ?goal)")
	(salience 0)
	(title "Unlock-chest-with-key"))

([Examples_Class2] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ?surf \n	weight light\n	(not= ?surf ceiling))\n(Monkey location ?loc\n	(not= ?loc ?place))\n(not Goal action walk-to argument1 ?place)")
	(rhs "(asser Goal action walk-to argument1 ?place)")
	(salience 0)
	(title "Walk-to-hold"))

([Examples_Class20] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Chest name ?chest \n	contents ?obj)\n(not Goal action unlock \n	argument1 ?chest)")
	(rhs "(asser Goal action unlock argument1 ?chest)")
	(salience 0)
	(title "Unlock-chest-to-hold-object"))

([Examples_Class20000] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(facts
		[Examples_Class10025]
		[Examples_Class10026]
		[Examples_Class10028]
		[Examples_Class10029]
		[Examples_Class10030]
		[Examples_Class10035]
		[Examples_Class10031]
		[Examples_Class10036]
		[Examples_Class10032]
		[Examples_Class10033]
		[Examples_Class10037]
		[Examples_Class10034]
		[Examples_Class10027])
	(mode step)
	(rule-sets [Examples_Class15])
	(steps 1)
	(title "Mab Run"))

([Examples_Class20001] of  RuleSet

	(rules
		[Examples_Class20005]
		[Examples_Class30009]
		[Examples_Class30010]
		[Examples_Class30011]
		[Examples_Class30012]
		[Examples_Class30013]
		[Examples_Class30014]
		[Examples_Class30015]
		[Examples_Class30016]
		[Examples_Class30017]
		[Examples_Class30018]
		[Examples_Class30019]
		[Examples_Class30020]
		[Examples_Class30021]
		[Examples_Class30022]
		[Examples_Class30024])
	(templates
		[Working-state]
		[Charge-state]
		[Repair]
		[Rotation-state]
		[Spark-state]
		[Stage]
		[Symptom])
	(title "Auto"))

([Examples_Class20005] of  Rule

	(lhs "(Working-state engine normal)")
	(rhs "(asser Repair advice \"No repair needed.\")\n(asser Spark-state engine normal)\n(asser Charge-state battery charged)\n(asser Rotation-state engine rotates)")
	(salience 8)
	(title "Normal-engine-state-conclusions"))

([Examples_Class21] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ceiling \n	weight light)\n(not Thing name ladder \n	location ?place)\n(not Goal action move \n	argument1 ladder \n	argument2 ?place)")
	(rhs "(asser Goal action move \n	argument1 ladder \n	argument2 ?place)")
	(salience 0)
	(title "Use-ladder-to-hold"))

([Examples_Class22] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ceiling \n	weight light)\n(Thing name ladder \n	location ?place \n	on-top-of floor)\n(Monkey on-top-of ?s\n      (not= ?s ladder))\n(not Goal action on argument1 ladder)")
	(rhs "(asser Goal action on \n	argument1 ladder)")
	(salience 0)
	(title "Climb-ladder-to-hold"))

([Examples_Class3] of  Rule

	(lhs "(Goal action hold \n	argument1 ?obj)\n(Thing name ?obj \n	location ?place \n	on-top-of ?on \n	weight light)\n(Monkey location ?place \n	on-top-of ?on \n	holding ?hold\n	(not= ?hold blank))\n(not Goal action hold argument1 blank)")
	(rhs "(asser Goal action hold argument1 blank)")
	(salience 0)
	(title "Drop-to-hold"))

([Examples_Class30000] of  Document

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n    <b>Initial CLIPS file Patient.clp (<a href=\"http://www.csis.ysu.edu/~john/824/examples/EMH9.txt\">http://www.csis.ysu.edu/~john/824/examples/EMH9.txt</a>)</b><br><br>; This is a very simple example of a CLIPS knowledge base,<br>; just using the pattern matching to create new knowledge.<br><br>; We have modified this to use binding to prompt users for input.<br><br>; In this example, instead of having separate facts, we will have<br>; a single Patient template which stores all information about<br>; the patient. We will then modify this fact as knowledge is added.<br><br>; Note that (unless we do some other things) this only allows one value<br>; per slot, which is why we will keep diganosis and treatment separate.<br><br>(deftemplate Patient (slot temperature)<br>(slot spots)<br>(slot rash)<br>(slot sore_throat)<br>(slot innoculated)<br>(slot fever))<br><br>; One thing that we will need is an initial patient fact, since<br>; we will modify this instead of creating new facts.<br><br>(deffacts Initial<br>(Patient ))<br><br>; Our first rules will be used to gather symptoms from the user.<br>; Note that there are no conditions, which meand that they will<br>; always fire. The action is to print a prompt, bind the (read)<br>; to a variable, and then assert a new fact using that value. Note<br>; that one of thes tests is for temperature to be nil, which means<br>; that temperature is not yet known (if this is left out, the shell<br>; will loop).<br><br>; For each of these rules, we bind the Patient fact to a variable<br>; and then modfiy it.<br><br>(defrule GetTemperature<br>(declare (salience 500))<br>?p &lt;- (Patient (temperature nil))<br>=&gt;<br>(printout t &quot;Enter patient temperature: &quot;)<br>(bind ?response (read))<br>(modify ?p (temperature ?response)))<br><br>(defrule GetSpots<br>(declare (salience 500))<br>?p &lt;- (Patient (spots nil))<br>=&gt;<br>(printout t &quot;Does the patient have spots (yes or no): &quot;)<br>(bind ?response (read))<br>(modify ?p (spots ?response)))<br><br>(defrule GetRash<br>(declare (salience 500))<br>?p &lt;- (Patient (rash nil))<br>=&gt;<br>(printout t &quot;Does the patient have a rash (yes or no): &quot;)<br>(bind ?response (read))<br>(modify ?p (rash ?response)))<br><br>(defrule GetSoreThroat<br>(declare (salience 500))<br>?p &lt;- (Patient (sore_throat nil))<br>=&gt;<br>(printout t &quot;Does the patient have a sore throat (yes or no): &quot;)<br>(bind ?response (read))<br>(modify ?p (sore_throat ?response)))<br><br>; We can also ask for certain information only if necessary. For example,<br>; it doesn't make sense to ask whether the patient has been innoculated<br>; unless there is a possiblity of measles.<br><br>(defrule GetInnoculated<br>(declare (salience 500))<br>?p &lt;- (Patient (fever high) (spots yes) (innoculated nil))<br>=&gt;<br>(printout t &quot;Has the patient been innoculated for measles (yes or no): &quot;)<br>(bind ?response (read))<br>(modify ?p (innoculated ?response)))<br><br>; Rules for concluding fever from temperature.<br><br>; Note that these rules find the patient temperature, and then bind<br>; it to ?t. The next part uses the test keyword to evaluate the<br>; conditional expression as true or false.<br><br>; The numberp is a test to check whether the argument is a numeric value.<br>; This is placed before the numeric comparison to keep the compiler from<br>; complaining that the initial patient fact does not have a numeric<br>; temperature value.<br><br>(defrule Fever1<br>?p &lt;- (Patient (temperature ?t) (fever nil))<br>(test (numberp ?t))<br>(test (&gt;= ?t 101))<br>=&gt;<br>(modify ?p (fever high))<br>(printout t &quot;High fever diagnosed&quot; crlf))<br><br>(defrule Fever2<br>?p &lt;- (Patient (temperature ?t) (fever nil))<br>(test (numberp ?t))<br>(test (and (&lt; ?t 101) (&gt; ?t 98.6)))<br>=&gt;<br>(modify ?p (fever mild))<br>(printout t &quot;Mild fever diagnosed&quot; crlf))<br><br>; Rules for determining diagnosis on the basis of patient symptoms<br>; Salience added to give this rule priority<br><br>(defrule Measles<br>(declare (salience 100))<br>(Patient (spots yes) (innoculated no) (fever high))<br>=&gt;<br>(assert (diagnosis measles))<br>(printout t &quot;Measles diagnosed&quot; crlf))<br><br>; Modified to only fire if no measles<br><br>(defrule Allergy1<br>(declare (salience -100))<br>(and (Patient (spots yes))<br>(not (diagnosis measles)))<br>=&gt;<br>(assert (diagnosis allergy))<br>(printout t &quot;Allergy diagnosed from spots and lack of measles&quot; crlf))<br><br>(defrule Allergy2<br>(Patient (rash yes))<br>=&gt;<br>(assert (diagnosis allergy))<br>(printout t &quot;Allergy diagnosed from rash&quot; crlf))<br><br>(defrule Flu<br>(Patient (sore_throat yes) (fever mild|high))<br>=&gt;<br>(assert (diagnosis flu))<br>(printout t &quot;Flu diagnosed&quot; crlf))<br><br>; Rules for recommedaing treatments on the basis of<br>; Diagnosis facts created.<br><br>(defrule Penicillin<br>(diagnosis measles)<br>=&gt;<br>(assert (treatment pennicillin))<br>(printout t &quot;Penicillin prescribed&quot; crlf))<br><br>(defrule Allergy_pills<br>(diagnosis allergy)<br>=&gt;<br>(assert (treatment allergy_shot))<br>(printout t &quot;Allergy shot prescribed&quot; crlf))<br><br>(defrule Bed_rest<br>(diagnosis flu)<br>=&gt;<br>(assert (treatment bed_rest))<br>(printout t &quot;Bed rest prescribed&quot; crlf))<br><br>; Finally, if there are no diagnosis facts, we print the<br>; metaknowledge that the expert system does not apply to<br>; this problem, and another expert must be consulted. Note<br>; that the salience must be set to make this the last rule<br>; checked.<br><br>(defrule None<br>(declare (salience -100))<br>(not (diagnosis ?))<br>=&gt;<br>(printout t &quot;No diagnosis possible -- consult human expert&quot; crlf))</body>\n</html>"))

([Examples_Class30001] of  Patient
)

([Examples_Class30006] of  Rule

	(lhs "(Visit name ?n date ?d)\n?p (Patient)\n?d (Disease)")
	(rhs "(let [pins (ru.rules/mk-instance (fact-id ?p))\n        dins (ru.rules/mk-instance (fact-id ?d))\n        ins (ru.rules/mk-instance \n	\"History2\"\n	{\"name\" ?n\n	 \"date\" ?d\n	 \"patient-data\" pins\n	 \"disease\" dins}\n	0)]\n  (ru.rules/assert-instances [ins])\n  (.show protege.core/*prj* ins))")
	(salience -3)
	(title "WriteHistory2"))

([Examples_Class30009] of  Rule

	(lhs "(Working-state engine unsatisfactory)")
	(rhs "(asser Charge-state battery charged)\n(asser Rotation-state engine rotates)")
	(salience 8)
	(title "Unsatisfactory-engine-state-conclusions"))

([Examples_Class30010] of  Rule

	(lhs "(Stage value diagnose)\n(not Working-state engine ?ws)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Does the engine start?\")\n    (if (ru.rules/confirm \"Does the engine run normally?\")\n       (asser Working-state engine normal)\n       (asser Working-state engine unsatisfactory))\n    (asser Working-state engine does-not-start))")
	(salience 8)
	(title "Determine-engine-state"))

([Examples_Class30011] of  Rule

	(lhs "(Working-state engine does-not-start)\n(not Rotation-state engine ?rs)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Does the engine rotate?\")\n     (do\n       (asser Rotation-state engine rotates)\n       (asser Spark-state engine irregular-spark))\n     (do\n       (asser Rotation-state engine does-not-rotate)\n       (asser Spark-state engine does-not-spark)))")
	(salience 0)
	(title "Determine-rotation-state"))

([Examples_Class30012] of  Rule

	(lhs "(Working-state engine unsatisfactory)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Is the engine sluggish?\")\n     (asser Repair advice \"Clean the fuel line.\"))")
	(salience 3)
	(title "Determine-sluggishness"))

([Examples_Class30013] of  Rule

	(lhs "(Working-state engine unsatisfactory)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Does the engine misfire?\")\n     (do\n       (asser Repair advice \"Point gap adjustment.\")\n       (asser Spark-state engine irregular-spark)))")
	(salience 2)
	(title "Determine-misfiring"))

([Examples_Class30014] of  Rule

	(lhs "(Working-state engine unsatisfactory)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Does the engine knock?\")\n     (asser Repair advice \"Timing adjustment.\"))")
	(salience 1)
	(title "Determine-knocking"))

([Examples_Class30015] of  Rule

	(lhs "(Working-state engine unsatisfactory)\n(not Symptom engine ?se)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Is the output of the engine low?\")\n     (asser Symptom engine low-output)\n     (asser Symptom engine not-low-output))")
	(salience 0)
	(title "Determine-low-output"))

([Examples_Class30016] of  Rule

	(lhs "(Working-state engine does-not-start)\n(Rotation-state engine rotates)\n(not Repair advice ?a)")
	(rhs "(if (not (ru.rules/confirm \"Does the tank have any gas in it?\"))\n     (asser Repair advice \"Add gas.\"))")
	(salience 0)
	(title "Determine-gas-level"))

([Examples_Class30017] of  Rule

	(lhs "(Rotation-state engine does-not-rotate)\n(not Charge-state battery ?cs)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Is the battery charged?\")\n     (asser Charge-state battery charged)\n     (do\n       (asser Repair advice \"Charge the battery.\")\n       (asser Charge-state battery dead)))")
	(salience 0)
	(title "Determine-battery-state"))

([Examples_Class30018] of  Rule

	(lhs "(Working-state engine does-not-start)\n(Spark-state engine irregular-spark)\n(not Repair advice ?a)")
	(rhs "(condp = (ru.rules/select \"What is the surface state of the points?\" \n	'[normal burned contaminated])\n     'burned (asser Repair advice \"Replace the points.\")\n     'contaminated (asser Repair advice \"Clean the points.\")\n     'normal)")
	(salience 8)
	(title "Determine-point-surface-state-1"))

([Examples_Class30019] of  Rule

	(lhs "(Symptom engine low-output)\n(not Repair advice ?a)")
	(rhs "(condp = (ru.rules/select \"What is the surface state of the points?\" \n	'[normal burned contaminated])\n     'burned (asser Repair advice \"Replace the points.\")\n     'contaminated (asser Repair advice \"Clean the points.\")\n     'normal)")
	(salience 0)
	(title "Determine-point-surface-state-2"))

([Examples_Class30020] of  Rule

	(lhs "(Working-state engine does-not-start)\n(Spark-state engine does-not-spark)\n(Charge-state battery charged)\n(not Repair advice ?a)")
	(rhs "(if (ru.rules/confirm \"Is the conductivity test for the ignition coil positive?\")\n     (asser Repair advice \"Repair the distributor lead wire.\")\n     (asser Repair advice \"Replace the ignition coil.\"))")
	(salience 0)
	(title "Determine-conductivity-test"))

([Examples_Class30021] of  Rule

	(lhs "(Stage value diagnose)\n(not Repair advice ?a)")
	(rhs "(asser Repair advice \"Take your car to a mechanic.\")")
	(salience -8)
	(title "No-repairs"))

([Examples_Class30022] of  Rule

	(lhs "(Repair advice ?a)")
	(rhs "(ru.rules/display (str \"Suggested Repair: <b>\" ?a \"</b>\"))")
	(salience -8)
	(title "Print-repair"))

([Examples_Class30023] of  Stage

	(value "start"))

([Examples_Class30024] of  Rule

	(lhs "?s (Stage value start)")
	(rhs "(ru.rules/display (str \"<br><br>The Engine Diagnosis Expert System. Date: \" (java.util.Date.) \"<br>\"))\n(modify ?s value diagnose)")
	(salience 0)
	(title "System-banner"))

([Examples_Class4] of  Rule

	(lhs "?goal (Goal action hold \n	argument1 ?name)\n?thing (Thing name ?name \n	location ?place \n	on-top-of ?on \n	weight light)\n?monkey (Monkey location ?place \n	on-top-of ?on \n	holding blank)")
	(rhs "(ru.rules/display (str \"Monkey grabs the \" ?name \".\" ))\n(modify ?thing location held \n	on-top-of held)\n(modify ?monkey holding ?name)\n(retract ?goal)")
	(salience 0)
	(title "Grab-object"))

([Examples_Class40000] of  Rule

	(lhs "?p (Patient temperature ?t\n	(nil? ?t))")
	(rhs "(modify ?p temperature (ru.rules/input \n	\"Enter patient temperature (Fahrenheit)\" \n	0 \n	#(and (number? %) (< 86 % 119))))")
	(salience 2)
	(title "GetTemperature"))

([Examples_Class40011] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(facts [Examples_Class140000])
	(mode run)
	(rule-sets
		[Examples_Class40012]
		[Examples_Class70000]
		[Examples_Class110000]
		[Examples_Class160001])
	(steps 1)
	(title "Visit Run 2"))

([Examples_Class40012] of  RuleSet

	(rules
		[Examples_Class40000]
		[Examples_Class60000]
		[Examples_Class60001]
		[Examples_Class60002]
		[Examples_Class60003])
	(templates [Patient])
	(title "Symptoms"))

([Examples_Class5] of  Rule

	(lhs "?goal (Goal action hold argument1 blank)\n?monkey (Monkey location ?place \n	on-top-of ?on \n	holding ?name\n	(not= ?name blank))\n?thing (Thing name ?name)")
	(rhs "(ru.rules/display (str \"Monkey drops the \" ?name \".\" ))\n(modify ?monkey holding blank)\n(modify ?thing location ?place \n	on-top-of ?on)\n(retract ?goal)")
	(salience 0)
	(title "Drop-object"))

([Examples_Class50000] of  CloFuncall

	(source "(ru.rules/pp :all)"))

([Examples_Class6] of  Rule

	(lhs "(Goal action move \n	argument1 ?obj \n	argument2 ?place)\n(Chest name ?chest \n	contents ?obj)\n(not Goal action unlock argument1 ?chest)")
	(rhs "(asser Goal action unlock \n	argument1 ?chest)")
	(salience 0)
	(title "Unlock-chest-to-move-object"))

([Examples_Class60000] of  Rule

	(lhs "?p (Patient spots ?v\n	(nil? ?v))")
	(rhs "(modify ?p spots (ru.rules/confirm \"Does the patient have spots?\"))")
	(salience 2)
	(title "GetSpots"))

([Examples_Class60001] of  Rule

	(lhs "?p (Patient rash ?v\n	(nil? ?v))")
	(rhs "(modify ?p rash (ru.rules/confirm \"Does the patient have a rash?\"))")
	(salience 2)
	(title "GetRash"))

([Examples_Class60002] of  Rule

	(lhs "?p (Patient sore_throat ?v\n	(nil? ?v))")
	(rhs "(modify ?p sore_throat (ru.rules/confirm \"Does the patient have a sore throat?\"))\n(ru.rules/display (str \"<br><br><b>The Patient Treatment Expert System.</b> Date: \" (java.util.Date.) \"<br>\"))")
	(salience 2)
	(title "GetSoreThroat"))

([Examples_Class60003] of  Rule

	(lhs "?p (Patient fever high \n	spots true\n	innoculated ?v\n	(nil? ?v))")
	(rhs "(modify ?p innoculated (ru.rules/confirm \"Has the patient been innoculated for measles?\"))")
	(salience 2)
	(title "GetInnoculated"))

([Examples_Class7] of  Rule

	(lhs "(Goal action move \n	argument1 ?obj \n	argument2 ?place)\n(Thing name ?obj \n	location ?loc \n	weight light\n	(not= ?loc ?place))\n(Monkey holding ?hold\n	(not= ?hold ?obj))\n(not Goal action hold \n	argument1 ?obj)")
	(rhs "(asser Goal action hold \n	argument1 ?obj)")
	(salience 0)
	(title "Hold-object-to-move"))

([Examples_Class70000] of  RuleSet

	(rules
		[Examples_Class70001]
		[Examples_Class80000]
		[Examples_Class90000]
		[Examples_Class100000]
		[Examples_Class100001]
		[Examples_Class100002])
	(templates
		[Disease]
		[Patient])
	(title "Diagnose"))

([Examples_Class70001] of  Rule

	(lhs "?p (Patient fever ?v\n	temperature ?t\n	((number? ?t)\n	 (>= ?t 101)\n	 (nil? ?v)))")
	(rhs "(modify ?p fever high)\n(ru.rules/display \"<span style='color:red'>High fever diagnosed</span><br>\")")
	(salience 0)
	(title "FeverHigh"))

([Examples_Class8] of  Rule

	(lhs "(Goal action move \n	argument1 ?obj \n	argument2 ?place)\n(Monkey location ?loc \n	holding ?obj\n	(not= ?loc ?place))\n(not Goal action walk-to \n	argument1 ?place)")
	(rhs "(asser Goal action walk-to \n	argument1 ?place)")
	(salience 0)
	(title "Move-object-to-place"))

([Examples_Class80000] of  Rule

	(lhs "?p (Patient fever ?v\n	temperature ?t\n	((number? ?t)\n	 (< 98.6 ?t 101)\n	 (nil? ?v)))")
	(rhs "(modify ?p fever mild)\n(ru.rules/display \"Mild fever diagnosed<br>\")")
	(salience 0)
	(title "FeverMild"))

([Examples_Class9] of  Rule

	(lhs "?goal (Goal action move \n	argument1 ?name \n	argument2 ?place)\n?monkey (Monkey location ?place \n	holding ?obj)\n?thing (Thing name ?name \n	weight light)")
	(rhs "(ru.rules/display (str \"Monkey drops the \" ?name \".\" ))\n(modify ?monkey holding blank)\n(modify ?thing location ?place \n	on-top-of floor)\n(retract ?goal)")
	(salience 0)
	(title "Drop-object-once-moved"))

([Examples_Class90000] of  Rule

	(lhs "(Patient fever high\n	spots true \n	innoculated false)")
	(rhs "(asser Disease diagnosis measles)\n(ru.rules/display \"Measles diagnosed<br>\")")
	(salience 1)
	(title "Measles"))
