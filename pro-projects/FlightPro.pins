; Thu May 13 18:03:49 MSK 2021
; 
;+ (version "3.5")
;+ (build "Build 663")

([FlightPro_Class0] of  CloVar

	(source "(volatile! {:view 0\n               :pitch 0\n               :roll 0})")
	(title "CAMERA"))

([FlightPro_Class1] of  CloNamespace

	(source "(:require\n  [calc.dynamic :as dyn]\n  [calc.geo :as geo])")
	(title "czm.core"))

([FlightPro_Class10000] of  ShareOnto

	(but-deep-copy "Deep Copy Instance/share.onto/deep-copy")
	(but-del-fil "Delete Filtered Instances/share.onto/delfil")
	(but-del-unref "Delete Unreferenced/share.onto/delete-unref")
	(but-find-unref "Find Unreferenced/share.onto/find-unref")
	(but-load-prj "Load Source Project/share.onto/load-src-prj")
	(but-shal-copy "Shallow Copy Instances/share.onto/shal-copy")
	(source-project "DefaultKnowledgeBase(ProServer)"))

([FlightPro_Class100000] of  WorkingPrograms

	(cloPrograms
		[FlightPro_Class390002]
		[FlightPro_Class230004]
		[FlightPro_Class70002]
		[FlightPro_Class20025]
		[FlightPro_Class480000]
		[FlightPro_Class180002]
		[RuleEngine_Class30000]
		[Example_Class10000]
		[GeoNamesWikipedia_Class0]
		[OSMData_Class1]
		[FlightPro_Class670000]
		[FlightPro_Class400000]
		[FlightPro_Class20000]
		[FlightPro_Class280000])
	(title "FlightPro Programs"))

([FlightPro_Class1000000] of  Airport

	(altitude 116)
	(coord 40.08011 116.5845)
	(country "China")
	(iata "PEK")
	(icao "ZBAA")
	(runways 0)
	(title "Beijing Capital International Airport"))

([FlightPro_Class1000001] of  CloFunction

	(source "(GET (str (:command URL) \"new-czml-doc\")\n	{:handler (fn [response])\n	 :error-handler error-handler})")
	(title "new-czml-doc []"))

([FlightPro_Class1000014] of  Bank

	(big-arc 64)
	(factor 2)
	(middle-arc 16)
	(middle-bank 12)
	(small-arc 2)
	(title "Basic Bank"))

([FlightPro_Class1000017] of  CloFunction

	(source "(let [mp (itm inst 1)]\n  (println :update-dynamics mp)\n  (asp/pump-in (:directives CHN)\n	{:directive :dynamics\n	 :dynamo mp}))")
	(title "update-dynamics [hm inst]"))

([FlightPro_Class1000020] of  AirplaneDynamics

	(bank [FlightPro_Class1000014])
	(but-upd-dyn "Update Dynamics/pro.commands/update-dynamics")
	(elevator-step 4)
	(elevator-time-out 997)
	(propeller-step 1)
	(propeller-time-out 2003)
	(rudder-step 3)
	(rudder-time-out 1017)
	(title "Basic Dynamics"))

([FlightPro_Class1000021] of  CloFunction

	(source "(let [bk (dm \"bank\")\n       bk [(bk \"middle-bank\")\n             (bk \"small-arc\")\n             (bk \"middle-arc\")\n             (bk \"big-arc\")\n             (bk \"factor\")]]\n  (vswap! CARRIER assoc :bank-params bk)\n  (vswap! CARRIER assoc-in [:propeller :step] (dm \"propeller-step\"))\n  (vswap! CARRIER assoc-in [:propeller :time-out] (dm \"propeller-time-out\"))\n  (vswap! CARRIER assoc-in [:elevator :step] (dm \"elevator-step\"))\n  (vswap! CARRIER assoc-in [:elevator :time-out] (dm \"elevator-time-out\"))\n  (vswap! CARRIER assoc-in [:rudder :step] (dm \"rudder-step\"))\n  (vswap! CARRIER assoc-in [:rudder :time-out] (dm \"rudder-time-out\")))\n(println :new-dynamics @CARRIER)")
	(title "dynamics [dm]"))

([FlightPro_Class1000022] of  AirplaneDynamics

	(bank [FlightPro_Class1000023])
	(but-upd-dyn "Update Dynamics/pro.commands/update-dynamics")
	(elevator-step 5)
	(elevator-time-out 999)
	(propeller-step 2)
	(propeller-time-out 1004)
	(rudder-step 2)
	(rudder-time-out 988)
	(title "Dynamics2"))

([FlightPro_Class1000023] of  Bank

	(big-arc 82)
	(factor 3)
	(middle-arc 20)
	(middle-bank 9)
	(small-arc 3)
	(title "Bank2"))

([FlightPro_Class10001] of  CloFunction

	(source "(let [pitch (:pitch @CAMERA)\n       roll (:roll @CAMERA)\n       head (norm-crs (+ crs (:view @CAMERA)))]\n  (if (> alt 0)\n    (fly-control lat lon alt head pitch roll per)\n    (do (def FLY-CTL [lat lon alt head pitch roll per])\n      (js/terraHeightRequest TERR-PROV lat lon terraHeightResponse))))")
	(title "fly-to [lat lon alt crs per]"))

([FlightPro_Class10002] of  CloFunction

	(source "(cond\n   (> x 360) (- x 360)\n   (< x 0) (+ x 360)\n   true x)")
	(title "norm-crs [x]"))

([FlightPro_Class100023] of  ClsRequired

	(cloFunctions
		[FlightPro_Class100026]
		[FlightPro_Class960000]
		[FlightPro_Class960001]
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class100028]
		[FlightPro_Class30026]
		[FlightPro_Class30027]
		[FlightPro_Class850004])
	(cloNamespace [FlightPro_Class100024])
	(cloVars
		[FlightPro_Class100029]
		[FlightPro_Class240000])
	(title "Carrier Movement"))

([FlightPro_Class100024] of  CloNamespace

	(source "(:require\n  [calc.dynamic :refer \n	[equalize\n	 course-closer\n	 step-closer]])")
	(title "carr.move"))

([FlightPro_Class100025] of  CloVar

	(source "(volatile! {:mode \"MANUAL\"\n               :coord [60 30]\n               :altitude 4000\n               :speed 160\n               :course 270\n               :status \"LEVEL\"\n               :step-hrs (double (/ (:carrier TIO) 3600000))\n               ;; [middle-bank small-arc middle-arc big-arc factor]\n               :bank-params [12 2 16 64 2]\n               :rudder {:target 0\n                            :step 3\n	    :accel 1\n                            :time-out 1017}\n               :elevator {:target 0\n                            :step 4\n	    :accel 1\n                            :time-out 997}\n               :propeller {:target 0\n                            :step 1\n	    :accel 1\n                            :time-out 2003}})")
	(title "CARRIER"))

([FlightPro_Class100026] of  CloFunction

	(source "(let [cosphi1 (js/Math.cos phi1)\n       sinphi1 (js/Math.sin phi1)\n       cosaz (js/Math.cos az)\n       sinaz (js/Math.sin az)\n       sinc (js/Math.sin c)\n       cosc (js/Math.cos c)\n       phi2 (js/Math.asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (js/Math.atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n  [phi2 lam2])")
	(title "spherical-between-js [phi1 lambda0 c az]"))

([FlightPro_Class100027] of  CloFunction

	(source "([carr]\n  (let [car @carr]\n    (set-turn-point carr (:coord car) (:course car) (:speed car))))\n([carr [lat lon] crs spd]\n  (vswap! carr assoc :turn-point\n    {:phi (* lat PID180)\n     :lam (* lon PID180)\n     :dir (* crs PID180)\n     :rdh (* spd NMRAD)\n     :clk 0}))")
	(title "set-turn-point"))

([FlightPro_Class100028] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (spherical-between-js (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class100029] of  CloVar

	(source "(/ Math.PI 180)")
	(title "PID180"))

([FlightPro_Class10003] of  CloFunction

	(source ";;(if (= (:terra terresp) \"yes\")\n;;  (set! (.-terrainProvider VIEWER) TERR-PROV))\n(def COCKPIT-HEIGHT (:cockpit-height terresp))\n(.add (.-dataSources VIEWER) CZM-SRC)\n(.addEventListener (js/EventSource. (str base-url \"czml/\")) \"czml\" cz-processor false)\n(println [:INIT-3D-VIEW :BASE base-url :TERRAIN terresp])")
	(title "init-3D-view [base-url terresp]"))

([FlightPro_Class1010000] of  CloFunction

	(source "(when (not= @status \"RUN\") \n  (vreset! status \"RUN\")\n  (go (do \n          (while (and (= @status \"RUN\")\n                            (proc-fn))\n                (<! (timeout time-out)))\n          (if (some? final-fun) (final-fun))\n          (vreset! status \"STOP\")))\n  @status)")
	(title "start-process [status proc-fn time-out final-fun]"))

([FlightPro_Class1020000] of  Rule

	(lhs "(Onboard callsign ?cs)\n(Flight age \"NEW\" \n	callsign ?cs\n	status ?sts)")
	(rhs "(es/onboard-status ?sts)")
	(salience -1)
	(title "af:OnboardStatus"))

([FlightPro_Class1020001] of  CloFunction

	(source "(asp/pump-in (:directives  cmd/CHN)\n	{:directive :onboard-status\n	 :status sts})")
	(title "onboard-status [sts]"))

([FlightPro_Class1030000] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 11)
	(feature "city")
	(lang "en")
	(lat 56.0458)
	(lng 12.6944)
	(rank 100)
	(summary "Helsingborg is a town and the seat of Helsingborg Municipality, Scania, Sweden. It had 97,122 inhabitants in 2010. Helsingborg is the centre of the northern part of western Scania. There is no formal metropolitan area, but the municipality of Helsingborg City and its neighbouring five municipalities (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/99000/thumb-98583-100.jpg")
	(title "Helsingborg")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsingborg"))

([FlightPro_Class1030001] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 106)
	(feature "adm1st")
	(lang "en")
	(lat 55.9953)
	(lng 13.4418)
	(rank 100)
	(summary "Scania, also known by its local name Skåne (in Swedish and in Scanian), is the southernmost province (landskap) of Sweden which consists of a peninsula on the southern tip of the Scandinavian Peninsula and some islands close to it. Scania is roughly equivalent to the modern Skåne County (Skåne län) (...)")
	(title "Scania")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Scania"))

([FlightPro_Class1030002] of  CloFunction

	(source "(let [osts (:status @CARRIER)\n       fptc (num-val (ctl/get-value \"pitch-val\"))]\n  (cond\n    (and (not= osts \"LEVEL\") (= nsts \"GROUND\")) (czm/camera :pitch fptc)\n    (and (not= osts \"LEVEL\") (= nsts \"LEVEL\")) (czm/camera :pitch fptc)\n    (and (not= osts \"CLIMB\") (= nsts \"CLIMB\"))\n	(cond \n	  (= (:view @czm/CAMERA) \"FORWARD\")  (czm/camera :pitch (+ fptc 6))\n	  (= (:view @czm/CAMERA) \"BACKWARD\") (czm/camera :pitch  (- fptc 6)))\n    (and (not= osts \"DESCEND\") (= nsts \"DESCEND\"))\n	(cond \n	  (= (:view @czm/CAMERA) \"FORWARD\")  (czm/camera :pitch (- fptc 6))\n	  (= (:view @czm/CAMERA) \"BACKWARD\") (czm/camera :pitch  (+ fptc 6))))\n  (vswap! CARRIER assoc :status nsts))")
	(title "adjust-pitch [nsts]"))

([FlightPro_Class1040002] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 1)
	(feature "city")
	(lang "en")
	(lat 55.8667)
	(lng 12.8333)
	(rank 100)
	(summary "Landskrona is a late medieval town located at the shores of Øresund, founded at the location of the former Danish fishing village Sønder Sæby in the province of Scania by king Erik VII of Pomerania early in the 15th century. In 1720 the town, like its province, became a formal part of Sweden (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/79000/thumb-78301-100.jpg")
	(title "Landskrona")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Landskrona"))

([FlightPro_Class1040003] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 68)
	(feature "city")
	(lang "en")
	(lat 55.8392)
	(lng 13.3039)
	(rank 100)
	(summary "Eslöv is a town and the seat of Eslöv Municipality, Skåne County, Sweden with 17,748 inhabitants in 2010. Eslöv is part of the Øresund Region and is today largely serving as a suburb of Lund and Malmö.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/101000/thumb-100135-100.jpg")
	(title "Eslöv")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Esl%C3%B6v"))

([FlightPro_Class1040004] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 41)
	(feature "adm2nd")
	(lang "en")
	(lat 56.05)
	(lng 12.7167)
	(rank 100)
	(summary "Helsingborg Municipality (Helsingborgs kommun) is a municipality in Skåne County in Sweden. Its seat is located in the city of Helsingborg, which is Sweden's eighth largest city. The municipality had a population of 132,011 on January 1, 2013, and the population is increasing with roughly 1500 (...)")
	(title "Helsingborg Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsingborg_Municipality"))

([FlightPro_Class1040005] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 10)
	(feature "city")
	(lang "en")
	(lat 56.2458)
	(lng 12.8667)
	(rank 100)
	(summary "Ängelholm is a locality and the seat of Ängelholm Municipality in Skåne County, Sweden with 39,612 inhabitants in 2010.  (...)")
	(title "Ängelholm")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%84ngelholm"))

([FlightPro_Class1040006] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 106)
	(feature "adm2nd")
	(lang "en")
	(lat 55.9953)
	(lng 13.4418)
	(rank 100)
	(summary "Skåne County , sometimes referred to as \"Scania County\" in English, is the southernmost county or län, of Sweden, basically corresponding to the traditional province Skåne. It borders the counties of Halland, Kronoberg and Blekinge. The seat of residence for the Skåne Governor is the town of Malmö (...)")
	(title "Skåne County")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sk%C3%A5ne_County"))

([FlightPro_Class1040007] of  WikiArticleDetails

	(butt-del-pois "Delete POIs/ext.data/delete-pois")
	(butt-return "Return to Flight/ext.data/ret-to-flight")
	(butt-show-pois "Show on Map/ext.data/show-on-map")
	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 3)
	(lang "en")
	(lat 56.0333)
	(lng 12.6167)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0)
	(rank 100)
	(summary "Helsingør , known in English as Elsinore, is a city in eastern Denmark. Helsingør had a population of 46,492 on 1 January 2015. database from Statistics Denmark It is the largest city and main shopping destination in North Zealand, with over a million visitors a year (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/120000/thumb-119897-100.jpg")
	(title "Helsingør")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsing%C3%B8r"))

([FlightPro_Class1040008] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "waterbody")
	(lang "en")
	(lat 55.7897)
	(lng 12.7508)
	(rank 100)
	(summary "Øresund is a strait separating Denmark from southern Sweden which is wide at its narrowest point between Helsingør in Denmark and Helsingborg in Sweden. The Øresund Region has 3.8 million inhabitants on the Danish and Swedish sides.Danish side province areas - http://www.dst (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/43000/thumb-42179-100.png")
	(title "Øresund")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%98resund"))

([FlightPro_Class1040009] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 38)
	(feature "adm1st")
	(lang "en")
	(lat 55.88)
	(lng 12.31)
	(rank 100)
	(summary "The Capital Region of Denmark is the easternmost administrative region of Denmark, established on January 1, 2007 as part of the 2007 Danish Municipal Reform, which replaced the traditional counties (Danish plural: amter, singular: amt) with five larger regions (...)")
	(title "Capital Region of Denmark")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Capital_Region_of_Denmark"))

([FlightPro_Class1040010] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 40)
	(feature "landmark")
	(lang "en")
	(lat 55.9292)
	(lng 12.3081)
	(rank 100)
	(summary "Hillerød is a Danish town with a population of 31,505 (1 January 2015) database from Statistics Denmark located in North Zealand. Hillerød is the administrative centre of Region Hovedstaden (Capital Region of Denmark), one of the five regions in Denmark, and is also the third-largest town in this (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/8000/thumb-7202-100.jpg")
	(title "Hillerød")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Hiller%C3%B8d"))

([FlightPro_Class1040011] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 22)
	(feature "city")
	(lang "en")
	(lat 56.5167)
	(lng 13.0333)
	(rank 100)
	(summary "Laholm is a locality and the seat of Laholm Municipality, Halland County, Sweden, with 6,150 inhabitants in 2010. Laholm is, despite its small population, for historical reasons often still referred to as a city (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/147000/thumb-146399-100.jpg")
	(title "Laholm")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Laholm"))

([FlightPro_Class1040012] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 25)
	(feature "city")
	(lang "en")
	(lat 56.4333)
	(lng 12.8333)
	(rank 98)
	(summary "Båstad is a locality and the seat of Båstad Municipality, Skåne County, Sweden with 4,961 inhabitants in 2010.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/73000/thumb-72435-100.jpg")
	(title "Båstad")
	(wikipediaUrl "http://en.wikipedia.org/wiki/B%C3%A5stad"))

([FlightPro_Class1040013] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 63)
	(feature "adm2nd")
	(lang "en")
	(lat 55.8333)
	(lng 13.3)
	(rank 98)
	(summary "Eslöv Municipality (Eslövs kommun) is one of 290 municipalities of Sweden, situated in Skåne County in southern Sweden. Its seat is located in the city of Eslöv. The present municipality was created in 1971, when the former City of Eslöv was amalgamated with a number of surrounding municipalities, (...)")
	(title "Eslöv Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Esl%C3%B6v_Municipality"))

([FlightPro_Class1040014] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 16)
	(feature "landmark")
	(lang "en")
	(lat 56.039)
	(lng 12.6218)
	(rank 98)
	(summary "Kronborg is a castle and stronghold in the town of Helsingør, Denmark. Immortalized as Elsinore in William Shakespeare's play Hamlet, Kronborg is one of the most important Renaissance castles in Northern Europe and has been added to UNESCO's World Heritage Sites list (2000) (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/83000/thumb-82312-100.jpg")
	(title "Kronborg")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kronborg"))

([FlightPro_Class1040015] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 15)
	(feature "city")
	(lang "en")
	(lat 55.7939)
	(lng 13.1133)
	(rank 98)
	(summary "Kävlinge is a locality and the seat of Kävlinge Municipality, Skåne County, Sweden with 9,049 inhabitants in 2010. In 1996, a train containing large amounts of ammonia derailed and around 9,000 people had to be evacuated from the area. This was the biggest evacuation operation in Swedish history (...)")
	(title "Kävlinge")
	(wikipediaUrl "http://en.wikipedia.org/wiki/K%C3%A4vlinge"))

([FlightPro_Class1040016] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DE")
	(elevation 11)
	(feature "adm2nd")
	(lang "en")
	(lat 56.25)
	(lng 12.85)
	(rank 97)
	(summary "Ängelholm Municipality (Ängelholms kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the city Ängelholm. In 1971 the City of Ängelholm was amalgamated with the rural municipalities Ausås, Barkåkra, Hjärnarp and Munka-Ljungby, thus creating a municipality of unitary (...)")
	(title "Ängelholm Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%84ngelholm_Municipality"))

([FlightPro_Class1040017] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 35)
	(feature "landmark")
	(lang "en")
	(lat 55.9344)
	(lng 12.3006)
	(rank 97)
	(summary "Frederiksborg Castle is a palatial complex in Hillerød, Denmark. It was built as a royal residence for King Christian IV of Denmark-Norway in the early 17th century, replacing an older castle acquired by Frederick II and becoming the largest Renaissance residence in Scandinavia (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/118000/thumb-117200-100.jpg")
	(title "Frederiksborg Castle")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Frederiksborg_Castle"))

([FlightPro_Class1040018] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PL")
	(elevation 61)
	(feature "city")
	(lang "en")
	(lat 55.9111)
	(lng 13.1083)
	(rank 97)
	(summary "Svalöv is a locality and the seat of Svalöv Municipality, Skåne County, Sweden with 3,633 inhabitants in 2010. It is around north of Malmö.  (...)")
	(title "Svalöv")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sval%C3%B6v"))

([FlightPro_Class1040019] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 22)
	(feature "adm2nd")
	(lang "en")
	(lat 56.5167)
	(lng 13.0333)
	(rank 97)
	(summary "Laholm Municipality (Laholms kommun) is a municipality in Halland County in southwest Sweden. The seat is located in Laholm. The amalgamation process during the local government reform in the 1970s took place in two steps (...)")
	(title "Laholm Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Laholm_Municipality"))

([FlightPro_Class1040020] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 28)
	(lang "en")
	(lat 55.811)
	(lng 12.4737)
	(rank 97)
	(summary "Rudersdal Municipality (Danish: Rudersdal Kommune) is a part suburban, part rural municipality (Danish, kommune) located on the northern outskirts of Copenhagen, Denmark. It covers an area of 73 km² and has a population of 55,080 (1 April 2014) (...)")
	(title "Rudersdal Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Rudersdal_Municipality"))

([FlightPro_Class1040021] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 1)
	(feature "adm2nd")
	(lang "en")
	(lat 55.8667)
	(lng 12.8333)
	(rank 97)
	(summary "Landskrona Municipality (Landskrona kommun) is a municipality in Skåne County in Sweden. Its seat is located in the city of Landskrona. The island of Ven was added to the City of Landskrona in 1959. The amalgamations leading to the present municipality took place in 1967, 1969 and 1974 (...)")
	(title "Landskrona Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Landskrona_Municipality"))

([FlightPro_Class1040022] of  WikiArticleDetails

	(butt-del-pois "Delete POIs/ext.data/delete-pois")
	(butt-return "Return to Flight/ext.data/ret-to-flight")
	(butt-show-pois "Show on Map/ext.data/show-on-map")
	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 40)
	(feature "isle")
	(lang "en")
	(lat 55.9075)
	(lng 12.7002)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0)
	(rank 97)
	(summary "Ven (Danish and older Swedish spelling Hven) is a small Swedish island in the Øresund strait, between Scania and Zealand (Denmark). It is part of Landskrona Municipality, Skåne County. The island has 371 inhabitants and an area of  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/53000/thumb-52711-100.jpg")
	(title "Ven (Sweden)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ven_%28Sweden%29"))

([FlightPro_Class1040023] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 8)
	(feature "city")
	(lang "en")
	(lat 56.1236)
	(lng 12.3014)
	(rank 97)
	(summary "Gilleleje is one of the main towns of the Gribskov municipality in Region Hovedstaden in Denmark. The town is at the northernmost point of Sjælland in Denmark. As of 1 January 2015, it has a population of 6,494. database from Statistics Denmark  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/140000/thumb-139478-100.jpg")
	(title "Gilleleje")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Gilleleje"))

([FlightPro_Class1040024] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DE")
	(elevation 9)
	(feature "city")
	(lang "en")
	(lat 56.2819)
	(lng 12.4958)
	(rank 97)
	(summary "Mölle is a locality situated in Höganäs Municipality, Skåne County, Sweden with 715 inhabitants in 2010. It is best known for its scenic harbour and its location adjacent to the Kullaberg Nature Reserve. Its harbour, situated on the Kattegat Strait, provides services for marine fishing, watersports (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/145000/thumb-144473-100.jpg")
	(title "Mölle")
	(wikipediaUrl "http://en.wikipedia.org/wiki/M%C3%B6lle"))

([FlightPro_Class1040025] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 32)
	(feature "city")
	(lang "en")
	(lat 55.8803)
	(lng 12.5081)
	(rank 97)
	(summary "Hørsholm is an affluent city on the Øresund coast approximately north of Copenhagen, Denmark. It covers most of Hørsholm Municipality and straddles the borders neighbouring Fredensborg-Humlebæk and Rudersdal Municipalities (...)")
	(title "Hørsholm")
	(wikipediaUrl "http://en.wikipedia.org/wiki/H%C3%B8rsholm"))

([FlightPro_Class1040026] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 7)
	(feature "adm2nd")
	(lang "en")
	(lat 56.2)
	(lng 12.5667)
	(rank 97)
	(summary "Höganäs Municipality (Höganäs kommun) is one of 290 municipalities of Sweden, in Skåne County in the southern part of the country. Its seat is located in the city of Höganäs. The rural municipality Höganäs, in which the first municipalsamhälle (a kind of borough managing matters of urban character) (...)")
	(title "Höganäs Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/H%C3%B6gan%C3%A4s_Municipality"))

([FlightPro_Class1040027] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 15)
	(feature "adm2nd")
	(lang "en")
	(lat 55.8)
	(lng 13.1167)
	(rank 96)
	(summary "Kävlinge Municipality (Kävlinge kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the town of Kävlinge.  (...)")
	(title "Kävlinge Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/K%C3%A4vlinge_Municipality"))

([FlightPro_Class1040028] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 39)
	(feature "city")
	(lang "en")
	(lat 56.05)
	(lng 12.9667)
	(rank 96)
	(summary "Billesholm is a locality situated in Bjuv Municipality, Skåne County, Sweden with 2,910 inhabitants in 2010.  (...)")
	(title "Billesholm")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Billesholm"))

([FlightPro_Class1040029] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 25)
	(feature "adm2nd")
	(lang "en")
	(lat 56.4333)
	(lng 12.8333)
	(rank 96)
	(summary "Båstad Municipality (Båstads kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the town of Båstad. The present municipality was established in 1971 when the market town (köping) Båstad was amalgamated with the surrounding rural municipalities (...)")
	(title "Båstad Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/B%C3%A5stad_Municipality"))

([FlightPro_Class1040030] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 59)
	(lang "en")
	(lat 56.3)
	(lng 12.4667)
	(rank 96)
	(summary "Kullaberg is a nature reserve situated on a peninsula of land protruding into the Kattegat in Höganäs Municipality near the town of Mölle in southwest Sweden. The site in the province of Skåne is an area of considerable biodiversity supporting a number of rare species and has been designated as an (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/51000/thumb-50483-100.jpg")
	(title "Kullaberg")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kullaberg"))

([FlightPro_Class1040031] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 34)
	(lang "en")
	(lat 56.1311)
	(lng 13.1275)
	(rank 96)
	(summary "Klippan (literally the Cliff) is a locality and the seat of Klippan Municipality, Skåne County, Sweden with 8,116 inhabitants in 2010.  (...)")
	(title "Klippan, Scania")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Klippan%2C_Scania"))

([FlightPro_Class1040032] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "SE")
	(elevation 33)
	(feature "city")
	(lang "en")
	(lat 56.1347)
	(lng 12.9472)
	(rank 96)
	(summary "Åstorp is a bimunicipal locality and the seat of Åstorp Municipality in Skåne County, Sweden with 9,488 inhabitants in 2010. It is also partly located in Ängelholm Municipality.  (...)")
	(title "Åstorp")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%85storp"))

([FlightPro_Class1040033] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 39)
	(feature "landmark")
	(lang "en")
	(lat 56.0494)
	(lng 12.7069)
	(rank 95)
	(summary "Olympia, sometimes referred to as Olympiastadion , is a football stadium in Helsingborg, Sweden. It was opened in 1898, but has been rebuilt both 1993 and 1997, and has a capacity of 17,200 (9,673 seated and about 7,500 ground attendance stands) (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/56000/thumb-55851-100.jpg")
	(title "Olympia (Helsingborg)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Olympia_%28Helsingborg%29"))

([FlightPro_Class1040034] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 64)
	(feature "adm2nd")
	(lang "en")
	(lat 55.9167)
	(lng 13.1167)
	(rank 95)
	(summary "Svalöv Municipality (Svalövs kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the town Svalöv. The local government reform of 1952 grouped the 15 original entities into six larger municipalities (...)")
	(title "Svalöv Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sval%C3%B6v_Municipality"))

([FlightPro_Class1040035] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 52)
	(feature "city")
	(lang "en")
	(lat 55.8667)
	(lng 12.3667)
	(rank 95)
	(summary "Allerød Kommune is a municipality (Danish, kommune) on the island of Zealand (Sjælland) in eastern Denmark. The municipality covers an area of 67 km², and has a population of 24,201 (1 April 2014). Its mayor is Jørgen Johansen, a member of the Conservative People's Party (Det Konservative (...)")
	(title "Allerød Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Aller%C3%B8d_Municipality"))

([FlightPro_Class1040036] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 80)
	(lang "en")
	(lat 55.9983)
	(lng 12.9779)
	(rank 95)
	(summary "There are 72 listed buildings (Swedish: byggnadsminne) in Skåne County.  (...)")
	(title "Listed buildings in Skåne County")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Listed_buildings_in_Sk%C3%A5ne_County"))

([FlightPro_Class1040037] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 37)
	(feature "adm2nd")
	(lang "en")
	(lat 56.1333)
	(lng 13.1333)
	(rank 94)
	(summary "Klippan Municipality (Klippans kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the town of Klippan. The municipality was created in 1974 through the amalgamation of the market town Klippan (itself instituted in 1945) with the rural municipality of Riseberga and (...)")
	(title "Klippan Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Klippan_Municipality"))

([FlightPro_Class1040038] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "DK")
	(elevation 25)
	(lang "en")
	(lat 55.7697)
	(lng 12.5019)
	(rank 94)
	(summary "Lyngby-Taarbæk Kommune (the spelling Lyngby-Tårbæk Kommune is occasionally used) is a municipality (Danish, kommune) in Region Hovedstaden near Copenhagen on the east coast of the island of Zealand (Sjælland) in eastern Denmark (...)")
	(title "Lyngby-Taarbæk Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lyngby-Taarb%C3%A6k_Municipality"))

([FlightPro_Class1040039] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 23)
	(feature "adm2nd")
	(lang "en")
	(lat 56.0833)
	(lng 12.9167)
	(rank 94)
	(summary "Bjuv Municipality (Bjuvs kommun) is a municipality in Skåne County in southern Sweden. Its seat is located in the town of Bjuv. The amalgamations connected to the 1971 local government reform in Sweden took place in this area in 1974, when \"old\" Bjuv (a market town (köping) since 1946) was (...)")
	(title "Bjuv Municipality")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Bjuv_Municipality"))

([FlightPro_Class1050029] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 143)
	(feature "city")
	(lang "en")
	(lat 32.7642)
	(lng -16.8283)
	(rank 88)
	(summary "Porto da Cruz (is a civil parish in the municipality of Machico in the northeastern corner of Madeira. The population in 2011 was 2,597, in an area of 25.22 km².  (...)")
	(title "Porto da Cruz")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Porto_da_Cruz"))

([FlightPro_Class1050030] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 9)
	(feature "isle")
	(lang "en")
	(lat 29.311)
	(lng -13.527)
	(rank 88)
	(summary "Roque del Oeste (; Spanish for \"rock of the west\"), also referred to as Roque del Infierno, is an uninhabited islet located 0,6 km northeast of the island of Montaña Clara, in the northeasternmost part of the Canary Islands, the Chinijo Archipelago (...)")
	(title "Roque del Oeste")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Roque_del_Oeste"))

([FlightPro_Class1050031] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 8)
	(feature "isle")
	(lang "en")
	(lat 29.2761)
	(lng -13.3381)
	(rank 87)
	(summary "Roque del Este (Spanish for \"rock of the east\") is a small uninhabited island in the Canary Islands, located 11 km northeast of the island of Lanzarote. The island is part of the Chinijo Archipelago, which is administratively part of the municipality of Teguise (...)")
	(title "Roque del Este")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Roque_del_Este"))

([FlightPro_Class1050032] of  WikiArticleDetails

	(butt-del-pois "Delete POIs/ext.data/delete-pois")
	(butt-return "Return to Flight/ext.data/ret-to-flight")
	(butt-show-pois "Show on Map/ext.data/show-on-map")
	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 53)
	(feature "city")
	(lang "en")
	(lat 33.067)
	(lng -16.333)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0)
	(rank 87)
	(summary "Vila Baleira is the main settlement in Porto Santo Municipality.")
	(title "Vila Baleira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Vila_Baleira"))

([FlightPro_Class1050033] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 109)
	(lang "en")
	(lat 32.8231)
	(lng -16.9934)
	(rank 87)
	(summary "Ponta Delgada is a parish in the municipality of São Vicente in the island of Madeira. The population in 2011 was 1,363, in an area of 9.39 km². Ponta Delgada is located on the north coast, 2 km west of Boa Ventura and 6 km east of São Vicente.  (...)")
	(title "Ponta Delgada, São Vicente")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ponta_Delgada%2C_S%C3%A3o_Vicente"))

([FlightPro_Class1050034] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "MZ")
	(elevation 73)
	(feature "city")
	(lang "en")
	(lat 32.8167)
	(lng -16.9)
	(rank 87)
	(summary "São Jorge is a civil parish in the municipality of Santana, in the island of Madeira. The population in 2011 was 1,473, in an area of 19.34 km².  (...)")
	(title "São Jorge (Santana)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%A3o_Jorge_%28Santana%29"))

([FlightPro_Class1050035] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 350)
	(feature "city")
	(lang "en")
	(lat 32.6667)
	(lng -16.9)
	(rank 87)
	(summary "Monte is a civil parish in the municipality and a suburb of Funchal in the Portuguese archipelago of Madeira. Locally, the parish is also known as Nossa Senhora do Monte . The population in 2011 was 6,701, in an area of 18.59 km². Monte is located a few kilometres east of Funchal.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/127000/thumb-126799-100.jpg")
	(title "Monte (Funchal)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Monte_%28Funchal%29"))

([FlightPro_Class1050036] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 447)
	(feature "city")
	(lang "en")
	(lat 32.8119)
	(lng -17.2494)
	(rank 86)
	(summary "Ponta do Pargo is a civil parish in the municipality of Calheta in the Portuguese archipelago of Madeira. The population in 2011 was 909, in an area of 24.71 km². It is located west of the municipal seat of Calheta, and southwest of the municipality of Porto Moniz.  (...)")
	(title "Ponta do Pargo")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ponta_do_Pargo"))

([FlightPro_Class1050037] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 12)
	(feature "city")
	(lang "en")
	(lat 32.7542)
	(lng -17.2267)
	(rank 86)
	(summary "Paul do Mar is a civil parish in the municipality of Calheta, in the Portuguese archipelago of Madeira. The population in 2011 was 871, in an area of 1.40 km².  (...)")
	(title "Paul do Mar")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Paul_do_Mar"))

([FlightPro_Class1050038] of  WikiArticleDetails

	(butt-del-pois "Delete POIs/ext.data/delete-pois")
	(butt-return "Return to Flight/ext.data/ret-to-flight")
	(butt-show-pois "Show on Map/ext.data/show-on-map")
	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 126)
	(feature "isle")
	(lang "en")
	(lat 30.1463)
	(lng -15.8644)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0)
	(rank 86)
	(summary "The Selvagem Grande Island (lit. Big Wild/Savage Island) is part of the Savage Islands, which themselves are part of the Portuguese Madeira archipelago in the North Atlantic Ocean. The island (size: 2 x 1.7 km) belongs to the Northeast Group of the Savage Islands, which comprises in addition three (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/36000/thumb-35296-100.jpg")
	(title "Selvagem Grande Island")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Selvagem_Grande_Island"))

([FlightPro_Class1050039] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 275)
	(lang "en")
	(lat 32.5229)
	(lng -16.5094)
	(rank 86)
	(summary "The Deserta Grande Island is the main island of the Desertas Islands archipelago, a small chain of three islands in the Portuguese Madeira Islands Archipelago of Macaronesia. It is located southeast of Madeira Island, off the western coast of North Africa in the Atlantic Ocean.  (...)")
	(title "Deserta Grande Island")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Deserta_Grande_Island"))

([FlightPro_Class1050040] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 410)
	(feature "isle")
	(lang "en")
	(lat 29.035)
	(lng -13.633)
	(rank 100)
	(summary "Lanzarote , a Spanish island, is the easternmost of the autonomous Canary Islands, in the Atlantic Ocean, approximately off the coast of Africa and from the Iberian Peninsula. Covering , it is the fourth largest of the islands (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/41000/thumb-40877-100.jpg")
	(title "Lanzarote")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lanzarote"))

([FlightPro_Class1050041] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 1078)
	(feature "isle")
	(lang "en")
	(lat 32.75)
	(lng -16.9685)
	(rank 100)
	(summary "Madeira (or ; or) is a Portuguese archipelago located in the north Atlantic Ocean, west and slightly south of Portugal. Its total population was estimated in 2011 at 267,785. The capital of Madeira is Funchal on the main island's south coast. It is just under north of Tenerife, Canary Islands (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/12000/thumb-11946-100.jpg")
	(title "Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Madeira"))

([FlightPro_Class1050042] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "JE")
	(elevation 44)
	(feature "city")
	(lang "en")
	(lat 32.651)
	(lng -16.9096)
	(rank 100)
	(summary "Funchal (In European Portuguese. The Brazilian Portuguese pronunciation is) is the largest city, the municipal seat and the capital of Portugal's Autonomous Region of Madeira. The city has a population of 111,892, Nuno Pires Soares, Instituto Geográfico Português (Geographic Institute of Portugal) (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/82000/thumb-81519-100.jpg")
	(title "Funchal")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Funchal"))

([FlightPro_Class1050043] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 88)
	(feature "landmark")
	(lang "en")
	(lat 32.6903)
	(lng -17.049)
	(rank 98)
	(summary "Clube de Futebol União, commonly known as União da Madeira, is a Portuguese football club from Funchal, Madeira. The club was founded on 1 November 1913, thus being one of the oldest football clubs in Portugal. The club's home ground is the Estádio do Centro Desportivo da Madeira, located in Ribeira (...)")
	(title "C.F. União")
	(wikipediaUrl "http://en.wikipedia.org/wiki/C.F._Uni%C3%A3o"))

([FlightPro_Class1050044] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 54)
	(feature "airport")
	(lang "en")
	(lat 32.6979)
	(lng -16.7745)
	(rank 98)
	(summary "Madeira Airport , formerly known as Santa Catarina Airport and informally known as Funchal Airport, is an international airport in the civil parish of Santa Catarina, municipality of Santa Cruz, in the Portuguese archipelago of Madeira (...)")
	(title "Madeira Airport")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Madeira_Airport"))

([FlightPro_Class1050045] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 11)
	(feature "airport")
	(lang "en")
	(lat 28.9456)
	(lng -13.6053)
	(rank 98)
	(summary "Lanzarote Airport , also known as Arrecife Airport, is the airport serving the island of Lanzarote in the Canary Islands. The airport is located in San Bartolomé, Las Palmas, southwest of the town of Arrecife. It handles flights to many European airports, with hundreds of thousands of tourists each (...)")
	(title "Lanzarote Airport")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lanzarote_Airport"))

([FlightPro_Class1050046] of  WikiArticleDetails

	(butt-del-pois "Delete POIs/ext.data/delete-pois")
	(butt-return "Return to Flight/ext.data/ret-to-flight")
	(butt-show-pois "Show on Map/ext.data/show-on-map")
	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(feature "isle")
	(lang "en")
	(lat 30.0833)
	(lng -15.9167)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0)
	(rank 98)
	(summary "The Savage Islands are a small Portuguese archipelago in the North Atlantic, nearly midway between Madeira and the Canary Islands.Luís Carvalho; Nuno Leitão (2005) The archipelago comprises two major islands and several islets of varying sizes, in two areas: Selvagem Grande and Selvagem Pequena (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/118000/thumb-117154-100.jpg")
	(title "Savage Islands")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Savage_Islands"))

([FlightPro_Class1050047] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 9)
	(lang "en")
	(lat 28.9625)
	(lng -13.5506)
	(rank 97)
	(summary "Arrecife is a city and municipality in the Canary Islands (Spain) situated in the centre-east of the island of Lanzarote, of which it has been the capital since 1852. The city owes its name to the rock reef ('Arrecife' is Spanish for 'reef') which covers the beach located in the city (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/31000/thumb-30466-100.jpg")
	(title "Arrecife")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Arrecife"))

([FlightPro_Class1050048] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 793)
	(feature "landmark")
	(lang "en")
	(lat 32.7667)
	(lng -17.0)
	(rank 97)
	(summary "Laurel forest, also called laurisilva or laurissilva, is a type of subtropical forest found in areas with high humidity and relatively stable, mild temperatures. The forest is characterized by broadleaf tree species with evergreen, glossy and leaves, known as \"laurophyll\" or \"lauroid\" (...)")
	(title "Laurel forest")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Laurel_forest"))

([FlightPro_Class1050049] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 1051)
	(feature "city")
	(lang "en")
	(lat 32.6953)
	(lng -16.9781)
	(population 35666)
	(rank 97)
	(summary "Câmara de Lobos (; literally) is a municipality, parish and city in the south-central coast of the island of Madeira. Technically a suburb of the much larger capital city of Funchal, it is one of the larger population centres and an extension of the Funchal economy.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/156000/thumb-155720-100.jpg")
	(title "Câmara de Lobos")
	(wikipediaUrl "http://en.wikipedia.org/wiki/C%C3%A2mara_de_Lobos"))

([FlightPro_Class1050050] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 307)
	(lang "en")
	(lat 29.0611)
	(lng -13.5597)
	(rank 97)
	(summary "Teguise is a municipality in the central part of the island of Lanzarote in the Las Palmas province in the Canary Islands. The population is 21,152 (2013), and the area is 263.98 km². It is located north of Arrecife and south of Haría. The seat of the municipality is the town of Teguise (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/33000/thumb-32850-100.jpg")
	(title "Teguise (municipality)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Teguise_%28municipality%29"))

([FlightPro_Class1050051] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 20)
	(feature "city")
	(lang "en")
	(lat 32.7167)
	(lng -16.7667)
	(rank 96)
	(summary "Machico is a city and municipality in the southeast part of the island of Madeira, in the Autonomous Region of Madeira. The easternmost municipality on the island, it is also the third most populous area; its population was 21,828 (in 2011). The town, proper, had a population of 10,894 in 2001 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/43000/thumb-42101-100.jpg")
	(title "Machico")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Machico"))

([FlightPro_Class1050052] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 114)
	(feature "landmark")
	(lang "en")
	(lat 32.6456)
	(lng -16.9283)
	(rank 96)
	(summary "Estádio dos Barreiros or Estádio do Marítimo is a multi-purpose stadium in Funchal, Portugal. It is currently used mostly for football matches. It is the home stadium of Club Sport Marítimo and although much larger in its hey-day, the stadium can now hold 8,922 people (...)")
	(title "Estádio dos Barreiros")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Est%C3%A1dio_dos_Barreiros"))

([FlightPro_Class1050053] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(lang "en")
	(lat 32.7164)
	(lng -17.1831)
	(rank 96)
	(summary "Calheta is a municipality on the southwest coast of Madeira, Portugal. The population in 2011 was 11,521, in an area of 111.50 km².  (...)")
	(title "Calheta, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Calheta%2C_Madeira"))

([FlightPro_Class1050054] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 110)
	(lang "en")
	(lat 32.6833)
	(lng -16.8)
	(rank 95)
	(summary "Santa Cruz (\"Holy Cross\") is a municipality, a parish and a city in the eastern part of the island of Madeira. It is the second most populous municipality, behind Funchal. The population in 2011 was 43,005, in an area of 81.50 km².  (...)")
	(title "Santa Cruz, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Santa_Cruz%2C_Madeira"))

([FlightPro_Class1050055] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "MZ")
	(elevation 512)
	(lang "en")
	(lat 32.7925)
	(lng -16.8758)
	(rank 95)
	(summary "Santana (; from Portuguese Santa Ana, meaning Saint Anne) is a municipality along the northern coast of the island of Madeira. The population in 2011 was 7,719, in an area of 95.56 km².  (...)")
	(title "Santana, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Santana%2C_Madeira"))

([FlightPro_Class1050056] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 32.483)
	(lng -16.483)
	(rank 94)
	(summary "The Desertas Islands (\"Deserted Islands\") are a small archipelago, in the Macaronesia region of the Atlantic Ocean. They are within the Portuguese Autonomous Region of Madeira, and part of the larger Madeira Archipelago (...)")
	(title "Desertas Islands")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Desertas_Islands"))

([FlightPro_Class1050057] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 17)
	(lang "en")
	(lat 29.1333)
	(lng -13.4667)
	(rank 94)
	(summary "Haría is a municipality on the island of Lanzarote in the Canary Islands, the northernmost and easternmost Canarian municipality. Surrounded on three sides by the Atlantic Ocean, the municipality is bordered to the south by the municipality of Teguise. It forms part of Las Palmas Province (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/89000/thumb-88881-100.jpg")
	(title "Haría (municipality)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Har%C3%ADa_%28municipality%29"))

([FlightPro_Class1050058] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 187)
	(lang "en")
	(lat 29.252)
	(lng -13.508)
	(rank 94)
	(summary "Graciosa Island or commonly La Graciosa (; Spanish for \"graceful\") is a volcanic island in the Canary Islands of Spain, located north of the island of Lanzarote across the strait named El Río. It was formed by the Canary hotspot (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/57000/thumb-56012-100.jpg")
	(title "Graciosa, Canary Islands")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Graciosa%2C_Canary_Islands"))

([FlightPro_Class1050059] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "CV")
	(elevation 37)
	(lang "en")
	(lat 32.6806)
	(lng -17.1042)
	(rank 94)
	(summary "Ponta do Sol is a municipality in the southwestern coast of the island of Madeira, in the archipelago of Madeira. The population in 2011 was 8,862, in an area of 46.19 km².  (...)")
	(title "Ponta do Sol, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ponta_do_Sol%2C_Madeira"))

([FlightPro_Class1050060] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 227)
	(lang "en")
	(lat 28.95)
	(lng -13.7667)
	(rank 93)
	(summary "Yaiza is a municipality on the island of Lanzarote in the Canary Islands, Spain. It lies in the southwest of the island and forms part of the province of Las Palmas. The municipality is bounded by the Atlantic Ocean to the west, south and east. In the west is the lagoon of Charco Verde (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/70000/thumb-69574-100.jpg")
	(title "Yaiza (municipality)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Yaiza_%28municipality%29"))

([FlightPro_Class1050061] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 19)
	(lang "en")
	(lat 32.6722)
	(lng -17.0639)
	(rank 93)
	(summary "Ribeira Brava is a municipality on the island of Madeira, in the Portuguese Autonomous Region of Madeira. It is located along the southern coast (approximately center), and is west of Câmara de Lobos and the regional capital Funchal, and south of São Vicente The population in 2011 was 13,375, in an (...)")
	(title "Ribeira Brava, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ribeira_Brava%2C_Madeira"))

([FlightPro_Class1050062] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 111)
	(lang "en")
	(lat 32.7967)
	(lng -17.0433)
	(rank 93)
	(summary "São Vicente is a municipality along the north-west coast of the island of Madeira.  (...)")
	(title "São Vicente, Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%A3o_Vicente%2C_Madeira"))

([FlightPro_Class1050063] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 30)
	(feature "city")
	(lang "en")
	(lat 32.7389)
	(lng -16.7364)
	(rank 93)
	(summary "Caniçal is a civil parish in the municipality of Machico in the Portuguese island of Madeira. The population in 2011 was 3,924, in an area of 11.85 km². Equidistant from Funchal and Santana (20 km), the community is connected to these centres by the Regional 109 roadway (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/49000/thumb-48029-100.jpg")
	(title "Caniçal")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Cani%C3%A7al"))

([FlightPro_Class1050064] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 66)
	(lang "en")
	(lat 32.8667)
	(lng -17.1736)
	(rank 93)
	(summary "Porto Moniz is a municipality in the northwest corner of the island of Madeira. It is located west of Santana and Machico, and northwest of Funchal. The population in 2011 was 2,711, in an area of 82.93 km². The municipality features a natural complex of lava pools that are popular with locals and (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/22000/thumb-21365-100.jpg")
	(title "Porto Moniz")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Porto_Moniz"))

([FlightPro_Class1050065] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 687)
	(feature "landmark")
	(lang "en")
	(lat 32.6708)
	(lng -16.8833)
	(rank 93)
	(summary "Estádio da Madeira, formerly named Estadio Eng. Rui Alves and informally known as Estádio da Choupana is a football stadium in Funchal, Madeira, Portugal. It is currently used mostly for the home matches of C.D (...)")
	(title "Estádio da Madeira")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Est%C3%A1dio_da_Madeira"))

([FlightPro_Class1050066] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(lang "en")
	(lat 28.8167)
	(lng -17.7667)
	(rank 93)
	(summary "Barlovento (Spanish for windward) is a municipality in the northern part of the island of La Palma, one of the Canary Islands, and a part of the province of Santa Cruz de Tenerife. Barlovento is on the main highway which encircles the island (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/132000/thumb-131522-100.jpg")
	(title "Barlovento, Santa Cruz de Tenerife")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Barlovento%2C_Santa_Cruz_de_Tenerife"))

([FlightPro_Class1050067] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 268)
	(feature "city")
	(lang "en")
	(lat 28.8056)
	(lng -17.775)
	(population 4473)
	(rank 92)
	(summary "San Andrés y Sauces is a municipality on the island of La Palma, Province of Santa Cruz de Tenerife, Canary Islands, Spain. It is situated in the northeastern part of the island. The population of the municipality is 4,473 (2013) and the area is 42.75 km² (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/38000/thumb-37635-100.jpg")
	(title "San Andrés y Sauces")
	(wikipediaUrl "http://en.wikipedia.org/wiki/San_Andr%C3%A9s_y_Sauces"))

([FlightPro_Class1050068] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 196)
	(feature "city")
	(lang "en")
	(lat 29.0675)
	(lng -13.6758)
	(rank 92)
	(summary "Tinajo is a municipality in the western part of the island of Lanzarote in the Province of Las Palmas in the Canary Islands, Spain. The population is 5,783 (2013), and the area is 135.28 km². It is located near the north coast, northwest of the island capital Arrecife (...)")
	(title "Tinajo (municipality)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Tinajo_%28municipality%29"))

([FlightPro_Class1050069] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 345)
	(lang "en")
	(lat 29.0056)
	(lng -13.753)
	(rank 92)
	(summary "Timanfaya National Park is a Spanish national park in the southwestern part of the island of Lanzarote, Canary Islands. It covers parts of the municipalities Tinajo and Yaiza. The area is . The parkland is entirely made up of volcanic soil. The statue \"El Diablo\" by César Manrique is its symbol.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/7000/thumb-6925-100.jpg")
	(title "Timanfaya National Park")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Timanfaya_National_Park"))

([FlightPro_Class1050070] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 207)
	(lang "en")
	(lat 28.9527)
	(lng -13.6533)
	(rank 92)
	(summary "Tías is a town and a municipality in the southern part of the island of Lanzarote, province of Las Palmas, autonomous community of the Canary Islands, Spain. The town Tías is situated 4 km from the south coast and 10 km west of the island capital Arrecife (...)")
	(title "Tías, Las Palmas")
	(wikipediaUrl "http://en.wikipedia.org/wiki/T%C3%ADas%2C_Las_Palmas"))

([FlightPro_Class1050071] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 60)
	(feature "isle")
	(lang "en")
	(lat 29.399)
	(lng -13.511)
	(rank 92)
	(summary "Alegranza is an island in the Atlantic Ocean, located off the coast of Africa and is in the province of Las Palmas in the Canary Islands, Spain. It is the northernmost point in the Canary Islands, and part of the Chinijo Archipelago. The island is part of the municipality of Teguise on Lanzarote.  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/1000/thumb-774-100.png")
	(title "Alegranza")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Alegranza"))

([FlightPro_Class1050072] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 1819)
	(lang "en")
	(lat 32.7586)
	(lng -16.9422)
	(rank 91)
	(summary "Pico Ruivo is the highest peak on the Madeira Islands. It can be reached only by foot, usually either from Pico do Arieiro (3rd highest) after a strenuous hike, or from Achada do Teixeira with a shorter, easier trail. There is an additional trail leading west to Encumeada (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/55000/thumb-54675-100.jpg")
	(title "Pico Ruivo")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pico_Ruivo"))

([FlightPro_Class1050073] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 274)
	(feature "city")
	(lang "en")
	(lat 29.0009)
	(lng -13.6122)
	(rank 91)
	(summary "San Bartolomé (Spanish meaning Saint Bartholomew) is a village and ayuntamiento (county) in the Canary Islands (Spain), belonging to the Province of Las Palmas. It is situated in the center of the island of Lanzarote. The county of San Bartolomé stretches to the southern coast of the island (...)")
	(title "San Bartolomé, Las Palmas")
	(wikipediaUrl "http://en.wikipedia.org/wiki/San_Bartolom%C3%A9%2C_Las_Palmas"))

([FlightPro_Class1050074] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 215)
	(feature "isle")
	(lang "en")
	(lat 29.2986)
	(lng -13.5346)
	(population 0)
	(rank 90)
	(summary "Montaña Clara (Spanish meaning \"light-colored mountain\") is a small uninhabited islet belonging to the so-called Chinijo Archipelago, in the northeastern part of the Canary Islands, only a short distance (about 2 km) northwest of La Graciosa. The islet area is only 1.33 km² (...)")
	(title "Montaña Clara")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Monta%C3%B1a_Clara"))

([FlightPro_Class1050075] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 336)
	(feature "city")
	(lang "en")
	(lat 32.7)
	(lng -16.9667)
	(rank 90)
	(summary "Curral das Freiras is a civil parish in the municipality of Câmara de Lobos in the Portuguese archipelago of Madeira. The population in 2011 was 2,001, in an area of 25.03 km². It is situated in the mountainous interior of the island (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/71000/thumb-70179-100.jpg")
	(title "Curral das Freiras")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Curral_das_Freiras"))

([FlightPro_Class1050076] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(feature "isle")
	(lang "en")
	(lat 29.3333)
	(lng -13.5)
	(rank 90)
	(summary "The Chinijo archipelago is an archipelago located in the northeastern part of the Canary Islands, north of the island of Lanzarote. The archipelago includes the islands of Montaña Clara, Alegranza, Graciosa, Roque del Este and Roque del Oeste. The archipelago belongs to the municipality of Teguise (...)")
	(title "Chinijo Archipelago")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Chinijo_Archipelago"))

([FlightPro_Class1050077] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "ES")
	(elevation 58)
	(feature "landmark")
	(lang "en")
	(lat 29.161)
	(lng -13.4388)
	(rank 90)
	(summary "Cueva de los Verdes (Spanish for \"Verdes' cave\", from the \"Verdes\" family) is a lava tube and tourist attraction of the Haria municipality on the island of Lanzarote in the Canary Islands (Spain). The cave lies within the Monumento Natural del Malpaís de La Corona, a protected area of the Canary (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/127000/thumb-126724-100.jpg")
	(title "Cueva de los Verdes")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Cueva_de_los_Verdes"))

([FlightPro_Class1050078] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 256)
	(feature "city")
	(lang "en")
	(lat 32.6429)
	(lng -16.9395)
	(rank 89)
	(summary "São Martinho is a civil parish in the municipality of Funchal, in the archipelago of Madeira. The population in 2011 was 26,482, in an area of 7.95 km².  (...)")
	(title "São Martinho (Funchal)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%A3o_Martinho_%28Funchal%29"))

([FlightPro_Class1050079] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "PT")
	(elevation 177)
	(lang "en")
	(lat 32.647)
	(lng -16.84)
	(rank 88)
	(summary "Caniço is a parish in the municipality of Santa Cruz in the Madeira Islands. It was elevated to city status in 2005. The population in 2011 was 23,368, in an area of 11.99 km². Caniço is connected to the urban sprawl of Funchal and is larger than the seat of the municipality (...)")
	(title "Caniço (Santa Cruz)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Cani%C3%A7o_%28Santa_Cruz%29"))

([FlightPro_Class110000] of  CloFunction

	(source "(letfn [(turn-right? [from to]\n	(let [dif (- to from)]\n	  (cond\n	    (> dif 0)\n	      (<= dif 180)\n	    (< dif 0) \n	      (< dif -180))))]\n  (let [arc (calc/abs (- old-crs new-crs))]\n    (if (<= arc small-arc)\n      0\n      (let [bnk (cond\n	(< arc mid-arc) (int (/ mid-bank factor)) \n	(> arc big-arc) (* mid-bank factor)\n	true mid-bank)]\n        (if (turn-right? old-crs new-crs)\n            bnk\n            (- bnk))))))")
	(title "bank [old-crs new-crs [mid-bank small-arc mid-arc big-arc factor]]"))

([FlightPro_Class120000] of  CSS

	(source "#autopilot {\n  position:fixed;\n  bottom:160px;\n  right:40px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#accel {\n  position:fixed;\n  bottom:150px;\n  right:24px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course {\n  position:fixed;\n  bottom:150px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#speed {\n  position:fixed;\n  bottom:130px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude {\n  position:fixed;\n  bottom:110px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lat {\n  position:fixed;\n  bottom:90px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lon {\n  position:fixed;\n  bottom:70px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course-fld {\n  position:fixed;\n  bottom:150px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-fld {\n  position:fixed;\n  bottom:130px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-fld {\n  position:fixed;\n  bottom:110px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-acl {\n  position:fixed;\n  bottom:130px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-acl {\n  position:fixed;\n  bottom:110px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#latitude-fld {\n  position:fixed;\n  bottom:90px;\n  right:48px;\n  padding:5px;\n  z-index:100;\n}\n#instant {\n  position:fixed;\n  bottom:90px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#longitude-fld {\n  position:fixed;\n  bottom:70px;\n  right:48px;\n  padding:5px;\n  z-index:100;\n}\n#instant-rdo {\n  position:fixed;\n  bottom:70px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#camera {\n  position:fixed;\n  bottom:150px;\n  left:60px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard {\n  position:fixed;\n  bottom:140px;\n  left:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard-fld {\n  position:fixed;\n  bottom:140px;\n  left:100px;\n  padding:5px;\n  z-index:100;\n}\n#view {\n  position:fixed;\n  bottom:110px;\n  left:22px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#view-fld {\n  position:fixed;\n  bottom:110px;\n  left:64px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#view-sld {\n  position:fixed;\n  bottom:110px;\n  left:100px;\n  padding:5px;\n  z-index:100;\n}\n#pitch {\n  position:fixed;\n  bottom:90px;\n  left:22px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#pitch-fld {\n  position:fixed;\n  bottom:90px;\n  left:64px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#pitch-sld {\n  position:fixed;\n  bottom:90px;\n  left:100px;\n  padding:5px;\n  z-index:100;\n}\n#roll {\n  position:fixed;\n  bottom:70px;\n  left:28px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#roll-fld {\n  position:fixed;\n  bottom:70px;\n  left:64px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#roll-sld {\n  position:fixed;\n  bottom:70px;\n  left:100px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "cesium"))

([FlightPro_Class120002] of  CloProgram

	(cloFunctions [FlightPro_Class260000])
	(cloNamespace [Clojure_Class300001])
	(title "Clojure Work"))

([FlightPro_Class130000] of  HTML

	(source "<!DOCTYPE html>\n<html>\n<head>\n  <title>Chart View</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <link rel=\"stylesheet\" href=\"css/leaflet.css\" />\n  <link rel=\"stylesheet\" href=\"leaflet/leaflet.css\"/>\n  <script src=\"leaflet/leaflet.js\"></script>\n  <script src=\"js/leaflet.rotatedMarker.js\"></script>\n</head>\n<body>\n  <div id=\"map\"></div>\n  <div id=\"mousepos\"></div>\n  <div id=\"zoom\"></div>\n  <div id=\"commands-header\"></div>\n  <div id=\"commands\"></div>\n  <div id=\"element1\"></div>\n  <div id=\"element2\"></div>\n  <div id=\"element3\"></div>\n  <div id=\"element4\"></div>\n  <div id=\"element5\"></div>\n  <div id=\"element6\"></div>\n  <div id=\"element20\"></div>\n  <div id=\"element30\"></div>\n  <div id=\"element40\"></div>\n  <script src=\"js/chart.js\"></script>\n</body>\n</html>")
	(store-in "resources/public")
	(title "leaflet"))

([FlightPro_Class130001] of  CloFunction

	(source "(let [[mb sa ma ba fa :as bps] (:bank-params @carr)\n       bnk (dyn/bank (:course @carr) course bps)\n       spd (:speed @carr)]\n  (if (or (< spd 100) (= bnk 0))\n    (mov/turn carr course 1 nil)\n    (let [accel (if (> (calc/abs bnk) mb) 2 1)]\n      (czm/camera :roll bnk)\n      (mov/turn carr course accel #(czm/camera :roll 0)))))")
	(title "turn-and-bank [carr course]"))

([FlightPro_Class130003] of  CloFunction

	(source "(if (< x 0) (- x) x)")
	(title "abs [x]"))

([FlightPro_Class130004] of  CloFunction

	(source "(letfn [(proc-fn [cr]\n             (let [c @cr]\n               (if (<= (calc/abs (- (get-in c path1)\n                                           (get-in c path2))) limit)\n                 (do (final-fn) false)\n                 true)))]\n  (vswap! carr assoc :cdad-status (volatile! \"STOP\"))\n  (asp/start-process (:cdad-status @carr) \n                                 #(proc-fn carr)\n                                 (get-in @carr tio-pth)\n	         nil))")
	(title "check-diff-and-do [carr path1 path2 limit tio-pth final-fn]"))

([FlightPro_Class140000] of  CloVar

	(source "(volatile! {})")
	(title "VEHICLES"))

([FlightPro_Class140001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class330006]
		[FlightPro_Class330005]
		[FlightPro_Class140004]
		[FlightPro_Class730000]
		[FlightPro_Class140003]
		[FlightPro_Class730001]
		[FlightPro_Class140007]
		[FlightPro_Class270001])
	(cloNamespace [FlightPro_Class140002])
	(title "View 3D Controls"))

([FlightPro_Class140002] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "view3d.controls"))

([FlightPro_Class140003] of  CloFunction

	(source "(set-html! \"autopilot\" \"<h4>Autopilot</h4>\")\n(set-html! \"accel\" \"accel\")\n(set-html! \"course\" \"Course: 000\")\n(set-html! \"course-fld\" \n  \"<input value='180' style='width:38px' id='input-crs'\n                     onchange='javascript:view3d.client.course(this.value)'>\")\n(set-html! \"speed\" \"Speed: 000\")\n(set-html! \"speed-fld\" \n  \"<input value='210' style='width:38px' id='input-spd'\n               onchange='javascript:view3d.client.speed(this.value)'>\")\n(set-html! \"speed-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_speed(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"altitude\" \"Altitude: 00000\")\n(set-html! \"altitude-fld\" \n  \"<input value='4000' style='width:38px' id='input-alt'\n               onchange='javascript:view3d.client.altitude(this.value)'>\")\n(set-html! \"altitude-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_altitude(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"lat\" \"Latitude: 00.0000\")\n(set-html! \"latitude-fld\" \n  \"<input value='40.8' style='width:56px' id='input-lat'\n               onchange='javascript:view3d.client.latitude(this.value)'>\")\n(set-html! \"instant\" \"ins\")\n(set-html! \"lon\" \"Longitude: 00.0000\")\n(set-html! \"longitude-fld\" \n  \"<input value='-74.0' style='width:56px' id='input-lon'\n               onchange='javascript:view3d.client.longitude(this.value)'>\")\n(set-html! \"instant-rdo\" \n  \"<input type='checkbox' id='input-instant'>\")")
	(title "right-controls []"))

([FlightPro_Class140004] of  CloFunction

	(source "(set! (.-innerHTML (by-id id)) msg)")
	(title "set-html! [id msg]"))

([FlightPro_Class140005] of  CloFunction

	(source "(.getElementById js/document id)")
	(title "by-id  [id]"))

([FlightPro_Class140007] of  CloFunction

	(source "(let [{:keys [coord course speed altitude]} car\n      spd (int speed)]\n  (set-html! \"course\" (str \"Course: \" course))\n  (set-html! \"speed\" (str \"Speed: \" spd))\n  (set-html! \"altitude\" (str \"Altitude: \" (int altitude)))\n  (set-html! \"lat\" (str \"Latitude: \" (format \"%.4f\" (first coord))))\n  (set-html! \"lon\" (str \"Longitude: \" (format \"%.4f\" (second coord)))))")
	(title "show-flight-data [car]"))

([FlightPro_Class140008] of  CloFunction

	(source "(apply gstring/format fmt args)")
	(title "format [fmt & args]"))

([FlightPro_Class140019] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [crs (num-val crs)]\n    (if (<= 0 crs 360)\n      (turn-and-bank CARRIER crs))))")
	(title "course [crs]"))

([FlightPro_Class140020] of  CloFunction

	(source "(if (= call \"MANUAL\")\n  (do (vswap! CARRIER merge @VEHICLE)\n    (mov/set-turn-point CARRIER)) \n  (vswap! CARRIER assoc :mode call))\n(GET (str (:command URL) \"onboard?callsign=\" call)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "onboard [call]"))

([FlightPro_Class140021] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (when (<= -180 deg 180)\n    (czm/camera :view deg)\n    (ctl/set-html! \"view-fld\" deg)))")
	(title "view [deg]"))

([FlightPro_Class140022] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (when (<= -180 deg 180)\n    (czm/camera :pitch deg)\n    (ctl/set-html! \"pitch-fld\" deg)))")
	(title "pitch [deg]"))

([FlightPro_Class140023] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (when (<= -180 deg 180)\n    (czm/camera :roll deg)\n    (ctl/set-html! \"roll-fld\" deg)))")
	(title "roll [deg]"))

([FlightPro_Class140024] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/accel CARRIER (num-val spd)))")
	(title "speed [spd]"))

([FlightPro_Class140025] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/elevate CARRIER (num-val alt)))")
	(title "altitude [alt]"))

([FlightPro_Class150000] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class160012]
		[FlightPro_Class220026]
		[FlightPro_Class820000])
	(cloNamespace [FlightPro_Class180001])
	(title "Chart Controls"))

([FlightPro_Class150001] of  CSS

	(source "#map {\n    position: absolute;\n    top: 0px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: -1;\n}\n#mousepos {\n  position:fixed;\n  bottom:10px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#zoom {\n  position:fixed;\n  bottom:10px;\n  left:170px;\n  padding:5px;\n  z-index:100;\n}\n#commands-header {\n  position:fixed;\n  bottom:50px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#commands {\n  position:fixed;\n  bottom:40px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#element1 {\n  position:fixed;\n  bottom:40px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element2 {\n  position:fixed;\n  bottom:60px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element3 {\n  position:fixed;\n  bottom:80px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element4 {\n  position:fixed;\n  bottom:100px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element5 {\n  position:fixed;\n  bottom:120px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element6 {\n  position:fixed;\n  bottom:140px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element20 {\n  position:fixed;\n  bottom:40px;\n  left:300px;\n  padding:5px;\n  z-index:100;\n}\n#element30 {\n  position:fixed;\n  bottom:40px;\n  left:440px;\n  padding:5px;\n  z-index:100;\n}\n#element40 {\n  position:fixed;\n  bottom:40px;\n  left:580px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "leaflet"))

([FlightPro_Class150002] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class80004]
		[FlightPro_Class160003]
		[FlightPro_Class160007]
		[FlightPro_Class220000]
		[FlightPro_Class160010]
		[FlightPro_Class160008]
		[FlightPro_Class160004]
		[FlightPro_Class670311]
		[FlightPro_Class580000]
		[FlightPro_Class670313]
		[FlightPro_Class310002]
		[FlightPro_Class360000]
		[FlightPro_Class380003]
		[FlightPro_Class370001]
		[FlightPro_Class370000]
		[FlightPro_Class690014]
		[FlightPro_Class690015]
		[FlightPro_Class690013]
		[FlightPro_Class580046]
		[FlightPro_Class810003]
		[FlightPro_Class170005]
		[FlightPro_Class170004]
		[FlightPro_Class430000]
		[FlightPro_Class440000]
		[FlightPro_Class690008]
		[FlightPro_Class220027]
		[FlightPro_Class860000]
		[FlightPro_Class160011]
		[FlightPro_Class160002]
		[FlightPro_Class180000]
		[FlightPro_Class380000]
		[FlightPro_Class380001]
		[FlightPro_Class860001])
	(cloNamespace [FlightPro_Class150003])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class330004]
		[FlightPro_Class160009]
		[FlightPro_Class160005]
		[FlightPro_Class140000]
		[FlightPro_Class670312]
		[FlightPro_Class690012]
		[FlightPro_Class80002]
		[FlightPro_Class200000]
		[FlightPro_Class880003])
	(css [FlightPro_Class150001])
	(epilogue "(set! (.-onload js/window) (on-load-chart))")
	(html [FlightPro_Class130000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/chart.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class100023]
		[FlightPro_Class230004]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class150000]
		[FlightPro_Class420008])
	(store-in "src/cljs")
	(title "Chart Client"))

([FlightPro_Class150003] of  CloNamespace

	(source "(:require\n  [goog.string :as gstring]\n  [goog.string.format]\n  [csasync.proc :as asp]\n  [chart.controls :as ctl]\n  [carr.move :as mov]\n  [cognitect.transit :as t]\n  [ajax.core :refer [GET]]\n  [ask.master :as am])")
	(title "chart.client"))

([FlightPro_Class160000] of  CloFunction

	(source "(let [{:keys [n s w e]} @BBX]\n  (if-let [ff (json-web-data (str (:url-flights F24) \"?bounds=\" n \",\" s \",\" w \",\" e))]\n    (vreset! FLIGHTS \n      (->> ff\n        (filter #(vector? (second %)))\n        ;;(filter #(not (empty? (callsign (second %)))))\n        (apply concat)\n        (apply hash-map)\n        (merge-my-flights @mfs/CARRIERS)\n        (merge-my-flights @MANUAL-DATA)))))")
	(title "flights-in-bbx []"))

([FlightPro_Class160002] of  CloFunction

	(source "(enable-console-print!)\n(init-chart)\n(asp/repeater receive-instructions (:instructions TIO))\n(ctl/show-chart-controls)")
	(title "on-load-chart []"))

([FlightPro_Class160003] of  CloFunction

	(source "(when-let [vmp (@VEHICLES id)]\n  (mov/move vmp)\n  (let [mp @vmp\n         mrk (:marker mp)\n         [lat lon] (:coord mp)\n         pos (js/L.LatLng. lat lon)]\n    (.setLatLng mrk pos))\n  (vswap! VEHICLES assoc id vmp))")
	(title "move-vehicle [id]"))

([FlightPro_Class160004] of  CloFunction

	(source "(delete-vehicle id)\n(let [ms (volatile! \"START\")\n       mp (assoc mp :marker (create-update-marker nil mp)\n                              :step-hrs (double (/ (:vehicles TIO) 3600000))\n	      :movst ms\n                              :mover (asp/start-process ms #(move-vehicle id) (:vehicles TIO) nil))\n         carr (volatile! mp)]\n    (mov/set-turn-point carr)\n    (vswap! VEHICLES assoc id carr))")
	(title "create-update-vehicle [id mp]"))

([FlightPro_Class160005] of  CloVar

	(source "(volatile! {})")
	(title "CHART"))

([FlightPro_Class160007] of  CloFunction

	(source "(when-let [veh (@VEHICLES id)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh))\n  (vswap! VEHICLES dissoc id))")
	(title "delete-vehicle [id]"))

([FlightPro_Class160008] of  CloFunction

	(source "(if mrk\n  (.removeLayer @CHART mrk))\n(let [[lat lon] (:coord mp)\n       pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (URL-ICO (:status mp)) \n                                  :iconSize #js[32, 32]})\n       opt #js{:icon ico \n                    :rotationAngle (:course mp)\n                    :rotationOrigin \"center center\"\n                    :title (:callsign mp)\n                    :draggable false}\n       mrk (-> js/L (.marker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (ffirst (filter #(= (:marker @(second %)) (.-target e)) \n                                      (seq @VEHICLES))))))\n    (.addTo mrk @CHART)\n    mrk)")
	(title "create-update-marker [mrk mp]"))

([FlightPro_Class160009] of  CloVar

	(source "{\"INTERSECT\" 	(str HOST PORT \"/img/redpln32.png\")\n \"DESCEND\" 	(str HOST PORT \"/img/greenpln32.png\")\n \"CLIMB\" 	(str HOST PORT \"/img/bluepln32.png\")\n \"LEVEL\" 	(str HOST PORT \"/img/purplepln32.png\")\n \"GROUND\" 	(str HOST PORT \"/img/greypln32.png\")\n \"COUNTER\"	(str HOST PORT \"/img/r.png\")\n \"FOLLOWING\"	(str HOST PORT \"/img/b.png\")\n \"default\"	(str HOST PORT \"/img/info.png\")\n \"default-pois\"	(str HOST PORT \"/img/place3.jpeg\")\n \"landmark\"	(str HOST PORT \"/img/landmark.png\")\n \"edu\"	(str HOST PORT \"/img/edu.png\")\n \"mountain\"	(str HOST PORT \"/img/mountain.png\")\n \"river\"	(str HOST PORT \"/img/river.png\")\n \"railwaystation\" (str HOST PORT \"/img/railwaystation.png\")\n \"event\"	(str HOST PORT \"/img/event.png\")\n \"waterbody\"	(str HOST PORT \"/img/waterbody.png\")\n \"isle\"	(str HOST PORT \"/img/isle.png\")\n \"airport\"	(str HOST PORT \"/img/airport.png\")\n \"city\"	(str HOST PORT \"/img/city.png\")}")
	(title "URL-ICO"))

([FlightPro_Class160010] of  CloFunction

	(source "(GET (str (:command URL) \"info?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "info [id]"))

([FlightPro_Class160011] of  CloFunction

	(source "(println :INIT-CHART)\n(let [m (-> js/L\n              (.map \"map\")\n              (.setView (array 60.3, 25.0) 10)) ;; New York 40.8, -74.0\n        tile1 (-> js/L (.tileLayer \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n                                   #js{:maxZoom 20\n                                       :attribution \"Ru, OpenStreetMap &copy;\"}))\n        tile2 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile3 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile4 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile5 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        base (clj->js {\"OpenStreetMap\" tile1\n                       \"Google Satellite\" tile2\n                       \"Google Streets\" tile3\n                       \"Google Hybrid\" tile4\n                       \"Google Terrain\" tile5})\n        ctrl (-> js/L (.control.layers base nil))]\n    (try\n      (.addTo tile1 m)\n      (catch js/Error e (println e)))\n    (.addTo ctrl m)\n    (.on m \"mousemove\"\n      (fn [e] (ctl/mouse-move (.. e -latlng -lat) (.. e -latlng -lng))))\n    (.on m \"zoomend\"\n      (fn [e] (ctl/display-zoom (.getZoom m))))\n    (.on m \"click\"\n      (fn [e] (mouse-click (.. e -latlng -lat) (.. e -latlng -lng))))\n    (ctl/display-zoom (.getZoom m))\n    (vreset! CHART m))")
	(title "init-chart []"))

([FlightPro_Class160012] of  CloFunction

	(source "(set-html! \"mousepos\" (str \"lat \" (format \"%.4f\" lat) \" lon \" (format \"%.4f\" lng)))")
	(title "mouse-move [lat lng]"))

([FlightPro_Class160018] of  CloFunction

	(source "(close! chn)")
	(title "close-chan [chn]"))

([FlightPro_Class170000] of  CloVar

	(source "(volatile! nil)")
	(title "AIRPORTS"))

([FlightPro_Class170004] of  CloFunction

	(source "(GET (:instructions URL) {:handler instructions-handler\n                       :error-handler error-handler})")
	(title "receive-instructions []"))

([FlightPro_Class170005] of  CloFunction

	(source "(doseq [{:keys [instruct] :as ins} (read-transit response)]\n  ;;(println [:INSTRUCT ins])\n  (condp = instruct\n    :create-update (let [{:keys [id vehicle]} ins]\n	(create-update-vehicle id vehicle))\n    :delete (let [{:keys [id]} ins]\n	(delete-vehicle id))\n    :clear (clear-vehicles)\n    :popup (let [{:keys [id lat lon html time width height]} ins]\n	(cond\n	  id (popup id html time)\n	  (and  width height lat lon) (popup lat lon html time width height)\n	  (and lat lon) (popup lat lon html time)))\n    :trail (let [{:keys [id points options time]} ins]\n	(add-trail id points options time))\n    :map-center (let [{:keys [coord zoom lock]} ins]\n	(map-center coord zoom lock))\n    :create-placemark (let [{:keys [iname tip lat lon feature url-ico]} ins]\n	(create-placemark iname tip lat lon feature url-ico))\n    :delete-placemark (let [{:keys [iname]} ins]\n	(delete-placemark iname))\n    :clear-placemarks (clear-placemarks)\n    :add-link (let [{:keys [ids options]} ins]\n	(add-link ids options))\n    :ask-user (let [{:keys [question param]} ins]\n	(condp = question\n	  \"city\" (select-city param)\n	  \"airport\" (select-airport)))\n    :onboard (let [{:keys [callsign]} ins]\n	(def ONBOARD callsign))\n    (println (str \"Unknown instruction: \" [instruct ins]))))")
	(title "instructions-handler [response]"))

([FlightPro_Class180000] of  CloFunction

	(source "(GET (str (:command URL) \"follow?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "follow [id]"))

([FlightPro_Class180001] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "chart.controls"))

([FlightPro_Class180002] of  CloProgram

	(cloFunctions
		[FlightPro_Class190007]
		[FlightPro_Class200007]
		[FlightPro_Class200010]
		[FlightPro_Class200011]
		[FlightPro_Class200012]
		[FlightPro_Class200013]
		[FlightPro_Class200014]
		[FlightPro_Class480005]
		[FlightPro_Class160000]
		[FlightPro_Class200015]
		[FlightPro_Class200016]
		[FlightPro_Class200002]
		[FlightPro_Class220007]
		[FlightPro_Class200017]
		[FlightPro_Class210008]
		[FlightPro_Class210009]
		[FlightPro_Class210012]
		[FlightPro_Class210013]
		[FlightPro_Class260002]
		[FlightPro_Class770011]
		[FlightPro_Class770000])
	(cloNamespace [FlightPro_Class180003])
	(cloVars
		[FlightPro_Class210011]
		[FlightPro_Class210007]
		[FlightPro_Class190001]
		[FlightPro_Class170000]
		[FlightPro_Class220008]
		[FlightPro_Class210010]
		[FlightPro_Class620001])
	(title "FlightRadar24 Client"))

([FlightPro_Class180003] of  CloNamespace

	(source "(:require\n  [org.httpkit.client :as client]\n  [clj-json.core :as json]\n  [async.proc :as asp]\n  [my.flights.move :as mfs]\n  [calc.geo :refer [distance-nm]]\n  [calc.core :refer [abs]])")
	(title "fr24.client"))

([FlightPro_Class190000] of  CloFunction

	(source "(let [crt (current-time)\n       fls (seq @fls)]\n  (println \"t:\" crt \"flights:\" (count fls))\n  (doseq [[k v] fls]\n    (let [alt (fr24/altitude v)\n           [lat lon :as crd] (fr24/coord v)]\n      (rete/assert-frame \n	['Flight\n	'id k\n	'callsign (fr24/callsign v)\n	'coord crd\n	'course (fr24/course v)\n	'speed (fr24/speed v)\n	'altitude alt\n	'time crt\n	'point4d [lat lon (int (/ alt 3.28084)) (czs/iso8601curt)]\n	'age \"NEW\"\n	'status (if (> alt 0)\n                                     \"LEVEL\"\n                                     \"GROUND\")])))\n  (rete/fire)\n  true)")
	(title "process-flights [fls]"))

([FlightPro_Class190001] of  CloVar

	(source "(volatile! {})")
	(title "FLIGHTS"))

([FlightPro_Class190007] of  CloFunction

	(source "(let [r @(client/get url)\n       s (:status r)]\n  (if (= s 200)\n    (try\n      (json/parse-string (:body r))\n      (catch Exception e\n        (println [:JSON-WEB-DATA :EXCEPTION e])\n        nil))\n    (do\n      (println [:JSON-WEB-DATA :STATUS s])\n      nil)))")
	(title "json-web-data [url]"))

([FlightPro_Class2] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class310006]
		[FlightPro_Class80004]
		[FlightPro_Class130001]
		[FlightPro_Class140020]
		[FlightPro_Class140021]
		[FlightPro_Class140022]
		[FlightPro_Class140023]
		[FlightPro_Class140019]
		[FlightPro_Class140024]
		[FlightPro_Class230000]
		[FlightPro_Class140025]
		[FlightPro_Class90001]
		[FlightPro_Class90002]
		[FlightPro_Class300000]
		[FlightPro_Class880002]
		[FlightPro_Class320001]
		[FlightPro_Class300006]
		[FlightPro_Class290000]
		[FlightPro_Class320000]
		[FlightPro_Class280002]
		[FlightPro_Class1000021]
		[FlightPro_Class1030002]
		[FlightPro_Class80003]
		[FlightPro_Class80001]
		[FlightPro_Class600003]
		[FlightPro_Class260001]
		[FlightPro_Class1000001]
		[FlightPro_Class70001])
	(cloNamespace [FlightPro_Class60001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class330004]
		[FlightPro_Class100025]
		[FlightPro_Class940000]
		[FlightPro_Class80002])
	(css [FlightPro_Class120000])
	(epilogue "(set! (.-onload js/window) (on-load))")
	(html [FlightPro_Class40000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/main.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class50001]
		[FlightPro_Class100023]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class140001])
	(store-in "src/cljs")
	(title "View 3D Client"))

([FlightPro_Class20000] of  CloProgram

	(cloFunctions
		[FlightPro_Class20013]
		[FlightPro_Class20017]
		[FlightPro_Class20014]
		[FlightPro_Class20024]
		[FlightPro_Class20021]
		[FlightPro_Class20022]
		[FlightPro_Class20023])
	(cloNamespace [FlightPro_Class20001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class20002]
		[FlightPro_Class20006]
		[FlightPro_Class20007])
	(title "Pro Server"))

([FlightPro_Class200000] of  CloVar

	(source "{:handler (fn [response])\n :error-handler error-handler}")
	(title "no-handler"))

([FlightPro_Class200001] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :delete\n	 :id id})")
	(title "put-off-map [id]"))

([FlightPro_Class200002] of  CloFunction

	(source "(letfn [(mk-airports [rows]\n            (reduce #(assoc %1\n                            (get %2 \"country\")\n                            (assoc (or (get %1 (get %2 \"country\")) {})\n                              (get %2 \"name\") \n                              %2)) \n                        {} \n                        rows))]\n  (or @AIRPORTS\n       (let [aps (json-web-data (:url-airports F24))\n              aps (mk-airports (get aps \"rows\"))]\n         (vreset! AIRPORTS aps)\n         aps)))")
	(title "airports-by-country []"))

([FlightPro_Class200007] of  CloFunction

	(source "(if (string? iod)\n  (@FLIGHTS iod)\n  iod)")
	(title "dat [iod]"))

([FlightPro_Class20001] of  CloNamespace

	(source "(:require [ring.adapter.jetty :as jetty]\n              [ring.util.response :as r]\n              [compojure.core :refer [defroutes GET]]\n              [compojure.handler :as handler]\n              [compojure.route :as route]\n              [cognitect.transit :as t]\n              [async.proc :as asp]\n              [cesium.core :as czs]\n              [pro.commands :as cmd])\n(:import java.io.ByteArrayOutputStream)")
	(title "pro.server"))

([FlightPro_Class200010] of  CloFunction

	(source "(let [dd (dat iod)]\n  [(nth dd 1) (nth dd 2)])")
	(title "coord [iod]"))

([FlightPro_Class200011] of  CloFunction

	(source "(nth (dat iod) 3)")
	(title "course [iod]"))

([FlightPro_Class200012] of  CloFunction

	(source "(nth (dat iod) 5)")
	(title "speed [iod]"))

([FlightPro_Class200013] of  CloFunction

	(source "(nth (dat iod) 4)")
	(title "altitude [iod]"))

([FlightPro_Class200014] of  CloFunction

	(source "(nth (dat iod) 16)")
	(title "callsign [iod]"))

([FlightPro_Class200015] of  CloFunction

	(source "(if-let [flt (filter #(= cs (callsign (second %)))\n                         @FLIGHTS)]\n  (first flt))")
	(title "by-call [cs]"))

([FlightPro_Class200016] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  id)")
	(title "id-by-call [cs]"))

([FlightPro_Class200017] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  dat)")
	(title "dat-by-call [cs]"))

([FlightPro_Class20002] of  CloVar

	(source "(str (System/getProperty \"user.dir\") \"/resources/public/\")")
	(title "ROOT"))

([FlightPro_Class20004] of  CloVar

	(source "{:answer (asp/mk-chan)\n :directives (asp/mk-chan)\n :instructions (asp/mk-chan)}")
	(title "CHN"))

([FlightPro_Class20005] of  CloVar

	(source "4444")
	(title "PORT"))

([FlightPro_Class20006] of  CloVar

	(source "nil")
	(title "APP"))

([FlightPro_Class20007] of  CloVar

	(source "nil")
	(title "SERV"))

([FlightPro_Class20010] of  CloFunction

	(source "(loop [[bit ch] (alts!! [chn] :default :none) bits []]\n  (if (= bit :none)\n    bits\n    (recur (alts!! [chn] :default :none) (conj bits bit))))")
	(title "pump-out [chn]"))

([FlightPro_Class20013] of  CloFunction

	(source "(let [baos (ByteArrayOutputStream.)\n        w    (t/writer baos :json)\n        _    (t/write w x)\n        ret  (.toString baos)]\n    (.reset baos)\n    ret)")
	(title "write-transit [x]"))

([FlightPro_Class20014] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/pump-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\")\n       (r/charset \"UTF-8\"))")
	(title "responseN [chn]"))

([FlightPro_Class20017] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/one-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\")\n       (r/charset \"UTF-8\"))")
	(title "response1 [chn]"))

([FlightPro_Class20021] of  CloFunction

	(source "(defroutes app-routes\n  (GET \"/\" [] (slurp (str ROOT \"cezium.html\")))\n  (GET \"/chart\" [] (slurp (str ROOT \"leaflet.html\")))\n  (GET \"/czml/\" [] (czs/events))\n  (GET \"/question/\" [& params] (cmd/question params))\n  (GET \"/answer/\" [] (response1 (:answer cmd/CHN)))\n  (GET \"/directives/\" [] (responseN (:directives cmd/CHN)))\n  (GET \"/instructions/\" [] (responseN (:instructions cmd/CHN)))\n  (GET \"/manual-data/\" [& params] (cmd/get-manual-data params))\n  (GET \"/command/:cmd\" [cmd & params] \n    ((resolve (symbol (str \"pro.commands/\" cmd))) params))\n  (route/files \"/\" (do (println [:ROOT-FILES ROOT]) {:root ROOT}))\n  (route/resources \"/\")\n  (route/not-found \"Not Found\"))\n\n(def APP\n  (handler/site app-routes))")
	(title "init-server []"))

([FlightPro_Class20022] of  CloFunction

	(source "([]\n    (start-server PORT))\n([port]\n  (if (nil? APP)\n    (init-server))\n  (def SERV (jetty/run-jetty APP {:port port :join? false})))")
	(title "start-server"))

([FlightPro_Class20023] of  CloFunction

	(source "(when-let [serv SERV]\n  (.stop serv)\n  (def SERV nil)\n  (println \"Server stopped!\"))")
	(title "stop-server []"))

([FlightPro_Class20024] of  CloFunction

	(source "(let [address (str HOST PORT)]\n  (println \"Location:\" address)\n  (when (java.awt.Desktop/isDesktopSupported)\n    (.browse (java.awt.Desktop/getDesktop) (java.net.URI. address))))")
	(title "view3D-in-browser []"))

([FlightPro_Class20025] of  CloProgram

	(cloFunctions
		[FlightPro_Class20029]
		[FlightPro_Class20031]
		[FlightPro_Class20032]
		[FlightPro_Class20033]
		[FlightPro_Class20034]
		[FlightPro_Class20035]
		[FlightPro_Class20036]
		[FlightPro_Class20037]
		[FlightPro_Class830001])
	(cloNamespace [FlightPro_Class20026])
	(cloVars
		[FlightPro_Class20027]
		[FlightPro_Class20028])
	(title "Cesium Server"))

([FlightPro_Class20026] of  CloNamespace

	(source "(:require\n    [ring.util.response :as r]\n    [async.proc :as asp])\n(:import java.util.Calendar)")
	(title "cesium.core"))

([FlightPro_Class20027] of  CloVar

	(source "(asp/mk-chan)")
	(title "CZ-CHAN"))

([FlightPro_Class20028] of  CloVar

	(source "true")
	(title "DOC-SND"))

([FlightPro_Class20029] of  CloFunction

	(source ";; (println [:CZ-EVT typ dat])\n(asp/pump-in CZ-CHAN [typ (.trim dat)])")
	(title "send-event [typ dat]"))

([FlightPro_Class20031] of  CloFunction

	(source "(let [evt-hr (fn [[typ dat]]\n                   (str \"event: \" typ \"\\ndata: \" dat \"\\n\\n\"))\n       ee (deref (future (asp/pump-out CZ-CHAN)))\n       resp (if (seq ee)\n                 (apply str (map evt-hr ee))\n                 \"\")]\n  (-> (r/response resp)\n         (r/header \"Access-Control-Allow-Origin\" \"*\")\n         (r/header \"Content-Type\" \"text/event-stream;charset=utf-8\")))")
	(title "events []"))

([FlightPro_Class20032] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       yar (.get cld Calendar/YEAR )\n       mon (inc (.get cld Calendar/MONTH))\n       dat (.get cld Calendar/DATE)\n       hor (.get cld Calendar/HOUR_OF_DAY)\n       min (.get cld Calendar/MINUTE)\n       sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601curt []"))

([FlightPro_Class20033] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       mil (.getTimeInMillis cld)\n       _ (.setTimeInMillis cld (+ mil (* sec 1000)))\n        yar (.get cld Calendar/YEAR )\n        mon (inc (.get cld Calendar/MONTH))\n        dat (.get cld Calendar/DATE)\n        hor (.get cld Calendar/HOUR_OF_DAY)\n        min (.get cld Calendar/MINUTE)\n        sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601futt [sec]"))

([FlightPro_Class20034] of  CloFunction

	(source "(str \"{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\",\\\"clock\\\":{\\\"currentTime\\\":\\\"\" (iso8601futt -16) \"\\\"}}\")")
	(title "doc []"))

([FlightPro_Class20035] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"availability\\\":\\\"\"\n               (iso8601curt) \"/\" (iso8601futt span-sec)\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\" \n               scale\n               \" ,\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -24]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\"\n               lon\n               \", \"\n               lat\n               \", \"\n               alt\n               \"]}}\")]\n    (send-event \"czml\" p))")
	(title "location [label scale img-url lat lon alt span-sec]"))

([FlightPro_Class20036] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\"\n               (/ scale 2)\n               \",\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -8]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\\\"\"\n               tim1\n               \"\\\", \"\n               lon1\n               \", \"\n               lat1\n               \", \"\n               alt1\n               \",\\\"\"\n               tim2\n               \"\\\", \"\n               lon2\n               \", \"\n               lat2\n               \", \"\n               alt2\n               \"]}}\")]\n    ;; (println :CZML p)\n    (send-event \"czml\" p))")
	(title "leg [label img-url scale [lat1 lon1 alt1 tim1] [lat2 lon2 alt2 tim2]]"))

([FlightPro_Class20037] of  CloFunction

	(source "(let [min-scl 0.25\n       scl (+ min-scl (* (- 1 min-scl) (- 1 (/ dist max-dist))))]\n  (location txt scl \"img/arrdn.png\" lat lon 100 40))")
	(title "point-out [txt [lat lon] dist max-dist]"))

([FlightPro_Class210000] of  CloFunction

	(source "(let [cosphi1 (Math/cos phi1)\n       sinphi1 (Math/sin phi1)\n       cosaz (Math/cos az)\n       sinaz (Math/sin az)\n       sinc (Math/sin c)\n       cosc (Math/cos c)\n       phi2 (Math/asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (Math/atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n   [phi2 lam2])")
	(title "spherical-between [^double phi1 ^double lambda0 ^double c ^double az]"))

([FlightPro_Class210001] of  CloFunction

	(source "([params]\n  (clear))\n([]\n  (fr24/clear-flights)\n  (rete/reset)\n  (asp/pump-in (:instructions CHN)\n      {:instruct :clear})\n  \"\")")
	(title "clear"))

([FlightPro_Class210007] of  CloVar

	(source "(volatile! {:n 0 :s 0 :w 0 :e 0 :z 0})")
	(title "BBX"))

([FlightPro_Class210008] of  CloFunction

	(source "([lat lon]\n  (let [{:keys [n s w e]} @BBX\n         hla (/ (abs (- n s)) 2)\n         hlo (/ (abs (- e w)) 2)]\n    (vswap! BBX merge {:n (+ lat hla) :s (- lat hla) :w (- lon hlo) :e (+ lon hlo)}))) \n([mp]\n  (vswap! BBX merge mp))")
	(title "set-bbx"))

([FlightPro_Class210009] of  CloFunction

	(source "(println [:FLIGHTS-PROCESS \n  (asp/start-process STATUS \n                               #(do (flights-in-bbx) (process-fn FLIGHTS) true)\n                               (:time-out F24)\n	       nil)])")
	(title "start [process-fn]"))

([FlightPro_Class210010] of  CloVar

	(source "(volatile! \"START\")")
	(title "STATUS"))

([FlightPro_Class210011] of  CloVar

	(source "{:url-flights \"http://data-live.flightradar24.com/zones/fcgi/feed.js\"\n :url-airports \"http://www.flightradar24.com/_json/airports.php\"\n :url-flight-data \"http://data-live.flightradar24.com/clickhandler/?version=1.5&flight=\"\n :time-out 16000}")
	(title "F24"))

([FlightPro_Class210012] of  CloFunction

	(source "(asp/stop-process STATUS)")
	(title "stop []"))

([FlightPro_Class210013] of  CloFunction

	(source "(asp/running? STATUS)")
	(title "running? []"))

([FlightPro_Class220000] of  CloFunction

	(source "(doseq [veh (vals @VEHICLES)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh)))\n(vreset! VEHICLES {})")
	(title "clear-vehicles []"))

([FlightPro_Class220001] of  Rule

	(lhs "?ob1 (Onboard)\n?ob2 (Onboard callsign ?cs time 0)\n(Flight age \"NEW\"\n	callsign ?cs\n	id ?id\n	coord ?crd\n	course ?crs\n	speed ?spd\n	altitude ?alt)")
	(rhs "(es/fly-onboard-to ?cs ?crd ?crs ?crs ?spd ?alt -1)\n(retract ?ob1)\n(modify ?ob2 time 1)")
	(salience 1)
	(title "af:SwitchOnboard"))

([FlightPro_Class220007] of  CloFunction

	(source "(json-web-data (str (:url-flight-data F24) id))")
	(title "fl-info [id]"))

([FlightPro_Class220008] of  CloVar

	(source "(volatile! {})")
	(title "FL-INFOS"))

([FlightPro_Class220026] of  CloFunction

	(source "(set-html! \"commands-header\" \"<h4>Commands</h4>\")\n(set-html! \"commands\"\n  \"<select onchange='javascript:chart.client.command(this.value)'>\n   <option value='commands'>Commands</option>\n   <option value='watch-visible'>Watch Visible Area</option>\n   <option value='move-to'>Move to Airport</option>\n   <option value='schedule'>Schedule Flight</option>\n   <option value='wikipedia'>Toggle Wikipedia</option>\n   <option value='question'>Ask Question</option>\n   <option value='clear'>Clear</option>\n   </select>\")")
	(title "show-chart-controls []"))

([FlightPro_Class220027] of  CloFunction

	(source "(condp = cmd\n  \"commands\" nil\n  \"watch-visible\" (let [bnd (.getBounds @CHART)\n	          prm (str \"?n=\" (.getNorth bnd)\n		\"&s=\" (.getSouth bnd)\n		\"&w=\" (.getWest bnd)\n		\"&e=\" (.getEast bnd)\n		\"&z=\" (.getZoom @CHART))]\n	       (GET (str (:command URL) cmd prm) no-handler))\n  \"move-to\" (move-to)\n  \"schedule\" (schedule)\n  \"question\" (question)\n  (GET (str (:command URL) cmd) no-handler))\n(ctl/show-chart-controls)")
	(title "command [cmd]"))

([FlightPro_Class220030] of  CloFunction

	(source "([]\n  (watch-visible @fr24/BBX))\n([params]\n  (println [:CMD-WATCH-VISIBLE params])\n  (fr24/set-bbx (reduce-kv #(assoc %1 %2 (read-string %3)) {} params))\n  (if (not= @fr24/STATUS \"RUN\")\n    (fr24/start process-flights))\n  \"\")")
	(title "watch-visible"))

([FlightPro_Class230000] of  CloFunction

	(source "(czm/camera :pitch (ctl/get-value \"pitch-val\"))")
	(title "level-view []"))

([FlightPro_Class230001] of  CloFunction

	(source "(let [ldiff (- lambda lambda0)\n       cosphi (Math/cos phi)]\n  (Math/atan2 (* cosphi (Math/sin ldiff))\n                      (- (* (Math/cos phi1) (Math/sin phi)) \n                          (* (Math/sin phi1) cosphi (Math/cos ldiff)))))")
	(title "spherical-azimuth [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class230003] of  Rule

	(lhs "?ob (Onboard callsign ?cs time 0)\n(Flight age \"NEW\"\n	callsign ?cs\n	id ?id\n	coord ?crd\n	course ?crs\n	speed ?spd\n	altitude ?alt)\n(not Onboard)")
	(rhs "(es/fly-onboard-to ?cs ?crd ?crs ?crs ?spd ?alt -1)\n(modify ?ob time 1)")
	(salience 0)
	(title "af:StartOnboard"))

([FlightPro_Class230004] of  ClsRequired

	(cloFunctions
		[FlightPro_Class210000]
		[FlightPro_Class240006]
		[FlightPro_Class230001]
		[FlightPro_Class250002]
		[FlightPro_Class250003]
		[FlightPro_Class250004]
		[FlightPro_Class250005]
		[FlightPro_Class250006]
		[FlightPro_Class250007]
		[FlightPro_Class250008]
		[FlightPro_Class250009]
		[FlightPro_Class390001]
		[FlightPro_Class10002]
		[FlightPro_Class730004])
	(cloNamespace [FlightPro_Class240005])
	(title "Geo"))

([FlightPro_Class230005] of  CloFunction

	(source "(if (= @fr24/STATUS \"RUN\")\n  (watch-visible))")
	(title "update-watch-area []"))

([FlightPro_Class240000] of  CloVar

	(source "(/ Math.PI 10800)")
	(title "NMRAD"))

([FlightPro_Class240001] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) crs (:speed car))\n  (vswap! carr assoc :course crs))")
	(title "set-course [carr crs]"))

([FlightPro_Class240002] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) (:course car) spd)\n  (vswap! carr assoc :speed spd))")
	(title "set-speed [carr spd]"))

([FlightPro_Class240005] of  CloNamespace

	(title "calc.geo"))

([FlightPro_Class240006] of  CloFunction

	(source "(let [pdiff (Math/sin (/ (- phi phi1) 2.0))\n       ldiff (Math/sin (/ (- lambda lambda0) 2.0))\n       rval (Math/sqrt (+ (* pdiff pdiff) (* (Math/cos phi1) (Math/cos phi) ldiff ldiff)))]\n   (* 2.0 (Math/asin rval)))")
	(title "spherical-distance [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class250000] of  CloFunction

	(source ";; Calculates end point of turn\n(if (not= crs1 crs2)\n  (let [step (* crs-stp crs-acl)\n         tioh (/ crs-tio 3600000)]\n    (loop [crs crs1 point ipoint]\n      (if (< (Math/abs (- crs crs2)) step)\n        point\n        (recur (geo/norm-crs (course-closer crs crs2 step)) \n                  (geo/future-pos point crs spd tioh)))))\n  ipoint)")
	(title "turn-end-point [ipoint spd crs1 [crs2 crs-acl] crs-stp crs-tio]"))

([FlightPro_Class250001] of  CloFunction

	(source "(let [lnd (:landing spp)\n       tcrd (:finish-crd spp)\n       crs (:finish-run spp)		;; landing course\n       rcrs (geo/rev-bear crs)		;; reverse landing course\n       rgen (geo/rev-bear (:general-crs spp))	;; reverse general course\n       [x crsa] (:final-turn-course lnd)	;; landing course accel\n       [spd y spda] (:speed lnd)		;; final turn speed\n       omd (:outer-marker-distance lnd)\n       rudd (:rudder @mfs/CARRIER)\n       ftcrd (mfs/turn-end-point 	\n	(geo/future-pos tcrd rcrs omd 1) ;; outer-marker coordinates\n	spd \n	rcrs	\n	[rgen crsa] \n	(:step rudd) \n	(:time-out rudd))] \n    (merge lnd  {:final-turn-crd	ftcrd\n	:landing-crs	[crs crsa] 	\n     	:lannding-spd	[spd spda]}))")
	(title "landing-plan [spp]"))

([FlightPro_Class250002] of  CloFunction

	(source "(let [phi (Math/toRadians lat)\n       lam (Math/toRadians lon)\n       dir (Math/toRadians crs)\n       way (* spd tim)\n       way (Math/toRadians (/ way 60))\n       [phi2 lam2] (spherical-between phi lam way dir)]\n   [(Math/toDegrees phi2) (Math/toDegrees lam2)])")
	(title "future-pos [[lat lon] crs spd tim]"))

([FlightPro_Class250003] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-distance fi1 ld1 fi2 ld2)]\n   (* (Math/toDegrees rad) 60))")
	(title "distance-nm [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250004] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-azimuth fi1 ld1 fi2 ld2)\n       deg (Math/toDegrees rad)]\n  (cond\n    (< deg 0) (+ deg 360.0)\n    (> deg 360.0) (- deg 360.0)\n    true deg))")
	(title "bear-deg [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250005] of  CloFunction

	(source "(let [denom (- (* (- y4 y3) (- x2 x1)) (* (- x4 x3) (- y2 y1)))]\n  (if (not (== denom 0.0))\n      (let [ua (/ (- (* (- x4 x3) (- y1 y3)) (* (- y4 y3) (- x1 x3))) denom)\n             ub (/ (- (* (- x2 x1) (- y1 y3)) (* (- y2 y1) (- x1 x3))) denom)]\n        (if (and (<= 0.0 ua 1.0) (<= 0.0 ub 1.0))\n            [(+ y1 (* ua (- y2 y1))) (+ x1 (* ua (- x2 x1)))]))))")
	(title "seg-intersect [x1 y1 x2 y2 x3 y3 x4 y4]"))

([FlightPro_Class250006] of  CloFunction

	(source "(let [[la3 lo3] (future-pos [la1 lo1] crs1 spd1 tim)\n       [la4 lo4] (future-pos [la2 lo2] crs2 spd2 tim)]\n   (seg-intersect lo1 la1 lo3 la3 lo2 la2 lo4 la4))")
	(title "future-intersect [[la1 lo1] crs1 spd1 [la2 lo2] crs2 spd2 tim]"))

([FlightPro_Class250007] of  CloFunction

	(source "(let [rb (+ b 180)]\n  (if (> rb 360) (- rb 360) rb))")
	(title "rev-bear [b]"))

([FlightPro_Class250008] of  CloFunction

	(source "(let [bea (bear-deg [lat1 lon1] [lat2 lon2])\n       ca1 (- bea crs)]\n  (cond\n    (> ca1 180) (- ca1 360)\n    (< ca1 -180) (+ ca1 360)\n    true ca1))")
	(title "course-angle [crs [lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class250009] of  CloFunction

	(source "(let [ca (course-angle crs crd1 crd2)]\n   (or (> ca 90) (< ca -90)))")
	(title "abaft [crs crd1 crd2]"))

([FlightPro_Class250010] of  Rule

	(lhs "?ob (Onboard time ?t callsign ?cs\n	((not= ?cs \"MANUAL\")\n	 (> ?t 0)))\n(Flight age \"CURRENT\" \n	callsign ?cs\n	course ?crs1\n	time ?t1 \n	(<= ?t ?t1))\n(Flight age \"NEW\" \n	callsign ?cs\n	course ?crs2\n	coord ?crd2 \n	speed ?spd2\n	altitude ?alt2\n	time ?t2)")
	(rhs "(modify ?ob time ?t2)\n(es/fly-onboard-to ?cs ?crd2 ?crs1 ?crs2 ?spd2 ?alt2 (- ?t2 ?t1))")
	(salience 0)
	(title "af:FlyOnboardTo"))

([FlightPro_Class250011] of  CloFunction

	(source ";;(println :FOB cs crd2 crs1 crs2 spd2 alt2 per)\n(if (not ONB-PAUSE)\n  (asp/pump-in (:directives cmd/CHN)\n	{:directive :vehicle\n	 :period per\n	 :vehicle {\n	   :coord crd2\n	   :altitude alt2\n	   :speed spd2\n	   :course crs2\n	   :old-course crs1}}))")
	(title "fly-onboard-to [cs crd2 crs1 crs2 spd2 alt2 per]"))

([FlightPro_Class260000] of  CloFunction

	(source "(println \"Loading Clojure Programs...\")\n(if-let [wps (ClojureTab/findAnnotated (cls-instances \"WorkingPrograms\") nil)]\n  (loop [i 1 pins (svs wps \"cloPrograms\")]\n    (when (seq pins)\n      (println (str \" 1.\" i \" \" (sv (first pins) \"title\") \" = \" (ClojureTab/loadProgram (first pins)) ))\n      (recur (inc i) (rest pins))))\n  (println \"  Annotated instance of WorkingPrograms not found!\"))\n(println\"Starting Pro Server...\")\n(eval '(pro.server/start-server))\n(println\"Starting My Flights Movement...\")\n(eval '(my.flights.move/start-movement))\n(println\"Starting Expert System...\")\n(eval '(ru.rules/run-engine \"Flights Pro Run\"))\n(println\"Go Initial Airport...\")\n(eval '(pro.commands/go-initial-airport))")
	(title "clojure-work []"))

([FlightPro_Class260001] of  CloFunction

	(source "(let [car @carr]\n  (if (= (:mode car) \"MANUAL\")\n    (ctl/show-flight-data car)))")
	(title "flight-data-manual [carr]"))

([FlightPro_Class260002] of  CloFunction

	(source "(vreset! FLIGHTS {})")
	(title "clear-flights []"))

([FlightPro_Class270000] of  CloFunction

	(source "(println [:CMD-ONBOARD params])\n(let [cls (:callsign params)]\n  (if (= cls \"select\")\n    (let [lst (map fr24/callsign (keys @fr24/FLIGHTS))\n           lst (filter #(not (empty? %)) (vec (sort lst)))]\n      (asp/pump-in (:directives CHN)\n	{:directive :callsigns\n	 :list lst}))\n    (do (asp/pump-in (:instructions CHN)\n	{:instruct :onboard \n	 :callsign cls})\n      (rete/assert-frame ['Onboard 'callsign cls 'time 0]))))\n\"\"")
	(title "onboard [params]"))

([FlightPro_Class270001] of  CloFunction

	(source "(set-html! \"onboard-fld\" \n  (str \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\"\n          (if (empty? list)\n            (str \"<option value='callsign'>callsign</option>\n                   <option value='select'>select</option>\")\n            (str \"<option value='select'>select</option>\"\n              (apply str (for [e list]\n                                (str \"<option value='\" e \"'>\" e \"</option>\")))))\n        \"</select>\"))")
	(title "callsigns [list]"))

([FlightPro_Class270002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	vertical-status \"OFF\"\n	cruise ?cru)")
	(rhs "(println [:ClimbStart ?id ?cru])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?cru))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?cru))\n(modify ?fp vertical-status \"CLIMB\")")
	(salience 0)
	(title "mf:ClimbStart"))

([FlightPro_Class270003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	vertical-status \"CLIMB\"\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((= ?alt (:altitude ?cru))\n	 (= ?spd (:spdeed ?cru))))")
	(rhs "(println [:ClimbDone ?id ?alt])\n(modify ?fp vertical-status \"LEVEL\")")
	(salience 0)
	(title "mf:ClimbDone"))

([FlightPro_Class280000] of  CloProgram

	(cloFunctions
		[FlightPro_Class620010]
		[FlightPro_Class290006]
		[FlightPro_Class200001]
		[FlightPro_Class250011]
		[FlightPro_Class90005]
		[FlightPro_Class490000]
		[FlightPro_Class530000]
		[FlightPro_Class500000]
		[FlightPro_Class520001]
		[FlightPro_Class620004]
		[FlightPro_Class960030]
		[FlightPro_Class620003]
		[FlightPro_Class490002]
		[FlightPro_Class540017]
		[FlightPro_Class250001]
		[FlightPro_Class690004]
		[FlightPro_Class690009]
		[FlightPro_Class690010]
		[FlightPro_Class850007]
		[FlightPro_Class1020001])
	(cloNamespace [FlightPro_Class280001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class160009]
		[FlightPro_Class590001]
		[FlightPro_Class690005]
		[FlightPro_Class690006])
	(title "ES Functions"))

([FlightPro_Class280001] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [pro.commands :as cmd]\n  [async.proc :as asp]\n  [cesium.core :as czs]\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [fr24.client :as fr24]\n  [my.flights.move :as mfs]\n  [rete.core :as rt])\n(:import\n  java.util.Calendar)")
	(title "es"))

([FlightPro_Class280002] of  CloFunction

	(source "(czm/camera :roll \n  (if (> (:speed vehicle) 120)\n    (dyn/bank (:old-course vehicle) \n	(:course vehicle) \n	(:bank-params @CARRIER))\n    0))")
	(title "bank-vehicle [vehicle]"))

([FlightPro_Class280040] of  CloFunction

	(source "(when-let [dati (.getInstance *kb* (.substring id 2))]\n  (decorate-instance dati)\n  (point-out-place {:instance dati})\n  (asp/pump-in (:ins-chn @COMM) \n	(placemark-popup-instruct dati)))")
	(title "placemark-info [id]"))

([FlightPro_Class280085] of  POIRequest

	(lat 60.1667)
	(lng 24.9333)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0))

([FlightPro_Class280086] of  TypeClass

	(name "shop")
	(url "/img/shop2.jpeg"))

([FlightPro_Class280087] of  TypeName

	(name "hifi"))

([FlightPro_Class280089] of  TypeName

	(name "convenience"))

([FlightPro_Class280091] of  TypeClass

	(name "amenity")
	(url "/img/amenity2.png"))

([FlightPro_Class280092] of  TypeName

	(name "fast_food"))

([FlightPro_Class280094] of  TypeName

	(name "vending_machine"))

([FlightPro_Class280096] of  TypeName

	(name "art"))

([FlightPro_Class280098] of  TypeClass

	(name "man_made")
	(url "/img/man_made1.png"))

([FlightPro_Class280099] of  TypeName

	(name "surveillance"))

([FlightPro_Class280101] of  TypeName

	(name "nightclub"))

([FlightPro_Class280105] of  TypeName

	(name "pub"))

([FlightPro_Class280107] of  TypeName

	(name "restaurant"))

([FlightPro_Class280109] of  TypeName

	(name "kiosk"))

([FlightPro_Class280113] of  TypeName

	(name "cinema"))

([FlightPro_Class280115] of  TypeName

	(name "hairdresser"))

([FlightPro_Class280118] of  TypeName

	(name "bar"))

([FlightPro_Class280120] of  TypeName

	(name "hardware"))

([FlightPro_Class280123] of  TypeName

	(name "pharmacy"))

([FlightPro_Class280125] of  TypeName

	(name "toilets"))

([FlightPro_Class280128] of  TypeName

	(name "school"))

([FlightPro_Class280131] of  TypeName

	(name "greengrocer"))

([FlightPro_Class280136] of  TypeName

	(name "post_box"))

([FlightPro_Class280139] of  TypeClass

	(name "tourism")
	(url "/img/tourism1.png"))

([FlightPro_Class280140] of  TypeName

	(name "hotel"))

([FlightPro_Class280146] of  TypeName

	(name "second_hand"))

([FlightPro_Class280148] of  TypeName

	(name "fire_hydrant"))

([FlightPro_Class280150] of  TypeName

	(name "travel_agency"))

([FlightPro_Class280161] of  TypeName

	(name "nail_salon"))

([FlightPro_Class280164] of  CloFunction

	(source "(if (instance? Instance pois)\n  (let [ins {:instruct :create-placemark\n	:iname (.getName pois)\n	:tip (or (sv pois \"name\")\n	            (if-let [ntn (sv (sv pois \"typeName\") \"name\")]\n		ntn\n		\"unnamed\"))\n	:lat (sv pois \"lat\")\n	:lon (sv pois \"lng\")}]\n    (if-let [url (sv (sv pois \"typeName\") \"url\")]\n      (assoc ins :url-ico url)\n      (if-let [url (sv (sv pois \"typeClass\") \"url\")]\n        (assoc ins :url-ico url)\n        (assoc ins :feature \"default-pois\"))))\n  (map pois-instruct pois))")
	(title "pois-instruct [pois]"))

([FlightPro_Class280182] of  CloFunction

	(source "(let [mp (into {} hm)\n       lat (mp \"lat\")\n       lon (mp \"lng\")\n       zoo 15\n       chn (:ins-chn @COMM)\n       rss (mp \"osm-responses\")]\n  (map-view-ctrl :server)\n  (asp/pump-in chn\n	{:instruct :map-center\n	 :coord [lat lon]\n	 :zoom zoo\n	 :lock true})\n  (doseq [rs rss]\n    (asp/pump-in chn (pois-instruct rs))))")
	(title "show-on-map [hm inst]"))

([FlightPro_Class280183] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class280085])
	(%3AANNOTATION-TEXT "Current")
	(%3ACREATION-TIMESTAMP "2017.03.10 18:56:41.210 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class280198] of  CloFunction

	(source "(condp = (typ dati)\n  \"WikiArticle\"	(invoke-later (do\n	  (.setDirectType dati (cls \"WikiArticleDetails\"))\n	  (ssv dati \"max-rows\" (int 50))\n	  (ssv dati \"radius\" (float 1))\n	  (ssv dati \"poi-req-butt\" \n	    (first (.getDefaultValues (slt \"poi-req-butt\"))))\n	  (ssv dati \"butt-show-pois\" \n	    \"Show on Map/ext.data/show-on-map\")\n	  (ssv dati \"butt-del-pois\" \n	    \"Delete POIs/ext.data/delete-pois\")\n	  (ssv dati \"butt-return\" \n	    \"Return to Flight/ext.data/ret-to-flight\")\n	  (let [frm (.show *prj* dati)]\n	    (.setLocationRelativeTo frm nil)\n	    (.setAlwaysOnTop frm true)\n	    (.setVisible frm true))))\n  false)")
	(title "decorate-instance [dati]"))

([FlightPro_Class290000] of  CloFunction

	(source "(let [car @carr]\n  (if (= (:mode car) \"MANUAL\")  \n    (camera-vehicle car (int (/ (:camera TIO) 1000)))))")
	(title "camera-manual [carr]"))

([FlightPro_Class290001] of  CloFunction

	(source "(println [:CMD-FOLLOW params])\n(let [id (:id params)]\n  (if (fr24/dat id)\n    (rete/assert-frame ['Follow 'id id 'time 0])))")
	(title "follow [params]"))

([FlightPro_Class290003] of  %3AINSTANCE-ANNOTATION

	(%3ACREATION-TIMESTAMP "2016.11.24 18:22:25.919 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class100000])
	(%3ACREATION-TIMESTAMP "2016.11.24 18:24:16.125 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290005] of  Rule

	(lhs "(Flight id ?id\n           callsign ?cs\n           coord ?crd\n           course ?crs\n           speed ?spd\n           status ?sts\n           age \"NEW\")")
	(rhs "(es/put-on-map ?id ?cs ?crd ?crs ?spd ?sts)")
	(salience 0)
	(title "af:PutFlightOnMap"))

([FlightPro_Class290006] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :create-update\n	 :id id\n	 :vehicle {:callsign cs\n	               :coord crd\n	               :course crs\n	               :speed spd\n	               :status sts}})")
	(title "put-on-map [id cs crd crs spd sts]"))

([FlightPro_Class290041] of  TypeName

	(name "town"))

([FlightPro_Class290043] of  TypeClass

	(name "power")
	(url "/img/power2.jpeg"))

([FlightPro_Class290044] of  TypeName

	(name "pole"))

([FlightPro_Class290046] of  TypeName

	(name "buffer_stop"))

([FlightPro_Class290052] of  TypeName

	(name "tower"))

([FlightPro_Class3] of  CloVar

	(source "(js/Cesium.createWorldTerrain)")
	(title "TERR-PROV"))

([FlightPro_Class30000] of  CloFunction

	(source "(letfn [(proc-fn [carr]\n                      (let [car @carr\n                             g (gear-key car)\n                             target (:target g)\n                             step (* (:accel g) (:step g))\n                             param (param-key car)]\n                        (if (calc/approx= param target step)\n                            (do (param-fn carr target)\n                                  false)\n                            (do (param-fn carr (closer-fn param target step))\n                                  true))))]\n  (vswap! carr assoc-in [gear-key :eqz-status] (volatile! \"STOP\"))\n  (let [g (gear-key @carr)]\n    (asp/start-process (:eqz-status g) \n                                   #(proc-fn carr) \n                                   (:time-out g)\n	           final-fn)))")
	(title "equalize [carr gear-key param-key param-fn closer-fn final-fn]"))

([FlightPro_Class300000] of  CloFunction

	(title "latitude [lat]"))

([FlightPro_Class300001] of  RuleSet

	(rules
		[FlightPro_Class690000]
		[FlightPro_Class730002]
		[FlightPro_Class750009]
		[FlightPro_Class780020]
		[FlightPro_Class810007]
		[FlightPro_Class840000]
		[FlightPro_Class690007]
		[FlightPro_Class850005]
		[FlightPro_Class580045]
		[FlightPro_Class580050]
		[FlightPro_Class810002]
		[FlightPro_Class820008]
		[FlightPro_Class820009]
		[FlightPro_Class870008]
		[FlightPro_Class870010])
	(templates [Question])
	(title "Questions"))

([FlightPro_Class300006] of  CloFunction

	(source "(let [[lat lon] (:coord vehicle)\n       alt (:altitude vehicle)]\n  (vswap! VEHICLE merge vehicle)\n  (if (<= per 0)\n    (czm/move-to lat lon \n	(int (/ alt 3.28084)) \n	(:course vehicle))\n    (czm/fly-to lat lon \n	(int (/ alt 3.28084)) \n	(:course vehicle) \n	per)))")
	(title "camera-vehicle [vehicle per]"))

([FlightPro_Class30001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class130004]
		[FlightPro_Class110000])
	(cloNamespace [FlightPro_Class30002])
	(title "Dynamic"))

([FlightPro_Class30002] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [calc.core :as calc]\n  [calc.geo :as geo])")
	(title "calc.dynamic"))

([FlightPro_Class30003] of  CloFunction

	(source "(float (+ y1 (/ (* (- y2 y1) (- x x1)) (- x2 x1))))")
	(title "linint [x [x1 y1] [x2 y2]]"))

([FlightPro_Class30004] of  CloFunction

	(source ";; left and right borders in table are exclusive\n(let [[lo hi] (split-with #(< (first %) x) table)]\n  (if (seq lo)\n    (if (seq hi)\n      (linint x (last lo) (first hi))\n      [:UB (second (last table))])\n    [:LB (second (first table))]))")
	(title "tabfun [x table]"))

([FlightPro_Class30005] of  CloFunction

	(source ";; inverse function, only for monotone(!!!) functions\n(tabfun y (map #(vector (second %)(first %)) table))")
	(title "i-mono-tabfun [y table]"))

([FlightPro_Class30006] of  CloFunction

	(source "(let [res (tabfun x table)]\n  (if (vector? res) (second res) res))")
	(title "smooth-tabfun [x table]"))

([FlightPro_Class30007] of  CloFunction

	(source "(cond\n (< from to) (+ from step)\n (> from to) (- from step)\n true to)")
	(title "step-closer [from to step]"))

([FlightPro_Class30011] of  CloFunction

	(source "(let [dif (- to from)]\n  (cond \n    (> dif 0)\n      (if (<= dif 180)\n        (+ from step)\n        (geo/norm-crs (- from step)))\n    (< dif 0) \n      (if (>= dif -180)\n        (- from step)\n        (geo/norm-crs (+ from step)))\n    true to))")
	(title "course-closer [from to step]"))

([FlightPro_Class30025] of  CloFunction

	(source "(cond\n  (> x y) (< (- x y) eps)\n  (< x y) (< (- y x) eps)\n  true true)")
	(title "approx= [x y eps]"))

([FlightPro_Class30026] of  CloFunction

	(source "([carr course]\n  (turn carr course nil))\n([carr course final-fn]\n  (vswap! carr assoc-in [:rudder :target] course)\n  (equalize carr :rudder :course set-course course-closer final-fn))\n([carr course accel final-fn]\n  (vswap! carr assoc-in [:rudder :accel] accel)\n  (turn carr course final-fn))")
	(title "turn"))

([FlightPro_Class30027] of  CloFunction

	(source "([carr speed]\n  (vswap! carr assoc-in [:propeller :target] speed)\n  (equalize carr :propeller :speed set-speed step-closer nil))\n([carr speed acl]\n  (vswap! carr assoc-in [:propeller :accel] acl)\n  (accel carr speed))")
	(title "accel"))

([FlightPro_Class310000] of  CloFunction

	(source "(println [:CMD-INFO params])\n(let [id (:id params)]\n  (if (.startsWith id \"pm\")\n    (exd/placemark-info id)\n    (let [inf (or (get @MY-INFOS id) (fr24/fl-info id))\n           cal (if-let[d (fr24/dat id)]\n                   (fr24/callsign d)\n                   id)]\n      (if inf\n        (let [apt (inf \"airport\")\n               acr (inf \"aircraft\")\n               tim (inf \"time\")\n               img (get (first (get-in acr [\"images\" \"thumbnails\"])) \"src\")\n               [lat lon] (fr24/coord id)\n               dat   [[\"from\" (or (get-in apt [\"origin\" \"name\"]) \"-\")]\n	[\"to\" (or (get-in apt [\"destination\" \"name\"]) \"-\")]\n	[\"airline\" (or (get-in inf [\"airline\" \"short\"]) \"-\")]\n	[\"real-departure\" (or (get-in tim [\"real\" \"departure\"]) \"-\")]\n	[\"scheduled-arrival\" (or (get-in tim [\"scheduled\" \"arrival\"]) \"-\")]\n	[\"aircraft\" (or (get-in acr [\"model\" \"text\"]) \"-\")]\n	[\"latitude\" (or lat \"-\")]\n	[\"longitude\" (or lon \"-\")]\n	[\"course\" (or (fr24/course id) \"-\")]\n	[\"speed\" (or (fr24/speed id) \"-\")]\n	[\"altitude\" (or (fr24/altitude id) \"-\")]\n	[(str \"<input type='button' style='color:purple' value='Trail'\n		onclick='chart.client.trail(\\\"\" id \"\\\")' >\")\n	 (str \"<input type='button' style='color:blue' value='Follow'\n		onclick='chart.client.follow(\\\"\" id \"\\\")' >\")]\n	[\"\"\n	 \"<input type='button' style='color:red' value='Stop'\n		onclick='chart.client.stopfollow()' >\"]]\n                       htm (make-info-html cal img dat)]\n          (asp/pump-in (:instructions CHN)\n            {:instruct :popup\n             :id (:id params)\n             :html htm\n             :time (:popup TIM)}))))))\n\"\"")
	(title "info [params]"))

([FlightPro_Class310001] of  CloVar

	(source "{:popup 30000\n :trail 30000}")
	(title "TIM"))

([FlightPro_Class310002] of  CloFunction

	(source "([id html time]\n  (let [vmp (@VEHICLES id)\n         [lat lon] (:coord @vmp)]\n    (popup lat lon html time)))\n([lat lon html time]\n  (popup lat lon html time 240 480))\n([lat lon html time w h]\n  (let [pop (-> js/L (.popup #js{:maxWidth w :maxHeight h})\n                (.setLatLng (array lat lon))\n                (.setContent html))]\n    (.addLayer @CHART pop)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART pop) time))))")
	(title "popup"))

([FlightPro_Class310003] of  CloFunction

	(source "(go (<! (timeout time))\n  (func))")
	(title "delayer [func time]"))

([FlightPro_Class310005] of  CloFunction

	(source "(let [head (str \"<h3>\" call \"</h3>\")\n       itag (str \"<img src=\\\"\" img \"\\\">\")\n       rows (for [[k v] dat]\n                 (str \"<tr><td>\" k \"</td><td>\" v \"</td></tr>\"))\n      rows (apply str rows)]\n  (str head itag \"<table>\" rows \"</table>\"))")
	(title "make-info-html [call img dat]"))

([FlightPro_Class310006] of  CloFunction

	(source "(if (number? x) x (rdr/read-string x))")
	(title "num-val [x]"))

([FlightPro_Class320000] of  CloFunction

	(source "{:mode \"MANUAL\"\n :coord   [(num-val (ctl/get-value \"input-lat\"))\n               (num-val (ctl/get-value \"input-lon\"))]\n :course   (num-val (ctl/get-value \"input-crs\"))\n :speed    (num-val (ctl/get-value \"input-spd\"))\n :altitude (num-val (ctl/get-value \"input-alt\"))}")
	(title "manual-vehicle []"))

([FlightPro_Class320001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [lon (num-val lon)\n         lat (num-val (ctl/get-value \"input-lat\"))\n         bea (mov/bear-deg-js (:coord @CARRIER) [lat lon])\n         ins (.-checked (ctl/by-id \"input-instant\"))]\n    (if ins\n      (do\n        (instantly-to lat lon)\n        (GET (str (:command URL) \"goto?lat=\" lat \"&lon=\" lon \"&from=COCKPIT\")))\n      (course (int bea)))))")
	(title "longitude [lon]"))

([FlightPro_Class320010] of  RuleSet

	(rules
		[FlightPro_Class320011]
		[FlightPro_Class410002]
		[FlightPro_Class410001]
		[FlightPro_Class370003]
		[FlightPro_Class220001]
		[FlightPro_Class430010]
		[FlightPro_Class290005]
		[FlightPro_Class320012]
		[FlightPro_Class320013]
		[FlightPro_Class350001]
		[FlightPro_Class230003]
		[FlightPro_Class250010]
		[FlightPro_Class390000]
		[FlightPro_Class1020000])
	(templates
		[Flight]
		[Onboard]
		[Follow])
	(title "All Flights"))

([FlightPro_Class320011] of  Rule

	(lhs "?of1 (Flight id ?id age \"OLD\" time ?t1)\n?of2 (Flight id ?id age \"OLD\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(retract ?of1)")
	(salience 1)
	(title "af:FlightHistory3"))

([FlightPro_Class320012] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	callsign ?cs\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"DESCEND\")\n	 (> ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"DESCEND\")\n(es/put-on-map ?id ?cs ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:DescendMark"))

([FlightPro_Class320013] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	callsign ?cs\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"CLIMB\")\n	 (< ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"CLIMB\")\n(es/put-on-map ?id ?cs ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:ClimbMark"))

([FlightPro_Class320014] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets
		[FlightPro_Class320010]
		[FlightPro_Class410000]
		[FlightPro_Class300001])
	(steps 1)
	(title "Flights Pro Run"))

([FlightPro_Class320015] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class320014])
	(%3ACREATION-TIMESTAMP "2016.11.23 17:10:20.165 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class320016] of  CloFunction

	(source "(let [cal @CALLS\n       onb @ONBOARD]\n  (doseq [[k v] (seq @fls)]\n    (let [cls (fr24/callsign v)\n           veh {:coord (fr24/coord v)\n                   :course (fr24/course v)\n                   :speed (fr24/speed v)\n                   :altitude (fr24/altitude v)\n                   :status \"LEVEL\"}]\n      (if (= cls onb)\n        (asp/pump-in DIR-CHN\n          {:directive :carrier\n           :callsign cls\n           :vehicle veh}))\n      (asp/pump-in INS-CHN\n        {:instruct :create-update\n         :id k\n         :vehicle veh})))\n  (if (and (empty? cal) (= onb \"select\"))\n    (let [cal (map fr24/callsign (keys @fls))]\n      (vreset! CALLS cal)\n      (async.proc/pump-in DIR-CHN \n        {:directive :callsigns :list cal}))))")
	(title "process-flights0 [fls]"))

([FlightPro_Class320022] of  CloFunction

	(source "(int (/ (System/currentTimeMillis) 1000))")
	(title "current-time []"))

([FlightPro_Class330000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"INITIAL-TURN\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	course ?crs\n	(= ?crs (first (:to-crs ?tof))))")
	(rhs "(println [:TakeoffDone ?id ?crs])\n(modify ?fp takeoff \"DONE\"\n	status \"CRUISE\")")
	(salience 0)
	(title "mf:TakeoffDone"))

([FlightPro_Class330001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	start-time ?stm\n	takeoff ?tof\n	((number? ?stm)\n	 (map? ?tof)))\n(Flight age \"CURRENT\"\n	id ?id\n	time ?tim\n	(>= ?tim ?stm))")
	(rhs "(println [:TakeoffStart ?id ?tof])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?tof))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?tof))\n(modify ?fp start-time \"PASSED\"\n	status \"TAKEOFF\")")
	(salience 0)
	(title "mf:TakeoffStart"))

([FlightPro_Class330003] of  CloVar

	(source "{:base (str HOST PORT \"/\")\n :chart (str HOST PORT \"/chart/\")\n :directives (str HOST PORT \"/directives/\")\n :instructions (str HOST PORT \"/instructions/\")\n :command (str HOST PORT \"/command/\")\n :question (str HOST PORT \"/question/\")\n :answer (str HOST PORT \"/answer/\")\n :manual-data (str HOST PORT \"/manual-data/\")}")
	(title "URL"))

([FlightPro_Class330004] of  CloVar

	(source "{:carrier 1000\n :camera 3030\n :directives 911\n :instructions 979\n :vehicles 200\n :display 831\n :new-czml-doc 4000\n :manual-data 6000\n :ext-data-popup 60000}")
	(title "TIO"))

([FlightPro_Class330005] of  CloFunction

	(source "(.-innerHTML (by-id id))")
	(title "get-html [id]"))

([FlightPro_Class330006] of  CloFunction

	(source "(.-value (by-id id))")
	(title "get-value [id]"))

([FlightPro_Class330040] of  TypeName

	(name "utility_pole"))

([FlightPro_Class330042] of  TypeName

	(name "ice_cream"))

([FlightPro_Class330045] of  TypeName

	(name "taxi"))

([FlightPro_Class330048] of  TypeName

	(name "flagpole"))

([FlightPro_Class330052] of  TypeClass

	(name "railway")
	(url "/img/railway2.png"))

([FlightPro_Class330053] of  TypeName

	(name "tram_stop"))

([FlightPro_Class330056] of  TypeName

	(name "supermarket"))

([FlightPro_Class330058] of  TypeName

	(name "station"))

([FlightPro_Class330062] of  TypeName

	(name "bicycle"))

([FlightPro_Class330066] of  TypeName

	(name "atm"))

([FlightPro_Class330068] of  TypeName

	(name "subway_entrance"))

([FlightPro_Class330073] of  TypeName

	(name "bank"))

([FlightPro_Class330085] of  TypeName

	(name "cafe"))

([FlightPro_Class330093] of  TypeClass

	(name "place")
	(url "/img/place1.png"))

([FlightPro_Class330094] of  TypeName

	(name "locality"))

([FlightPro_Class330105] of  TypeName

	(name "alcohol"))

([FlightPro_Class330107] of  TypeClass

	(name "leisure")
	(url "/img/leisure1.jpeg"))

([FlightPro_Class330108] of  TypeName

	(name "sports_centre"))

([FlightPro_Class330113] of  TypeName

	(name "recycling"))

([FlightPro_Class330116] of  TypeName

	(name "hospital"))

([FlightPro_Class330118] of  TypeName

	(name "library"))

([FlightPro_Class330120] of  TypeName

	(name "survey_point"))

([FlightPro_Class340000] of  CloFunction

	(source "(println [:CMD-TERRAIN params])\n(println \"Terrain: \" TERRAIN)\n(write-transit TERRAIN)")
	(title "terrain [params]"))

([FlightPro_Class340002] of  Rule

	(lhs "?sd (Schedule callsign ?csn\n	time ?tim\n	from ?frm\n	to ?to)")
	(rhs "(if-let [stm (es/start-time ?tim)]\n  (let [spp (es/specific-plan ?frm ?to)]\n     (my.flights.move/add-my-flight \n	?csn ?csn (:start-crd spp) (:start-run spp) 0 (:start-alt spp))\n     (asser FlightPlan id ?csn\n	start-time stm\n	spec-plan spp\n	takeoff (es/takeoff-plan spp)\n	cruise (es/cruise-plan spp)\n	landing (es/landing-plan spp)\n	status \"READY\"\n	vertical-status \"OFF\")\n     (pro.commands/set-my-flight-info ?csn ?tim ?frm ?to)))")
	(salience 0)
	(title "mf:FlightPlan"))

([FlightPro_Class350000] of  CloFunction

	(source "(let [pts (if (not (empty? trail))\n               trail\n               (if-let [inf (fr24/fl-info id)]\n                   (mapcat #(list (% \"lat\") (% \"lng\") (% \"alt\")) (inf \"trail\"))))]\n  (if pts\n    (asp/pump-in (:instructions CHN)\n        {:instruct :trail\n         :id id\n         :points pts\n         :options {:weight 3\n                        :color \"purple\"}\n         :time (:trail TIM)})))")
	(title "do-trail [id trail]"))

([FlightPro_Class350001] of  Rule

	(lhs "?f (Follow id ?id time ?t0)\n(Flight id ?id coord ?crd1 altitude ?alt1 age \"OLD\" time ?t1\n	(<= ?t0 ?t1))\n(Flight id ?id coord ?crd2 altitude ?alt2 age \"CURRENT\")\n(Flight id ?id coord ?crd3 altitude ?alt3 age \"NEW\" time ?t3 callsign ?cs)")
	(rhs "(println [:FOLLOW ?cs])\n(let [[lat1 lon1] ?crd1\n       [lat2 lon2] ?crd2\n       [lat3 lon3] ?crd3]\n  (pro.commands/set-map-view ?crd3)\n  (pro.commands/do-trail ?id \n	[lat3 lon3 ?alt3\n	 lat2 lon2 ?alt2\n	 lat1 lon1 ?alt1])\n  (modify ?f time ?t3))")
	(salience 0)
	(title "af:FollowFlight"))

([FlightPro_Class360000] of  CloFunction

	(source "(let [ops (clj->js options)\n       pts (map #(js/L.LatLng. (first %) (second %)) (partition 3 points))\n       pts (clj->js pts)\n       trl (js/L.polyline pts ops)]\n    (.addLayer @CHART trl)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART trl)\n                            time)))")
	(title "add-trail [id points options time]"))

([FlightPro_Class370000] of  CloFunction

	(source "(let [cen (js/L.LatLng. lat lon)\n        zom (or zoom (.getZoom @CHART))]\n  (.setView @CHART cen zom {})\n  (if (not lock)\n    (new-visible)))")
	(title "map-center [[lat lon] zoom lock]"))

([FlightPro_Class370001] of  CloFunction

	(source "(let [[n s w e] (visible-map)\n        z (.getZoom @CHART)\n        url (str (:command URL) \"visible?z=\" z\n		\"&n=\" n \n		\"&s=\" s \n		\"&w=\" w \n		\"&e=\" e)]\n    (GET url {:handler (fn [response])\n              :error-handler error-handler}))")
	(title "new-visible []"))

([FlightPro_Class370003] of  Rule

	(lhs "?f1 (Follow  id ?id1 time ?t1)\n?f2 (Follow  id ?id2 time 0\n	(not= ?id1 ?id2))")
	(rhs "(retract ?f1)\n(if (= ?id2 \"STOP\")\n   (retract ?f2))")
	(salience 1)
	(title "af:StopOrSwitchFollow"))

([FlightPro_Class370004] of  CloFunction

	(source "(if (= (:fr24-bbx-ctrl @exd/COMM) :client)\n  (asp/pump-in (:instructions CHN)\n	{:instruct :map-center\n	 :coord coord})\n  (fr24/set-bbx (first coord) (second coord)))")
	(title "set-map-view [coord]"))

([FlightPro_Class380000] of  CloFunction

	(source "(GET (str (:command URL) \"stopfollow\")\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "stopfollow []"))

([FlightPro_Class380001] of  CloFunction

	(source "(GET (str (:command URL) \"trail?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "trail [id]"))

([FlightPro_Class380002] of  CloFunction

	(source "(println [:CMD-TRAIL params])\n(do-trail (:id params) [])\n\"\"")
	(title "trail [params]"))

([FlightPro_Class380003] of  CloFunction

	(source "(let [bnd (.getBounds @CHART)]\n  [(.getNorth bnd)\n   (.getSouth bnd)\n   (.getWest bnd)\n   (.getEast bnd)])")
	(title "visible-map []"))

([FlightPro_Class380004] of  CloFunction

	(source "(println [:CMD-VISIBLE params])\n(let [bbz (reduce-kv #(assoc %1 %2 (read-string %3)) {} params)]\n  (vswap! exd/COMM assoc \n	:visible [(:n bbz) (:s  bbz) (:w bbz) (:e bbz)]\n	:ins-chn (:instructions CHN))\n  (if (:wiki @exd/COMM)\n    (exd/pump-wiki))\n  (fr24/set-bbx bbz))\n\"\"")
	(title "visible [params]"))

([FlightPro_Class390000] of  Rule

	(lhs "(Onboard callsign ?cs1)\n(Flight callsign ?cs1 coord ?c1 course ?crs1 age \"NEW\")\n(Flight id ?id2 coord ?c2 altitude ?a2 age \"CURRENT\" point4d ?p2 callsign ?cs2)\n(Flight id ?id2 coord ?c3 altitude ?a3 age \"NEW\" point4d ?p3 course ?crs3 \n	(< (calc.geo/distance-nm ?c1 ?c3) 24)))")
	(rhs "(cesium.core/leg ?cs2\n	(if (calc.geo/following? ?crs1 ?crs3)\n	  (es/URL-ICO \"FOLLOWING\")\n	  (es/URL-ICO \"COUNTER\")) \n	(calc.core/smooth-tabfun (calc.geo/distance-nm ?c1 ?c3) [[0 1.0][24 0.1]])\n	?p2\n	?p3)")
	(salience 0)
	(title "af:CZML-LegGeneration"))

([FlightPro_Class390001] of  CloFunction

	(source "(let [dif (Math/abs (- crs2 crs1))]\n   (or (< dif 90) (> dif 270)))")
	(title "following? [crs1 crs2]"))

([FlightPro_Class390002] of  ClsRequired

	(cloFunctions
		[FlightPro_Class130003]
		[FlightPro_Class30025]
		[FlightPro_Class30003]
		[FlightPro_Class30004]
		[FlightPro_Class30005]
		[FlightPro_Class30006])
	(cloNamespace [FlightPro_Class400003])
	(title "Calculus"))

([FlightPro_Class390003] of  CloFunction

	(source "(println [:CMD-STOPFOLLOW params])\n(rete/assert-frame ['Follow 'id \"STOP\" 'time 0])\n\"\"")
	(title "stopfollow [params]"))

([FlightPro_Class4] of  CloVar

	(source "(js/Cesium.Viewer. \n  \"cesiumContainer\" \n  #js{:imageryProvider (js/Cesium.createWorldImagery)\n        :terrainProvider (js/Cesium.createWorldTerrain)\n        :animation false})")
	(title "VIEWER"))

([FlightPro_Class40000] of  HTML

	(source "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Cockpit View</title>\n    <link rel=\"stylesheet\" href=\"css/cesium.css\" />\n    <script>window.CESIUM_BASE_URL = \"./Cesium/\";</script>\n    <script src=\"Cesium/Cesium.js\"></script>\n    <style>\n      @import url(Cesium/Widgets/widgets.css);\n      #cesiumContainer {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        margin: 0;\n        overflow: hidden;\n        padding: 0;\n        font-family: sans-serif;\n      }\n      html {\n        height: 100%;\n      }\n      body {\n        padding: 0;\n        margin: 0;\n        overflow: hidden;\n        height: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"cesiumContainer\"></div>\n    <div id=\"autopilot\"></div>\n    <div id=\"course\"></div><div id=\"course-fld\"></div><div id=\"accel\"></div>\n    <div id=\"speed\"></div><div id=\"speed-fld\"></div><div id=\"speed-acl\"></div>\n    <div id=\"altitude\"></div><div id=\"altitude-fld\"></div><div id=\"altitude-acl\"></div>\n    <div id=\"lat\"></div></div><div id=\"latitude-fld\"></div><div id=\"instant\"></div>\n    <div id=\"lon\"></div></div><div id=\"longitude-fld\"></div></div><div id=\"instant-rdo\"></div>\n    <div id=\"camera\"></div>\n    <div id=\"onboard\"></div><div id=\"onboard-fld\"></div>\n    <div id=\"view\"></div><div id=\"view-fld\"></div><div id=\"view-sld\"></div>\n    <div id=\"pitch\"></div><div id=\"pitch-fld\"></div><div id=\"pitch-sld\"></div>\n    <div id=\"roll\"></div><div id=\"roll-fld\"></div><div id=\"roll-sld\"></div>\n    <script>\n      // Grant your CesiumJS app access to your ion assets\n      // This is your actual default access token, you can copy/paste this directly into your app code\n      Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIwN2EzYzEyNS1mMmNlLTRlYjEtYjRiMS04OTliNjhkZjI4NzQiLCJpZCI6MzY0MCwic2NvcGVzIjpbImFzciIsImdjIl0sImlhdCI6MTUzODQxODg5OH0.E2p7oe8fLJOtyawv0uT9zBZw4oyKZ6Vt3CZsE0FKeJw';\n      function terraHeightRequest(terrProv, lat, lon, func){\n        var pos = [Cesium.Cartographic.fromDegrees(lon, lat)];\n        var pms = Cesium.sampleTerrain(terrProv, 11, pos);\n        Cesium.when(pms, func);\n      }\n    </script>\n    <script type=\"text/javascript\" src=\"js/main.js\"></script>\n  </body>\n</html>")
	(store-in "resources/public")
	(title "cezium"))

([FlightPro_Class400000] of  CloProgram

	(cloFunctions
		[FlightPro_Class20013]
		[FlightPro_Class320022]
		[FlightPro_Class190000]
		[FlightPro_Class210001]
		[FlightPro_Class310005]
		[FlightPro_Class220030]
		[FlightPro_Class380004]
		[FlightPro_Class230005]
		[FlightPro_Class350000]
		[FlightPro_Class370004]
		[FlightPro_Class310000]
		[FlightPro_Class270000]
		[FlightPro_Class340000]
		[FlightPro_Class290001]
		[FlightPro_Class380002]
		[FlightPro_Class390003]
		[FlightPro_Class610013]
		[FlightPro_Class610012]
		[FlightPro_Class500003]
		[FlightPro_Class500002]
		[FlightPro_Class460001]
		[FlightPro_Class420000]
		[FlightPro_Class640008]
		[FlightPro_Class830000]
		[FlightPro_Class420021]
		[FlightPro_Class460002]
		[FlightPro_Class510000]
		[FlightPro_Class590000]
		[FlightPro_Class660024]
		[FlightPro_Class640001]
		[FlightPro_Class1000017]
		[FlightPro_Class850000])
	(cloNamespace [FlightPro_Class400001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class20004]
		[FlightPro_Class310001]
		[FlightPro_Class510001]
		[FlightPro_Class610000])
	(title "Pro Commands"))

([FlightPro_Class400001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [compojure.core :refer [GET]]\n  [fr24.client :as fr24]\n  [async.proc :as asp]\n  [rete.core :as rete]\n  [cesium.core :as czs]\n              [cognitect.transit :as t]\n  [ext.data :as exd])\n(:import java.io.ByteArrayOutputStream)")
	(title "pro.commands"))

([FlightPro_Class400003] of  CloNamespace

	(title "calc.core"))

([FlightPro_Class410000] of  RuleSet

	(rules
		[FlightPro_Class340002]
		[FlightPro_Class330001]
		[FlightPro_Class520003]
		[FlightPro_Class330000]
		[FlightPro_Class270002]
		[FlightPro_Class270003]
		[FlightPro_Class500001]
		[FlightPro_Class540000]
		[FlightPro_Class550002]
		[FlightPro_Class540018]
		[FlightPro_Class540019]
		[FlightPro_Class540020]
		[FlightPro_Class560000]
		[FlightPro_Class570001])
	(templates
		[Flight]
		[FlightPlan]
		[Schedule])
	(title "My Flights"))

([FlightPro_Class410001] of  Rule

	(lhs "?nf1 (Flight id ?id age \"NEW\" time ?t1)\n?nf2 (Flight id ?id age \"NEW\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?nf1 age \"CURRENT\")")
	(salience 1)
	(title "af:FlightHistory1"))

([FlightPro_Class410002] of  Rule

	(lhs "?cf1 (Flight id ?id age \"CURRENT\" time ?t1)\n?cf2 (Flight id ?id age \"CURRENT\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?cf1 age \"OLD\")")
	(salience 1)
	(title "af:FlightHistory2"))

([FlightPro_Class410020] of  Rule

	(lhs "(Flight id ?id age \"OLD\" time ?t1)\n?f (Follow id ?id time 0)\n(not Follow)")
	(rhs "(modify ?f time ?t1)")
	(salience 0)
	(title "af:StartFollow"))

([FlightPro_Class420000] of  CloFunction

	(source ";;(println [:QUESTION pp])\n(write-transit \n  (condp = (:question pp)\n    \"es\"	(ask-es (:predicate pp) (:subject pp) (:object pp) (:adjunct pp))\n    \"countries\"	(->> (fr24/airports-by-country)\n	  keys\n	  sort)\n    \"airports\"	(->> (get (fr24/airports-by-country) (:country pp))\n	  keys\n	  sort)\n    \"predicates\" (predicates \n	  (fainst (cls-instances \"QuestionTree\") nil))\n    \"subjects\"	(subjects \n	  (:predicate pp) \n	  (fainst (cls-instances \"QuestionTree\") nil))\n    \"objects\"	(objects\n	  (:predicate pp)  \n	  (:subject pp) \n	  (fainst (cls-instances \"QuestionTree\") nil))\n    \"adjuncts\"	(adjuncts\n	  (:predicate pp)  \n	  (:subject pp) \n	  (:object pp)\n	  (fainst (cls-instances \"QuestionTree\") nil))\n    false))")
	(title "question [pp]"))

([FlightPro_Class420008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class420010]
		[FlightPro_Class440001]
		[FlightPro_Class420011]
		[FlightPro_Class600000]
		[FlightPro_Class420020]
		[FlightPro_Class450000])
	(cloNamespace [FlightPro_Class420009])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class80002])
	(title "Ask Master"))

([FlightPro_Class420009] of  CloNamespace

	(source "(:require \n  [ajax.core :refer [GET]]\n  [chart.controls :refer [show-chart-controls]])")
	(title "ask.master"))

([FlightPro_Class420010] of  CloFunction

	(source "(condp = typ\n    :itself (apply str (for [e lst]\n                         (str \"<option value='\" e \"'>\" e \"</option>\")))\n    :count  (apply str (for [i (range (count lst))]\n                            (str \"<option value='\" i \"'>\" (nth lst i) \"</option>\"))))")
	(title "options [lst typ]"))

([FlightPro_Class420011] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler\" k \"(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n  (set-html! (str element k) sel))")
	(title "selector [element k ns header lst typ wid]"))

([FlightPro_Class420020] of  CloFunction

	(source "(GET (:answer URL) \n  {:handler handler\n   :error-handler error-handler\n   :response-format :transit})")
	(title "get-answer [handler]"))

([FlightPro_Class420021] of  CloFunction

	(source "(println [:CMD-MOVE-TO params])\n(let [{:keys [country airport]} params]\n  (if-let [apt (get-in (fr24/airports-by-country) [country airport])]\n    (let [iata (apt \"iata\")\n           alt (apt \"alt\")\n           crd [(apt \"lat\") (apt \"lon\")]]\n      (foc-apt-ins apt)\n      (set-map-view crd)\n      (println :Airport country airport iata crd alt)\n      (new-czml-doc {}))))\n\"\"")
	(title "move-to [params]"))

([FlightPro_Class430000] of  CloFunction

	(source "([]\n  (am/ask-server {:question \"countries\"}\n	move-to))\n([cns]\n  (am/selector \"element\" 1 \"chart.client\" \"countries\" cns :itself 130)\n  (defn handler1 [sel]\n    (am/ask-server {:question \"airports\"\n	       :country sel}\n	#(move-to sel %))))\n([cnt aps]\n  (am/selector \"element\" 2 \"chart.client\" \"airports\" aps :itself 130)\n  (defn handler2 [sel]\n    (let [prm (str \"?country=\" cnt\n	\"&airport=\" sel)]\n      (GET (str (:command URL) \"move-to\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "move-to"))

([FlightPro_Class430010] of  Rule

	(lhs "?f1 (Flight id ?id time ?t1)\n(Flight age \"NEW\" time ?t2\n	(> (- ?t2 ?t1) 120))")
	(rhs "(es/put-off-map ?id)\n(retract ?f1)")
	(salience 0)
	(title "af:ForgetOldFlight"))

([FlightPro_Class440000] of  CloFunction

	(source "([]\n  (am/input \"element\" 1 \"chart.client\" \"new callsign\" 80)\n  (defn handler1 [call]\n    (am/input \"element\" 2 \"chart.client\" \"hh:mm\" 80)\n      (defn handler2 [tim]\n        (schedule call tim))))\n([call tim]\n  (am/ask-server {:question \"countries\"}\n	#(schedule call tim %)))\n([call tim cns1]\n  (am/selector \"element\" 3 \"chart.client\" \"from country\" cns1 :itself 130)\n  (defn handler3 [sel]\n    (am/ask-server {:question \"airports\"\n	       :country sel}\n	#(schedule call tim sel %))))\n([call tim cnt1 aps1]\n  (am/selector \"element\" 4 \"chart.client\" \"from airport\" aps1 :itself 130)\n  (defn handler4 [sel]\n    (am/ask-server {:question \"countries\"}\n	#(schedule call tim cnt1 sel %))))\n([call tim cnt1 apt1 cns2]\n  (am/selector \"element\" 5 \"chart.client\" \"to county\" cns2 :itself 130)\n  (defn handler5 [sel]\n    (am/ask-server {:question \"airports\"\n	       :country sel}\n	#(schedule call tim cnt1 apt1 sel %))))\n([call tim cnt1 apt1 cnt2 aps2]\n  (am/selector \"element\" 6 \"chart.client\" \"to airport\" aps2 :itself 130)\n  (defn handler6 [sel]\n    (let [prm (str \"?callsign=\" call\n	\"&time=\" tim\n	\"&country1=\" cnt1\n	\"&airport1=\" apt1\n	\"&country2=\" cnt2\n	\"&airport2=\" sel)]\n      (GET (str (:command URL) \"schedule\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "schedule"))

([FlightPro_Class440001] of  CloFunction

	(source "(let [inp (str \"<input type='text' onchange='javascript:\" ns \".handler\" k \"(this.value)'\n	style='width:\" wid \"px' \n	value='\" header \"'>\")]\n  (set-html! (str element k) inp))")
	(title "input [element k ns header wid]"))

([FlightPro_Class450000] of  CloFunction

	(source "(set-html! \"element1\" \"\")\n(set-html! \"element2\" \"\")\n(set-html! \"element3\" \"\")\n(set-html! \"element4\" \"\")\n(set-html! \"element5\" \"\")\n(set-html! \"element6\" \"\")\n(set-html! \"element20\" \"\")\n(set-html! \"element30\" \"\")\n(set-html! \"element40\" \"\")\n(show-chart-controls)")
	(title "clear-dialog []"))

([FlightPro_Class460000] of  Airport

	(altitude 280)
	(coord 62.06362 -7.27721)
	(country "Faroe Islands")
	(iata "FAE")
	(icao "EKVG")
	(runways 0)
	(title "Vagar Airport"))

([FlightPro_Class460001] of  CloFunction

	(source "(map #(sv % \"name\") (svs qt \"branches\"))")
	(title "predicates [qt]"))

([FlightPro_Class460002] of  CloFunction

	(source "(println [:CMD-SCHEDULE params])\n(let [{:keys [callsign time country1 airport1 country2 airport2]} params\n       abc (fr24/airports-by-country)\n       apf (get-in abc [country1 airport1])\n       apt (get-in abc [country2 airport2])\n       mes \"Airport not found: \"]\n  (if (and apf apt)\n    (do (foc-apt-ins apf)\n      (foc-apt-ins apt)\n      (rete/assert-frame ['Schedule \n	'callsign callsign\n	'time time\n	'from apf\n	'to apt]))\n    (do (if (nil? apf)\n            (println mes country1 airport1))\n          (if (nil? apt)\n            (println mes country2 airport2)))))\n\"\"")
	(title "schedule [params]"))

([FlightPro_Class470000] of  CloVar

	(source "(defonce CARRIERS (volatile! {}))")
	(title "defCARRIERS"))

([FlightPro_Class470001] of  CloFunction

	(source "(letfn [(move-all [carrs]\n	(doseq [carr (vals @carrs)]\n	  (move carr)))]\n  (asp/repeater move-all CARRIERS (:carrier TIO))\n  (println (str \"  My Flights Movement Interval: \" (:carrier TIO))))")
	(title "start-movement []"))

([FlightPro_Class470002] of  CloFunction

	(source "(let [carr (volatile! (assoc (merge {} @CARRIER)\n	:mode call\n   	:coord coord\n   	:course crs\n   	:speed spd\n   	:altitude alt))]\n  (set-turn-point carr)\n  (vswap! CARRIERS assoc id carr))")
	(title "add-my-flight [id call coord crs spd alt]"))

([FlightPro_Class470003] of  CloFunction

	(source "(vswap! CARRIERS dissoc id)")
	(title "rem-my-flight [id]"))

([FlightPro_Class470004] of  CloFunction

	(source "(if-let [carr (get @CARRIERS id)]\n  (if (vector? arg)\n    (func carr (first arg) (second arg))\n    (func carr arg)))")
	(title "control [id func arg]"))

([FlightPro_Class480000] of  CloProgram

	(cloFunctions
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class480002]
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class30027]
		[FlightPro_Class850004]
		[FlightPro_Class30026]
		[FlightPro_Class470002]
		[FlightPro_Class470003]
		[FlightPro_Class470004]
		[FlightPro_Class470001]
		[FlightPro_Class250000]
		[FlightPro_Class520000]
		[FlightPro_Class560001])
	(cloNamespace [FlightPro_Class480001])
	(cloVars
		[FlightPro_Class480003]
		[FlightPro_Class480004]
		[FlightPro_Class330004]
		[FlightPro_Class100025]
		[FlightPro_Class470000])
	(title "My Flights Movement"))

([FlightPro_Class480001] of  CloNamespace

	(source "(:require\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [async.proc :as asp])")
	(title "my.flights.move"))

([FlightPro_Class480002] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (geo/spherical-between (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class480003] of  CloVar

	(source "(/ Math/PI 180)")
	(title "PID180"))

([FlightPro_Class480004] of  CloVar

	(source "(/ Math/PI 10800)")
	(title "NMRAD"))

([FlightPro_Class480005] of  CloFunction

	(source "(loop [mff (seq mff) ff ff]\n  (if (seq mff)\n    (let [[id mf] (first mff)\n           mf @mf\n           [lat lon] (:coord mf)]\n      (recur (rest mff) \n        (assoc ff id \n	[0 lat lon (:course mf) (:altitude mf) (:speed mf) \n	 6 7 8 9 10 11 12 13 14 15\n	 (:mode mf)])))\n    ff))")
	(title "merge-my-flights [mff ff]"))

([FlightPro_Class490000] of  CloFunction

	(source ";;(println [:START-TIME tim])\n(let [[h m :as hm] (seq (.split tim \":\"))]\n  (if (and (seq hm) (= (count hm) 2))\n    (let [h (read-string (if (.startsWith h \"0\") (.substring h 1) h))\n           m (read-string (if (.startsWith m \"0\") (.substring m 1) m))]\n      (if (and (number? h) (number? m) (<= 0 h 23) (<= 0 m 59))\n        (let [cld (Calendar/getInstance)]\n          (.set cld Calendar/HOUR_OF_DAY h)\n          (.set cld Calendar/MINUTE m)\n          (.set cld Calendar/SECOND 0)\n          (int (/ (.getTimeInMillis cld) 1000)))))))")
	(title "start-time [tim]"))

([FlightPro_Class490002] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       [x crsa] (:initial-turn-course tof)]\n    (merge tof   {:from-crs 	[(:start-run spp) crsa]\n	:to-crs 	[(:general-crs spp) crsa]}))")
	(title "takeoff-plan [spp]"))

([FlightPro_Class5] of  CloVar

	(source "(js/Cesium.CzmlDataSource.)")
	(title "CZM-SRC"))

([FlightPro_Class50000] of  CloFunction

	(source "(vswap! CAMERA assoc key val)")
	(title "camera [key val]"))

([FlightPro_Class500000] of  CloFunction

	(source "(letfn [(corr1 [[x y]]\n	[x (+ y elv)])]\n  (vec (map corr1 atab)))")
	(title "corr-alt-tab [atab elv]"))

([FlightPro_Class500001] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(not= ?crs (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))))")
	(rhs "(let [newc (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))]\n  (println [:Cruise ?id newc])\n  (my.flights.move/control ?id my.flights.move/turn [newc 1]))")
	(salience 0)
	(title "mf:Cruise"))

([FlightPro_Class500002] of  CloFunction

	(source "(if-let [flt (seq (filter #(= (sv % \"name\") pred) (svs qt \"branches\")))]\n  (map #(sv % \"name\") (svs (first flt) \"branches\")))")
	(title "subjects [pred qt]"))

([FlightPro_Class500003] of  CloFunction

	(source "(if-let [flt (seq (filter #(= (sv % \"name\") pred) (svs qt \"branches\")))]\n  (if-let [flt (seq (filter #(= (sv % \"name\") subj) (svs (first flt) \"branches\")))]\n    (if-let [bb (seq (svs (first flt) \"branches\"))]\n      (map #(sv % \"name\") bb)\n      (ask-es pred subj nil nil))))")
	(title "objects [pred subj qt]"))

([FlightPro_Class500004] of  TypeName

	(name "seafood"))

([FlightPro_Class500007] of  TypeName

	(name "chemist"))

([FlightPro_Class50001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class10002]
		[FlightPro_Class8]
		[FlightPro_Class9]
		[FlightPro_Class680001]
		[FlightPro_Class890003]
		[FlightPro_Class10001]
		[FlightPro_Class680002]
		[FlightPro_Class50000]
		[FlightPro_Class10003])
	(cloNamespace [FlightPro_Class1])
	(cloVars
		[FlightPro_Class3]
		[FlightPro_Class4]
		[FlightPro_Class5]
		[FlightPro_Class0]
		[FlightPro_Class890001]
		[FlightPro_Class930000])
	(documentation [FlightPro_Class60000])
	(title "Cezium Client"))

([FlightPro_Class500011] of  TypeName

	(name "electronics"))

([FlightPro_Class500013] of  TypeName

	(name "outdoor"))

([FlightPro_Class500016] of  TypeName

	(name "doityourself"))

([FlightPro_Class500026] of  TypeName

	(name "butcher"))

([FlightPro_Class500028] of  TypeName

	(name "sauna"))

([FlightPro_Class500031] of  TypeName

	(name "grassland"))

([FlightPro_Class500042] of  TypeName

	(name "mast"))

([FlightPro_Class500045] of  TypeName

	(name "chimney"))

([FlightPro_Class500050] of  TypeName

	(name "car_repair"))

([FlightPro_Class510000] of  CloFunction

	(source "(vswap! MY-INFOS assoc csoid\n  {\"airport\" {\"origin\" {\"name\" (fapt \"name\") \"code\" {\"iata\" (fapt \"iata\")}}\n                  \"destination\" {\"name\" (tapt \"name\") \"code\" {\"iata\" (tapt \"iata\")}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" (str \"img/\" (int  (rand 7)) \".jpg\")}]}}\n\n   \"time\" {\"real\" {\"departure\" dept}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}})")
	(title "set-my-flight-info [csoid dept fapt tapt]"))

([FlightPro_Class510001] of  CloVar

	(source "(volatile! {\"MANUAL\"\n  {\"airport\" {\"origin\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}\n                  \"destination\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" \"img/5.jpg\"}]}}\n\n   \"time\" {\"real\" {\"departure\" \"unk\"}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}}})")
	(title "MY-INFOS"))

([FlightPro_Class510004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class510032])
	(%3ACREATION-TIMESTAMP "2017.03.20 22:47:13.432 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class510024] of  QuestionTree

	(branches [FlightPro_Class510026])
	(name "How many"))

([FlightPro_Class510026] of  QuestionTree

	(branches
		[FlightPro_Class510027]
		[FlightPro_Class510028]
		[FlightPro_Class570000])
	(name "airplanes"))

([FlightPro_Class510027] of  QuestionTree

	(branches
		[FlightPro_Class790000]
		[FlightPro_Class790001]
		[FlightPro_Class850020])
	(name "in the air"))

([FlightPro_Class510028] of  QuestionTree

	(name "on the ground"))

([FlightPro_Class510029] of  QuestionTree

	(branches
		[FlightPro_Class510030]
		[FlightPro_Class800000]
		[FlightPro_Class860002])
	(name "How far"))

([FlightPro_Class510030] of  QuestionTree

	(name "airport"))

([FlightPro_Class510032] of  QuestionTree

	(branches
		[FlightPro_Class510029]
		[FlightPro_Class510024]
		[FlightPro_Class510033]
		[FlightPro_Class510038])
	(name "QTree"))

([FlightPro_Class510033] of  QuestionTree

	(branches
		[FlightPro_Class510034]
		[FlightPro_Class510035])
	(name "What"))

([FlightPro_Class510034] of  QuestionTree

	(name "Intersections"))

([FlightPro_Class510035] of  QuestionTree

	(branches
		[FlightPro_Class510036]
		[FlightPro_Class510037])
	(name "weather"))

([FlightPro_Class510036] of  QuestionTree

	(name "by GeoNames"))

([FlightPro_Class510037] of  QuestionTree

	(name "by Weather2"))

([FlightPro_Class510038] of  QuestionTree

	(branches
		[FlightPro_Class510039]
		[FlightPro_Class510040])
	(name "Where"))

([FlightPro_Class510039] of  QuestionTree

	(name "we are"))

([FlightPro_Class510040] of  QuestionTree

	(branches
		[FlightPro_Class510041]
		[FlightPro_Class510042]
		[FlightPro_Class510044]
		[FlightPro_Class510045]
		[FlightPro_Class510046]
		[FlightPro_Class510047]
		[FlightPro_Class510048]
		[FlightPro_Class510049]
		[FlightPro_Class580132])
	(name "nearest"))

([FlightPro_Class510041] of  QuestionTree

	(name "airports"))

([FlightPro_Class510042] of  QuestionTree

	(name "island"))

([FlightPro_Class510044] of  QuestionTree

	(name "lake"))

([FlightPro_Class510045] of  QuestionTree

	(name "mountine"))

([FlightPro_Class510046] of  QuestionTree

	(name "road"))

([FlightPro_Class510047] of  QuestionTree

	(name "bank"))

([FlightPro_Class510048] of  QuestionTree

	(name "shoal"))

([FlightPro_Class510049] of  QuestionTree

	(name "coast"))

([FlightPro_Class510052] of  QTreeChart

	(chart
		[FlightPro_Class510026]
		[FlightPro_Class510030]
		[FlightPro_Class510041]
		[FlightPro_Class510047]
		[FlightPro_Class510036]
		[FlightPro_Class510037]
		[FlightPro_Class510049]
		[FlightPro_Class510029]
		[FlightPro_Class510024]
		[FlightPro_Class510027]
		[FlightPro_Class510034]
		[FlightPro_Class510042]
		[FlightPro_Class510044]
		[FlightPro_Class510045]
		[FlightPro_Class510040]
		[FlightPro_Class510028]
		[FlightPro_Class510032]
		[FlightPro_Class510046]
		[FlightPro_Class510048]
		[FlightPro_Class510039]
		[FlightPro_Class510035]
		[FlightPro_Class510033]
		[FlightPro_Class510038]
		[FlightPro_Class790000]
		[FlightPro_Class790001]
		[FlightPro_Class850020]
		[FlightPro_Class570000]
		[FlightPro_Class580132]
		[FlightPro_Class800000]
		[FlightPro_Class860002]))

([FlightPro_Class520000] of  CloFunction

	(source ";; Calculates time (hrs) and distance (nm)\n(if (= ini-spd fin-spd)\n  [0 0]\n  (let [step (* spd-stp spd-acl)\n         tioh (float (/ spd-tio 3600000))\n         [func pred] (if (> ini-spd fin-spd) [- <=] [+ >=])]\n    (loop [spd ini-spd tim 0 dist 0]\n      (if (pred spd fin-spd)\n        [tim dist]\n        (recur (func spd step) (+ tioh tim) (+ (* spd tioh) dist))))))")
	(title "speed-variation [[ini-spd x] [fin-spd spd-acl] spd-stp spd-tio]"))

([FlightPro_Class520001] of  CloFunction

	(source "(let [[a aa] alt]\n  [(+ a elv) aa])")
	(title "corr-alt [alt elv]"))

([FlightPro_Class520003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"TAKEOFF\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((>= ?alt (first (:altitude ?tof)))\n	 (>= ?spd (first (:speed ?tof)))))")
	(rhs "(println [:InitialTurnStart ?id (:to-crs ?tof) ?alt ?spd])\n(my.flights.move/control ?id my.flights.move/turn (:to-crs ?tof))\n(modify ?fp status \"INITIAL-TURN\")")
	(salience 0)
	(title "mf:InitialTurnStart"))

([FlightPro_Class530000] of  CloFunction

	(source "(let [rw (if-let [ins (fifos \"Airport\" \"iata\" iata)]\n              (let [rws (vec (svs ins \"runways\"))\n                     idx (int (rand (count rws)))]\n                (nth rws idx))\n              0)]\n  (geo/norm-crs rw))")
	(title "runway [iata]"))

([FlightPro_Class540000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	spec-plan ?spp\n	landing ?lnd\n	cruise ?cru\n	vertical-status  ?vst\n	[(= ?vst \"CLIMB\")\n	 (= ?vst \"LEVEL\")])\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:descend-dist ?cru)))")
	(rhs "(println [:DescendStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?lnd))\n(modify ?fp vertical-status \"DESCEND\")")
	(salience 0)
	(title "mf:DescendStart"))

([FlightPro_Class540017] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       cru (:cruise spp)\n       lnd (:landing spp)\n       car @mfs/CARRIER\n       [ddist bdist calt cspd] \n         (adjust-cruise\n	(calc.geo/distance-nm (:start-crd spp) (:finish-crd spp))\n	(:altitude cru)\n	(:speed cru)\n	(:altitude lnd)\n	(:speed lnd) \n	(:elevator car)\n	(:propeller car)\n	(:min-alt cru)\n	(:min-spd cru))]\n    (merge cru  {:altitude calt\n	:speed cspd\n	:descend-dist ddist\n	:brake-dist bdist}))")
	(title "cruise-plan [spp]"))

([FlightPro_Class540018] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(calc.geo/abaft ?crs ?crd (:final-turn-crd ?lnd)))")
	(rhs "(println [:CruiseDone ?id ?crd ?cru])\n(modify ?fp cruise \"DONE\"\n	status \"FINAL-TURN\")")
	(salience 0)
	(title "mf:CruiseDone"))

([FlightPro_Class540019] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)")
	(rhs "(println [:FinalTurnStart ?id ?lnd])\n(my.flights.move/control ?id my.flights.move/accel (:lannding-spd ?lnd))\n(my.flights.move/control ?id my.flights.move/turn (:landing-crs ?lnd))")
	(salience 0)
	(title "mf:FinalTurnStart"))

([FlightPro_Class540020] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	course ?crs\n	(= ?crs (first (:landing-crs ?lnd))))")
	(rhs "(println [:LandingStart ?id ?alt ?spd ?crs])\n(modify ?fp status \"LANDING\")")
	(salience 0)
	(title "mf:LandingStart"))

([FlightPro_Class550000] of  Airport

	(altitude 1729)
	(coord 12.66831 108.1202)
	(country "Vietnam")
	(iata "BMV")
	(icao "VVBM")
	(runways 0)
	(title "Buon Ma Thuot Airport"))

([FlightPro_Class550001] of  Airport

	(altitude 791)
	(coord 48.07361 37.73972)
	(country "Ukraine")
	(iata "DOK")
	(icao "UKCC")
	(runways 0)
	(title "Donetsk Sergey Prokofiev International Airport"))

([FlightPro_Class550002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	landing ?lnd\n	cruise ?cru\n	vertical-status \"DESCEND\")\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:brake-dist ?cru)))")
	(rhs "(println [:BrakeStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/accel (:speed ?lnd))\n(modify ?fp vertical-status \"DESCEND&BRAKE\")")
	(salience 0)
	(title "mf:BrakeStart"))

([FlightPro_Class560000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	landing ?lnd\n	spec-plan ?spp)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd)")
	(rhs "(let [fcrd (:finish-crd ?spp)\n       dist (calc.geo/distance-nm ?crd fcrd)\n       bear (int (calc.geo/bear-deg ?crd fcrd))\n       alt (int (calc.core/smooth-tabfun dist (:altitude-graph ?lnd)))\n       spd (int (calc.core/smooth-tabfun dist (:speed-graph ?lnd)))]\n   (my.flights.move/control ?id my.flights.move/turn [bear 2])\n   (my.flights.move/control ?id my.flights.move/elevate [alt 8])\n   (my.flights.move/control ?id my.flights.move/accel [spd 10]))")
	(salience 0)
	(title "mf:OnLandingCourse"))

([FlightPro_Class560001] of  CloFunction

	(source ";; Calculates time (hrs)\n(if (= ini-alt fin-alt)\n  0\n  (let [step (* alt-stp alt-acl)\n         tioh (float (/ alt-tio 3600000))\n         adif (if (> ini-alt fin-alt) (- ini-alt fin-alt) (- fin-alt ini-alt))]\n    (* (/ adif step) tioh)))")
	(title "altitude-variation [[ini-alt x] [fin-alt alt-acl] alt-stp alt-tio]"))

([FlightPro_Class560002] of  Airport

	(altitude 5871)
	(coord 34.56584 69.21241)
	(country "Afghanistan")
	(iata "KBL")
	(icao "OAKB")
	(runways 0)
	(title "Kabul International Airport"))

([FlightPro_Class570000] of  QuestionTree

	(name "all"))

([FlightPro_Class570001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	spec-plan ?spp\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	speed ?spd\n                        [(= ?spd 0)\n	 (calc.geo/abaft ?crs ?crd (:finish-crd ?spp))])")
	(rhs "(println [:LandingDone ?id ?crd])\n(es/put-off-map ?id)\n(my.flights.move/rem-my-flight ?id)\n(modify ?fp status \"GROUND\" \n	landing \"DONE\")")
	(salience 1)
	(title "mf:LandingDone"))

([FlightPro_Class580000] of  CloFunction

	(source "(when-let [mrk (@PLACEMARKS iname)]\n  (.removeLayer @CHART mrk)\n  (vswap! PLACEMARKS dissoc iname))")
	(title "delete-placemark [iname]"))

([FlightPro_Class580003] of  Airport

	(altitude 591)
	(coord 41.61 -87.41)
	(country "United States")
	(iata "GYY")
	(icao "KGYY")
	(runways 0)
	(title "Chicago Gary International"))

([FlightPro_Class580045] of  Rule

	(lhs "?q (Question predicate \"How far\"\n	subject \"airport\")\n(not Question predicate \"User Answer\")")
	(rhs "(async.proc/pump-in \n	(:instructions pro.commands/CHN)\n	{:instruct :ask-user :question \"airport\"})")
	(salience 0)
	(title "qq:HowFarAirport1"))

([FlightPro_Class580046] of  CloFunction

	(source "([]\n  (am/ask-server {:question \"countries\"}\n	select-airport))\n([cns]\n  (am/selector \"element\" 1 \"chart.client\" \"countries\" cns :itself 130)\n  (defn handler1 [sel]\n    (am/ask-server {:question \"airports\"\n	       :country sel}\n	#(select-airport sel %))))\n([cnt aps]\n  (am/selector \"element\" 20 \"chart.client\" \"airports\" aps :itself 130)\n  (defn handler20 [sel]\n    (am/ask-server {:question \"es\"\n	      :predicate \"User Answer\"\n	      :subject \"selected airport\"\n	      :object sel\n                              :adjunct cnt} \n	(fn [r]))\n    (am/clear-dialog)))")
	(title "select-airport"))

([FlightPro_Class580050] of  Rule

	(lhs "?q1 (Question predicate \"How far\"\n	subject \"airport\")\n?q2 (Question predicate \"User Answer\"\n	subject \"selected airport\"\n	object ?apt\n	adjunct ?cnt)")
	(rhs "(ext.data/pump-far-airport ?cnt ?apt)\n(retract ?q1 ?q2)")
	(salience 0)
	(title "qq:HowFarAirport2"))

([FlightPro_Class580051] of  CloFunction

	(source "(if-let [apt (get-in (fr24/airports-by-country) [cnt apt])]\n  (let [[lat1 lon1] (our-center)\n         lat2 (apt \"lat\") \n         lon2 (apt \"lon\")\n         dis (geo/distance-nm [lat1 lon1] [lat2 lon2])\n         bea (geo/bear-deg [lat1 lon1] [lat2 lon2])\n         html (str \"<h3>\" (apt \"name\") \"</h3>\"\n	\"country: \" cnt \"<br>\"\n	\"latitude: \" lat2 \"<br>\"\n	\"longitude: \" lon2 \"<br>\"\n	\"direction: \" (gn/direction bea)\n	\"<h4>\" (format \"distance: %.1f\" dis) \" NM</h4>\")]\n    (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat1\n	 :lon lon1\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)})))")
	(title "pump-far-airport [cnt apt]"))

([FlightPro_Class580132] of  QuestionTree

	(name "populated place"))

([FlightPro_Class590000] of  CloFunction

	(source "(vswap! fr24/MANUAL-DATA assoc \"MANUAL\"\n          (volatile! {:mode \"MANUAL\"\n	 :coord (read-string (:coord params))\n	 :course (read-string (:course params))\n	 :speed (read-string (:speed params))\n	 :altitude (read-string (:altitude params))}))")
	(title "get-manual-data [params]"))

([FlightPro_Class590001] of  CloVar

	(source "false")
	(title "ONB-PAUSE"))

([FlightPro_Class60000] of  CloDocumentation

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n    <b>Cesium Client<br></b><br>API<br><br>1. fly-to [lat lon alt crs per]<br>2. camera [key val], keys: :view, :altitude, :pitch, :roll<br><br>CZML rendering support<br><br>Initialization: (init-3D-view)</body>\n</html>"))

([FlightPro_Class600000] of  CloFunction

	(source "(GET (:question URL) \n    {:params params\n     :handler handler\n     :error-handler error-handler\n     :response-format :transit})")
	(title "ask-server [params handler]"))

([FlightPro_Class600001] of  Airport

	(altitude 29)
	(coord 12.18885 -68.9598)
	(country "Curacao")
	(iata "CUR")
	(icao "TNCC")
	(runways 0)
	(title "Willemstad Curacao Hato International Airport"))

([FlightPro_Class600002] of  Airport

	(altitude 126)
	(coord 41.41474 19.72056)
	(country "Albania")
	(iata "TIA")
	(icao "LATI")
	(runways 0)
	(title "Tirana International Airport"))

([FlightPro_Class600003] of  CloFunction

	(source "(let [car @CARRIER]\n  (if (= (:mode car) \"MANUAL\")\n    (GET (str (:manual-data URL) \n	\"?coord=\" (:coord car)\n	\"&course=\" (:course car)\n	\"&speed= \" (:speed car)\n	\"&altitude=\" (:altitude car))\n	{:handler (fn[response])\n	 :error-handler error-handler})))")
	(title "send-manual-data []"))

([FlightPro_Class60001] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [czm.core :as czm]\n  [view3d.controls :as ctl]\n  [carr.move :as mov]\n  [calc.core :as calc]\n  [calc.dynamic :as dyn]\n  [cognitect.transit :as t]\n  [ajax.core :refer (GET)]\n  [cljs.reader :as rdr])")
	(title "view3d.client"))

([FlightPro_Class610000] of  CloVar

	(source "{:terra \"yes\"\n :cockpit-height 24}")
	(title "TERRAIN"))

([FlightPro_Class610001] of  CloFunction

	(source "(condp = who\n  :server (vswap! COMM assoc :fr24-bbx-ctrl who)\n  :client (let [{:keys [n s w e z]} @fr24/BBX]\n               (asp/pump-in (:ins-chn @COMM)\n	{:instruct :map-center\n	 :coord [(/ (+ n s) 2) (/ (+ e w) 2)]\n	 :zoom z})\n               (vswap! COMM assoc :fr24-bbx-ctrl who)))")
	(title "map-view-ctrl [who]"))

([FlightPro_Class610003] of  Airport

	(altitude 2697)
	(coord 35.759167 6.3225)
	(country "Algeria")
	(iata "BLJ")
	(icao "DABT")
	(runways 0)
	(title "Batna International Airport"))

([FlightPro_Class610004] of  Airport

	(altitude 169)
	(coord 13.0746 -59.4924)
	(country "Barbados")
	(iata "BGI")
	(icao "TBPB")
	(runways 0)
	(title "Bridgetown Grantley Adams International Airport"))

([FlightPro_Class610005] of  Airport

	(altitude 16)
	(coord 25.03895 -77.4662)
	(country "Bahamas")
	(iata "NAS")
	(icao "MYNN")
	(runways 0)
	(title "Nassau Lynden Pindling International Airport"))

([FlightPro_Class610006] of  Airport

	(altitude 3338)
	(coord 31.51363 65.86105)
	(country "Afghanistan")
	(iata "KDH")
	(icao "OAKN")
	(runways 0)
	(title "Kandahar Airport"))

([FlightPro_Class610012] of  CloFunction

	(source "(if-let [flt (seq (filter #(= (sv % \"name\") pred) (svs qt \"branches\")))]\n  (if-let [flt (seq (filter #(= (sv % \"name\") subj) (svs (first flt) \"branches\")))]\n    (if-let [flt (seq (filter #(= (sv % \"name\") obj) (svs (first flt) \"branches\")))]\n      (if-let [bb (seq (svs (first flt) \"branches\"))]\n        (map #(sv % \"name\") bb)\n        (ask-es pred subj obj nil)))))")
	(title "adjuncts [pred subj obj qt]"))

([FlightPro_Class610013] of  CloFunction

	(source "(println [:ASK-ES pred subj obj adj])\n(rete/assert-frame \n	['Question\n	 'predicate pred\n	 'subject subj\n	 'object obj\n	 'adjunct adj])\n(rete/fire)")
	(title "ask-es [pred subj obj adj]"))

([FlightPro_Class610041] of  TypeName

	(name "hamlet"))

([FlightPro_Class610042] of  TypeName

	(name "place_of_worship"))

([FlightPro_Class610061] of  TypeName

	(name "post_office"))

([FlightPro_Class610065] of  TypeName

	(name "fuel"))

([FlightPro_Class610090] of  TypeName

	(name "yes"))

([FlightPro_Class610098] of  TypeName

	(name "parking"))

([FlightPro_Class610142] of  TypeName

	(name "florist"))

([FlightPro_Class610148] of  TypeName

	(name "confectionery"))

([FlightPro_Class610153] of  TypeName

	(name "ticket"))

([FlightPro_Class610156] of  TypeName

	(name "bus_station"))

([FlightPro_Class610158] of  TypeName

	(name "bicycle_parking"))

([FlightPro_Class610171] of  TypeName

	(name "crossing"))

([FlightPro_Class610174] of  TypeName

	(name "car_wash"))

([FlightPro_Class610178] of  TypeName

	(name "parking_entrance"))

([FlightPro_Class610181] of  TypeName

	(name "townhall"))

([FlightPro_Class610192] of  TypeName

	(name "waste_basket"))

([FlightPro_Class610195] of  TypeName

	(name "theatre"))

([FlightPro_Class610198] of  TypeName

	(name "viewpoint"))

([FlightPro_Class610200] of  TypeName

	(name "bench"))

([FlightPro_Class610203] of  TypeName

	(name "fountain"))

([FlightPro_Class610205] of  Airport

	(altitude 430)
	(coord 60.6544 24.8811)
	(country "Finland")
	(iata "HYV")
	(icao "EFHV")
	(runways 0)
	(title "Hyvinkaa Airport"))

([FlightPro_Class610222] of  TypeName

	(name "grit_bin"))

([FlightPro_Class610249] of  TypeName

	(name "college"))

([FlightPro_Class610288] of  TypeName

	(name "public_building"))

([FlightPro_Class610307] of  TypeName

	(name "utlity_pole"))

([FlightPro_Class610313] of  CloFunction

	(source "(let [mp (into {} hm)\n       rss (mp \"osm-responses\")]\n  (invoke-later\n    (doseq [rs rss]\n      (asp/pump-in (:ins-chn @COMM)\n	{:instruct :delete-placemark\n	 :iname (.getName rs)})\n      (delin rs))))")
	(title "delete-pois [hm inst]"))

([FlightPro_Class610337] of  TypeName

	(name "information"))

([FlightPro_Class610341] of  TypeName

	(name "tickets"))

([FlightPro_Class610347] of  TypeName

	(name "car_rental"))

([FlightPro_Class610354] of  TypeName

	(name "bureau_de_change"))

([FlightPro_Class610360] of  TypeName

	(name "artwork"))

([FlightPro_Class610371] of  TypeName

	(name "music"))

([FlightPro_Class620000] of  CloFunction

	(source "(let [{:keys [n s w e z]} @fr24/BBX]\n  (map-view-ctrl :client)\n  (asp/pump-in (:ins-chn @COMM)\n	{:instruct :map-center\n	 :coord [(/ (+ n s) 2) (/ (+ w e) 2)]\n	 :zoom z}))")
	(title "ret-to-flight [hm inst]"))

([FlightPro_Class620001] of  CloVar

	(source "(volatile! {})")
	(title "MANUAL-DATA"))

([FlightPro_Class620003] of  CloFunction

	(source "(if-let [gpi (fainst (cls-instances \"GeneralPlan\") nil)]\n  (let [tpi (sv gpi \"takeoff-plan\")\n         cpi (sv gpi \"cruise-plan\")\n         lpi (sv gpi \"landing-plan\")\n         fcrd [(fapt \"lat\") (fapt \"lon\")]\n         tcrd [(tapt \"lat\") (tapt \"lon\")]\n         falt (if (= cmd/TERRAIN \"yes\") (fapt \"alt\") 0)\n         talt (if (= cmd/TERRAIN \"yes\") (tapt \"alt\") 0)]\n        {:takeoff  {:speed (as-vec (sv tpi \"speed\"))\n	:altitude (corr-alt (as-vec (sv tpi \"altitude-vector\")) falt)\n	:initial-turn-course (as-vec (sv tpi \"initial-turn-course\"))}\n         :cruise   {:speed (as-vec (sv cpi \"speed\"))\n	:altitude (as-vec (sv cpi \"altitude-vector\"))\n	:min-spd (read-string (sv cpi \"min-speed\"))\n	:min-alt (read-string (sv cpi \"min-altitude\"))}\n         :landing {:speed (as-vec (sv lpi \"speed\"))\n	:altitude (corr-alt (as-vec (sv lpi \"altitude-vector\")) talt)\n	:outer-marker-distance (read-string (sv lpi \"outer-marker-distance\"))\n	:final-turn-course (as-vec (sv lpi \"final-turn-course\"))\n	:altitude-graph (corr-alt-tab (as-vec (svs lpi \"altitude-graph\")) talt)\n	:speed-graph (as-vec (svs lpi \"speed-graph\"))}\n         :general-crs (int (geo/bear-deg fcrd tcrd))\n         :general-dist (int (geo/distance-nm fcrd tcrd))\n         :start-crd  fcrd\n         :finish-crd tcrd\n         :start-alt falt\n         :finish-alt talt\n         :start-run (runway (fapt \"iata\"))\n         :finish-run (runway (tapt \"iata\"))}))")
	(title "specific-plan [fapt tapt]"))

([FlightPro_Class620004] of  CloFunction

	(source ";; return [cruise-altitude cruise-speed altitude-distance altitude-speed]\n(loop [alt cru-alt spd cru-spd ad 0 sd 0]\n  (if (and (> (first alt) min-alt) (> (first spd) min-spd))\n    (let [[stim sdis] (mfs/speed-variation spd spd-lnd (:step prop) (:time-out prop))\n           atim (mfs/altitude-variation alt alt-lnd (:step elev) (:time-out elev))\n           adis (if (<= atim stim)\n                    sdis\n                    (+ sdis (* (- atim stim) (first spd))))]\n      (if (< (* 2 adis) gen-dist)\n        [adis sdis alt spd]\n        (let [[a aa] alt\n               [s sa] spd]\n          (recur [(round (int (* 0.8 a)) 1000) aa] [(round (int (* 0.8 s)) 10) sa] adis sdis))))\n    [ad sd alt spd]))")
	(title "adjust-cruise [gen-dist cru-alt cru-spd alt-lnd spd-lnd elev prop min-alt min-spd]"))

([FlightPro_Class620010] of  CloFunction

	(source "(let [md (mod x p)\n       r (- x md)]\n  (if (< md (/ p 2))\n    r\n    (+ r p)))")
	(title "round [x p]"))

([FlightPro_Class620043] of  TypeName

	(name "veterinary"))

([FlightPro_Class620049] of  TypeName

	(name "sports"))

([FlightPro_Class620062] of  TypeName

	(name "museum"))

([FlightPro_Class620067] of  TypeName

	(name "fire_station"))

([FlightPro_Class620069] of  TypeName

	(name "optician"))

([FlightPro_Class620071] of  TypeName

	(name "clock"))

([FlightPro_Class620075] of  TypeName

	(name "driving_school"))

([FlightPro_Class620078] of  TypeName

	(name "doctors"))

([FlightPro_Class620081] of  TypeName

	(name "other"))

([FlightPro_Class620085] of  TypeName

	(name "clothes"))

([FlightPro_Class620088] of  TypeName

	(name "furniture"))

([FlightPro_Class620092] of  TypeName

	(name "swimming_pool"))

([FlightPro_Class620094] of  TypeName

	(name "suburb"))

([FlightPro_Class620096] of  TypeName

	(name "funeral_directors"))

([FlightPro_Class630000] of  CloFuncall

	(source "(ru.rules/dr)"))

([FlightPro_Class630044] of  TypeName

	(name "shelter"))

([FlightPro_Class630092] of  TypeName

	(name "tap"))

([FlightPro_Class630094] of  TypeName

	(name "transformer"))

([FlightPro_Class630108] of  TypeName

	(name "abandoned_station"))

([FlightPro_Class630231] of  TypeName

	(name "generator"))

([FlightPro_Class630421] of  TypeName

	(name "level_crossing"))

([FlightPro_Class630429] of  TypeName

	(name "car"))

([FlightPro_Class630456] of  TypeName

	(name "shoes"))

([FlightPro_Class630460] of  TypeName

	(name "bird_hide"))

([FlightPro_Class630471] of  TypeName

	(name "books"))

([FlightPro_Class630477] of  TypeName

	(name "toys"))

([FlightPro_Class630479] of  TypeName

	(name "telephone"))

([FlightPro_Class630481] of  TypeName

	(name "clinic"))

([FlightPro_Class630494] of  TypeName

	(name "maypole"))

([FlightPro_Class640000] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class650002])
	(%3ACREATION-TIMESTAMP "2017.04.24 21:11:55.888 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class640001] of  CloFunction

	(source "(if-let [api (fainst (cls-instances \"Airport\") nil)]\n  (move-to {:country (sv api \"country\")\n                   :airport (sv api \"title\")})\n  (println \"Annotated Initial Airport not found!\"))")
	(title "go-initial-airport []"))

([FlightPro_Class640008] of  CloFunction

	(source ";; find or create airport instance\n(invoke-later\n(let [iata (apt \"iata\")]\n  (if (not (fifos \"Airport\" \"iata\" iata))\n    (let [ins (crin \"Airport\")]\n      (ssv ins \"title\" (apt \"name\"))\n      (ssv ins \"iata\" iata)\n      (ssv ins \"icao\" (apt \"icao\"))\n      (ssv ins \"country\" (apt \"country\"))\n      (ssv ins \"altitude\" (apt \"alt\"))\n      (ssvs ins \"coord\" [(float (apt \"lat\"))\n	          (float (apt \"lon\"))]))))\n)")
	(title "foc-apt-ins [apt]"))

([FlightPro_Class640195] of  TypeName

	(name "village"))

([FlightPro_Class640198] of  TypeName

	(name "park"))

([FlightPro_Class640323] of  TypeName

	(name "police"))

([FlightPro_Class640329] of  TypeName

	(name "courthouse"))

([FlightPro_Class640587] of  TypeClass

	(name "natural"))

([FlightPro_Class640588] of  TypeName

	(name "peak"))

([FlightPro_Class640590] of  TypeName

	(name "land"))

([FlightPro_Class640719] of  TypeName

	(name "grave_yard"))

([FlightPro_Class650000] of  NearbySearch

	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(button-nearby "submit/wiki.gis/submit-nearby")
	(language English-en)
	(lat 60.3)
	(lng 25.0)
	(max-responses 5)
	(radius-km 10))

([FlightPro_Class650001] of  Airport

	(altitude 179)
	(coord 60.31722 24.96333)
	(country "Finland")
	(iata "HEL")
	(icao "EFHK")
	(runways 47 153)
	(title "Helsinki Vantaa Airport"))

([FlightPro_Class650002] of  Airport

	(altitude 14)
	(coord 40.63975 -73.7789)
	(country "United States")
	(iata "JFK")
	(icao "KJFK")
	(runways 121 31)
	(title "New York John F. Kennedy International Airport"))

([FlightPro_Class650003] of  Airport

	(altitude 21)
	(coord 40.77725 -73.8726)
	(country "United States")
	(iata "LGA")
	(icao "KLGA")
	(runways 32 122)
	(title "New York LaGuardia Airport"))

([FlightPro_Class650004] of  Airport

	(altitude 18)
	(coord 40.6925 -74.1686)
	(country "United States")
	(iata "EWR")
	(icao "KEWR")
	(runways 26 95)
	(title "New York Newark Liberty International Airport"))

([FlightPro_Class650005] of  Airport

	(altitude 36)
	(coord 39.87194 -75.2411)
	(country "United States")
	(iata "PHL")
	(icao "KPHL")
	(runways 75 159)
	(title "Philadelphia International Airport"))

([FlightPro_Class650006] of  Airport

	(altitude 8)
	(coord 25.79325 -80.2905)
	(country "United States")
	(iata "MIA")
	(icao "KMIA")
	(runways 87 119)
	(title "Miami International Airport"))

([FlightPro_Class650007] of  Airport

	(altitude 83)
	(coord 51.4775 -0.46138)
	(country "United Kingdom")
	(iata "LHR")
	(icao "EGLL")
	(runways 90)
	(title "London Heathrow Airport"))

([FlightPro_Class650008] of  Airport

	(altitude 364)
	(coord 50.02642 8.543125)
	(country "Germany")
	(iata "FRA")
	(icao "EDDF")
	(runways 70 179)
	(title "Frankfurt Airport"))

([FlightPro_Class650009] of  Airport

	(altitude 78)
	(coord 59.80029 30.2625)
	(country "Russia")
	(iata "LED")
	(icao "ULLI")
	(runways 106)
	(title "St. Petersburg Pulkovo Airport"))

([FlightPro_Class650010] of  Airport

	(altitude 622)
	(coord 55.97264 37.41458)
	(country "Russia")
	(iata "SVO")
	(icao "UUEE")
	(runways 75)
	(title "Moscow Sheremetyevo International Airport"))

([FlightPro_Class650011] of  Airport

	(altitude 118)
	(coord 45.03468 39.17053)
	(country "Russia")
	(iata "KRR")
	(icao "URKK")
	(runways 52)
	(title "Krasnodar International Airport"))

([FlightPro_Class650012] of  Airport

	(altitude 89)
	(coord 43.44992 39.95658)
	(country "Russia")
	(iata "AER")
	(icao "URSS")
	(runways 64)
	(title "Sochi International Airport"))

([FlightPro_Class650013] of  Airport

	(altitude 1225)
	(coord -17.6447 -63.1353)
	(country "Bolivia")
	(iata "VVI")
	(icao "SLVR")
	(runways 327)
	(title "Santa Cruz Viru Viru International Airport"))

([FlightPro_Class650014] of  Airport

	(altitude 1371)
	(coord -17.8115 -63.1714)
	(country "Bolivia")
	(iata "SRZ")
	(icao "SLET")
	(runways 144)
	(title "Santa Cruz El Trompillo Airport"))

([FlightPro_Class650015] of  Airport

	(altitude 8360)
	(coord -17.421 -66.1771)
	(country "Bolivia")
	(iata "CBB")
	(icao "SLCB")
	(runways 38 132)
	(title "Cochabamba Jorge Wilstermann International Airport"))

([FlightPro_Class650016] of  Airport

	(altitude 13325)
	(coord -16.5133 -68.1922)
	(country "Bolivia")
	(iata "LPB")
	(icao "SLLP")
	(runways 92)
	(title "La Paz El Alto International Airport"))

([FlightPro_Class650017] of  Airport

	(altitude 151)
	(coord 61.88516 34.15474)
	(country "Russia")
	(iata "PES")
	(icao "ULPB")
	(runways 23 51)
	(title "Petrozavodsk Airport"))

([FlightPro_Class660000] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n       [lat lon] (our-center n s w e)\n       [n0 s0 w0 e0] (:wiki-bbx @COMM)]\n  (if (or (> s0 lat)\n           (< n0 lat)\n           (< e0 lon)\n           (> w0 lon))\n     (invoke-later\n       (let [bbi (foc \"BBX\" \"title\" \"Current\")\n              rqi (fainst (cls-instances \"BBXWiki\") \"Current BBXWiki Request\")]\n         (if (and bbi rqi)\n           (do\n             (ssvs bbi \"wsen\" (vec (map float [w s e n])))\n             (ssv rqi \"bbx\" bbi)\n             (ssvs rqi \"responses\" [])\n             (wig/submit-bbx (itm rqi 0) rqi)\n             (let [rr (svs rqi \"responses\")\n                    chn (:ins-chn @COMM)]\n               (when (seq rr)\n	(asp/pump-in chn {:instruct :clear-placemarks})\n	(doseq [r rr]\n	  (point-out-place {:instance r})\n	  (asp/pump-in chn (placemark-instruct {:instance r})))\n	(vswap! COMM assoc :wiki-bbx [n s w e]))))\n           (println \"Instance of \\\"Current BBXWiki Request\\\" not found!\"))))))")
	(title "pump-wiki []"))

([FlightPro_Class660006] of  BBXWiki

	(bbx [FlightPro_Class670008])
	(button-bbx "submit/wiki.gis/submit-bbx")
	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(language English-en)
	(max-responses 40)
	(responses
		[FlightPro_Class1050040]
		[FlightPro_Class1050041]
		[FlightPro_Class1050042]
		[FlightPro_Class1050043]
		[FlightPro_Class1050044]
		[FlightPro_Class1050045]
		[FlightPro_Class1050046]
		[FlightPro_Class1050047]
		[FlightPro_Class1050048]
		[FlightPro_Class1050049]
		[FlightPro_Class1050050]
		[FlightPro_Class1050051]
		[FlightPro_Class1050052]
		[FlightPro_Class1050053]
		[FlightPro_Class1050054]
		[FlightPro_Class1050055]
		[FlightPro_Class1050056]
		[FlightPro_Class1050057]
		[FlightPro_Class1050058]
		[FlightPro_Class1050059]
		[FlightPro_Class1050060]
		[FlightPro_Class1050061]
		[FlightPro_Class1050062]
		[FlightPro_Class1050063]
		[FlightPro_Class1050064]
		[FlightPro_Class1050065]
		[FlightPro_Class1050066]
		[FlightPro_Class1050067]
		[FlightPro_Class1050068]
		[FlightPro_Class1050069]
		[FlightPro_Class1050070]
		[FlightPro_Class1050071]
		[FlightPro_Class1050072]
		[FlightPro_Class1050073]
		[FlightPro_Class1050074]
		[FlightPro_Class1050075]
		[FlightPro_Class1050076]
		[FlightPro_Class1050077]
		[FlightPro_Class1050078]
		[FlightPro_Class1050079]))

([FlightPro_Class660024] of  CloFunction

	(source "(println [:CMD-WIKIPEDIA params])\n(if (:wiki @exd/COMM)\n  (do (vswap! exd/COMM assoc :wiki false)\n    (asp/pump-in (:instructions CHN)\n	 {:instruct :clear-placemarks}))\n  (let [[n s w e] (map str (:visible @exd/COMM))]\n    (vswap! exd/COMM assoc :wiki-bbx [0 0 0 0]) \n    (vswap! exd/COMM assoc :wiki true)\n    (visible {:n n :s s :w w :e e})))\n(println \"Wikipedia: \" (:wiki @exd/COMM)) \n\"\"")
	(title "wikipedia [params]"))

([FlightPro_Class660025] of  CloVar

	(source "(defonce COMM\n  (volatile! \n    {:visible [0 0 0 0]\n     :wiki-bbx [0 0 0 0]\n     :wiki false\n     :ins-chn nil\n     :fr24-bbx-ctrl :client}))")
	(title "defCOMM"))

([FlightPro_Class670000] of  CloProgram

	(cloFunctions
		[FlightPro_Class670006]
		[FlightPro_Class670265]
		[FlightPro_Class670266]
		[FlightPro_Class740002]
		[FlightPro_Class740003]
		[FlightPro_Class700000]
		[FlightPro_Class280198]
		[FlightPro_Class280040]
		[FlightPro_Class750004]
		[FlightPro_Class750005]
		[FlightPro_Class660000]
		[FlightPro_Class730003]
		[FlightPro_Class780021]
		[FlightPro_Class810000]
		[FlightPro_Class280164]
		[FlightPro_Class610001]
		[FlightPro_Class280182]
		[FlightPro_Class610313]
		[FlightPro_Class620000]
		[FlightPro_Class840001]
		[FlightPro_Class850012]
		[FlightPro_Class580051]
		[FlightPro_Class820010]
		[FlightPro_Class870009]
		[FlightPro_Class820021])
	(cloNamespace [FlightPro_Class670001])
	(cloVars
		[FlightPro_Class330004]
		[FlightPro_Class750000]
		[FlightPro_Class810006]
		[FlightPro_Class660025]
		[FlightPro_Class820018])
	(title "External Data"))

([FlightPro_Class670001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [wiki.gis :as wig]\n  [cesium.core :as cz]\n  [calc.geo :as geo]\n  [async.proc :as asp]\n  [geo.names :as gn]\n  [fr24.client :as fr24]\n  [osm.data :as osm])\n(:import\n  edu.stanford.smi.protege.model.Instance)")
	(title "ext.data"))

([FlightPro_Class670004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class660006])
	(%3AANNOTATION-TEXT "Current BBXWiki Request")
	(%3ACREATION-TIMESTAMP "2017.02.17 14:12:37.199 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class670006] of  CloMacro

	(source "`(let [f# (future (do ~@body))\n         v# (gensym)\n         result# (deref f# ~msec v#)]\n    (if (= v# result#)\n      (do\n        (println :FUTURE-CANCELLING)\n        (future-cancel f#)\n        (println :FUTURE-CANCELLED)\n        nil)\n      result#))")
	(title "with-timeout [msec & body]"))

([FlightPro_Class670008] of  BBX

	(title "Current")
	(wsen -17.891235 28.806173 -12.804565 33.591743))

([FlightPro_Class670041] of  TypeName

	(name "manhole"))

([FlightPro_Class670053] of  TypeName

	(name "box"))

([FlightPro_Class670068] of  TypeName

	(name "pipeline_marker"))

([FlightPro_Class670077] of  TypeName

	(name "kauneushoitola"))

([FlightPro_Class670265] of  CloFunction

	(source "(let [{:keys [instance airport feature]} parmap]\n  {:instruct :create-placemark\n    :iname (or (some-> instance .getName) (some-> airport (get \"iata\")))\n    :tip (or (some-> instance (sv \"title\")) (some-> airport (get \"name\")))\n    :lat (or (some-> instance (sv \"lat\")) (some-> airport (get \"lat\")))\n    :lon (or (some-> instance (sv \"lng\")) (some-> airport (get \"lon\")))\n    :feature (or (some-> instance (sv \"feature\")) (some-> feature))})")
	(title "placemark-instruct [parmap]"))

([FlightPro_Class670266] of  CloFunction

	(source "(let [head (str \"<h3>\" (sv dati \"title\") \"</h3>\")\n       itag (str \"<img src=\\\"\" (sv dati \"thumbnailImg\") \"\\\">\")\n       summ (sv dati \"summary\")\n       addr (sv dati \"wikipediaUrl\")\n       wiki (str \"<a href=\\\"\" addr \"\\\">\" addr \"</a>\")\n       html (str head itag \"<br>\" summ \"<br>\" wiki)]\n  {:instruct :popup\n    :lat (sv dati \"lat\")\n    :lon (sv dati \"lng\")\n    :html html\n    :time (:ext-data-popup TIO)})")
	(title "placemark-popup-instruct [dati]"))

([FlightPro_Class670311] of  CloFunction

	(source "(let [pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (or url-ico\n		     (URL-ICO feature) \n		     (URL-ICO \"default\"))\n	           :iconSize #js[24, 24]})\n       opt #js{:icon ico\n                    :draggable false\n                    :title tip}\n       mrk (-> js/L (.marker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (str \"pm\" iname))))\n    (.addTo mrk @CHART)\n    (vswap! PLACEMARKS assoc iname mrk))")
	(title "create-placemark [iname tip lat lon feature url-ico]"))

([FlightPro_Class670312] of  CloVar

	(source "(volatile! {})")
	(title "PLACEMARKS"))

([FlightPro_Class670313] of  CloFunction

	(source "(doseq [mrk (vals @PLACEMARKS)]\n  (.removeLayer @CHART mrk))\n(vreset! PLACEMARKS {})")
	(title "clear-placemarks []"))

([FlightPro_Class680000] of  Airport

	(altitude 52)
	(coord 27.17831 33.79943)
	(country "Egypt")
	(iata "HRG")
	(icao "HEGN")
	(runways 0)
	(title "Hurghada International Airport"))

([FlightPro_Class680001] of  CloFunction

	(source ";;(println :MC lat lon alt hea pit rol)\n(let [dest (js/Cesium.Cartesian3.fromDegrees lon lat alt)]\n  (.setView (.-camera VIEWER)\n            #js{:destination dest\n                  :orientation #js{:heading (js/Cesium.Math.toRadians hea)\n                                           :pitch   (js/Cesium.Math.toRadians pit)\n                                           :roll    (js/Cesium.Math.toRadians rol)}}))")
	(title "move-control [lat lon alt hea pit rol]"))

([FlightPro_Class680002] of  CloFunction

	(source "(let [pitch (condp = (:view @CAMERA)\n                \"UP\" 90\n                \"DOWN\" -90\n                (:pitch @CAMERA))\n        roll (:roll @CAMERA)\n        head (geo/norm-crs (condp = (:view @CAMERA)\n                         \"BACKWARD\" (+ crs 180)\n                         \"RIGHT\" (+ crs 90)\n                         \"LEFT\" (- crs 90)\n                         \"FORWARD-RIGHT\" (+ crs 45)\n                         \"FORWARD-LEFT\" (- crs 45)\n                         \"BACKWARD-RIGHT\" (+ crs 135)\n                         \"BACKWARD-LEFT\" (- crs 135)\n                         crs))]\n    (move-control lat lon alt head pitch roll))")
	(title "move-to [lat lon alt crs]"))

([FlightPro_Class690000] of  Rule

	(lhs "?q (Question predicate \"What\"\n	subject \"Intersections\")\n(Flight id ?id1\n           callsign ?cs1\n           coord ?crd1\n           course ?crs1\n           speed ?spd1\n           altitude ?a1\n           age \"CURRENT\")\n(Flight id ?id2\n           callsign ?cs2\n           coord ?crd2\n           course ?crs2\n           speed ?spd2\n           altitude ?a2\n           age \"CURRENT\"\n           ((<= (.compareTo ?id1 ?id2) 0)\n            (and (> ?spd1 0) (> ?spd2 0))\n            [(and (> ?a1 0) (> ?a2 0) (< (Math/abs (- ?a1 ?a2)) 10000))\n             (and (== ?a1 0) (== ?a2 0))]\n            (< (calc.geo/distance-nm ?crd1 ?crd2)\n               (es/max-distance ?spd1 ?spd2))))")
	(rhs "(when-let [[dmin tmin] (es/intersect? ?crd1 ?crs1 ?spd1 ?crd2 ?crs2 ?spd2 ?id1 ?id2)]\n  (println [:Dmin dmin :Tmin tmin :Who ?cs1 ?cs2])\n  (es/pom-and-link ?id1 ?crd1 ?crs1 ?spd1 ?cs1 ?id2 ?crd2 ?crs2 ?spd2 ?cs2 dmin tmin))\n(retract ?q)")
	(salience 0)
	(title "qq:Check2FlightsIntersection"))

([FlightPro_Class690004] of  CloFunction

	(source "(when-let [crd3 (geo/future-intersect crd1 crs1 spd1 crd2 crs2 spd2 INTS-TIME)]\n  (let [d1 (geo/distance-nm crd1 crd3)\n         tmin (/ d1 spd1)\n         crd4 (geo/future-pos crd2 crs2 spd2 tmin)\n         dmin (geo/distance-nm crd3 crd4)]\n     (if (< dmin INTS-DMIN)\n       [dmin tmin])))")
	(title "intersect? [crd1 crs1 spd1 crd2 crs2 spd2 id1 id2]"))

([FlightPro_Class690005] of  CloVar

	(source ";; forcast time for intersection in hours (6 min)\n0.1")
	(title "INTS-TIME"))

([FlightPro_Class690006] of  CloVar

	(source ";; distance of intersection in nautical miles (~400 m)\n0.215")
	(title "INTS-DMIN"))

([FlightPro_Class690007] of  Rule

	(lhs "?q (Question predicate \"How many\"\n	subject \"airplanes\"\n	object \"in the air\"\n	adjunct ?ad)")
	(rhs "(ext.data/pump-airplanes \n	(str \"Airplanes \" ?ad)\n	(es/flights-of-status \n	  (condp = ?ad\n	    \"on level\" \"LEVEL\"\n	    \"climb\" \"CLIMB\"\n	    \"descend\" \"DESCEND\")))\n(retract ?q)")
	(salience 0)
	(title "qq:AirplanesInAir"))

([FlightPro_Class690008] of  CloFunction

	(source "([]\n  (am/ask-server {:question \"predicates\"}\n	question))\n([predicates]\n  (am/selector \"element\" 1 \"chart.client\" \"?\" predicates :itself 130)\n  (defn handler1 [sel]\n    (am/ask-server {:question \"subjects\"\n	       :predicate sel}\n	#(question sel %))))\n([pred subjects]\n  (am/selector \"element\" 20 \"chart.client\" \"?\" subjects :itself 130)\n  (defn handler20 [sel]\n    (am/ask-server {:question \"objects\"\n	       :predicate pred\n	       :subject sel}\n	#(question pred sel %))))\n([pred subj objects]\n  (if objects\n    (do (am/selector \"element\" 30 \"chart.client\" \"?\" objects :itself 130)\n      (defn handler30 [sel]\n        (am/ask-server {:question \"adjuncts\"\n	          :predicate pred\n	          :subject subj\n	          :object sel} \n	#(question pred subj sel %))))\n    (am/clear-dialog)))\n([pred subj obj adjuncts]\n  (if adjuncts\n    (do (am/selector \"element\" 40 \"chart.client\" \"?\" adjuncts :itself 130)\n      (defn handler40 [sel]\n        (am/ask-server {:question \"es\"\n	          :predicate pred\n	          :subject subj\n	          :object obj\n                                  :adjunct sel} \n	(fn [r]))\n        (am/clear-dialog)))\n    (am/clear-dialog)))")
	(title "question"))

([FlightPro_Class690009] of  CloFunction

	(source "(* (+ spd1 spd2) INTS-TIME)")
	(title "max-distance [spd1 spd2]"))

([FlightPro_Class690010] of  CloFunction

	(source "(put-on-map id1 cs1 crd1 crs1 spd1 \"INTERSECT\")\n(put-on-map id2 cs2 crd2 crs2 spd2 \"INTERSECT\")\n(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :add-link\n                         :ids [id1 id2]\n                         :options {:weight 4\n	                :title (str cs1 \" - \" cs2)\n	                :color \"red\"\n	                :dmin dmin	\n	                :tmin tmin}})")
	(title "pom-and-link [id1 crd1 crs1 spd1 cs1 id2 crd2 crs2 spd2 cs2 dmin tmin]"))

([FlightPro_Class690012] of  CloVar

	(source "(volatile! {})")
	(title "LINKS"))

([FlightPro_Class690013] of  CloFunction

	(source "(let [ops (clj->js options)\n       tmin (:tmin options)\n       del (if (number? tmin)\n               (int (* 60000 tmin))\n               30000)\n       llg (collect-llga ids)\n       lnk (js/L.polyline llg ops)]\n  (.addLayer @CHART lnk)\n  (.bindPopup lnk (linkPopup ids options))\n  (vswap! LINKS assoc ids lnk)\n  (if (> del 0)\n    (asp/delayer #(do (.removeLayer @CHART lnk)\n	     (vswap! LINKS dissoc ids)) del)))")
	(title "add-link [ids options]"))

([FlightPro_Class690014] of  CloFunction

	(source "(let [vhs (filter some? (map #(@VEHICLES %) ids))\n       mks (map #(:marker @%) vhs)\n       llgs (map #(.getLatLng %) mks)]\n  (clj->js llgs))")
	(title "collect-llga [ids]"))

([FlightPro_Class690015] of  CloFunction

	(source "(let [vhs @VEHICLES\n       alt1 (:altitude @(vhs id1))\n       alt2 (:altitude @(vhs id2))\n       adif (- alt1 alt2)\n       titl (:title ops)\n       dmin (:dmin ops )\n       tmin (:tmin ops)]\n  (str \"<h3>\" titl \"</h3>\"\n       \"<table>\"\n       \"<tr><td>Dmin</td><td>\" (if (number? dmin) (int (* 1852 dmin))) \" m</td></tr>\"\n       \"<tr><td>Tmin</td><td>\" (if (number? tmin) (int (* 60 tmin))) \" min</td></tr>\"\n       \"<tr><td>Alt-diff</td><td>\" adif \" ft</td></tr>\"\n       \"</table>\"))")
	(title "linkPopup [[id1 id2] ops]"))

([FlightPro_Class7] of  CloVar

	(source "(js/EventSource. (str BSE-URL \"czml/\"))")
	(title "EVT-SRC"))

([FlightPro_Class70000] of  CloVar

	(source "\"http://localhost:\"")
	(title "HOST"))

([FlightPro_Class700000] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n       {:keys [instance airport]} parmap\n       lat (or (some-> instance (sv \"lat\")) (some-> airport (get \"lat\")))\n       lon (or (some-> instance (sv \"lng\")) (some-> airport (get \"lon\")))\n       nam (or (some-> instance (sv \"title\")) (some-> airport (get \"name\")))\n       iata (some-> airport (get \"iata\"))\n       txt (if airport (str nam \" (\" iata \")\") nam)\n       dis (geo/distance-nm (our-center n s w e) [lat lon])]\n  (cz/point-out txt [lat lon] dis (our-radius n s w e)))")
	(title "point-out-place [parmap]"))

([FlightPro_Class70001] of  CloFunction

	(source "(enable-console-print!)\n(GET (str (:command URL) \"terrain\")\n	{:handler (fn [response]\n		(czm/init-3D-view (:base URL) (read-transit response)))\n	 :error-handler error-handler})\n(mov/set-turn-point CARRIER)\n(asp/repeater mov/move CARRIER (:carrier TIO))\n(asp/repeater flight-data-manual CARRIER (:display TIO))\n(asp/repeater camera-manual CARRIER (:camera TIO))\n(asp/repeater receive-directives (:directives TIO))\n(asp/repeater send-manual-data (:manual-data TIO))\n(asp/repeater new-czml-doc (:new-czml-doc TIO))\n(ctl/show-controls)")
	(title "on-load []"))

([FlightPro_Class70002] of  CloProgram

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class70004]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class70010]
		[FlightPro_Class20010]
		[FlightPro_Class90000]
		[FlightPro_Class70011]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70003])
	(title "Async Processing"))

([FlightPro_Class70003] of  CloNamespace

	(source "(:require \n  [clojure.core.async :refer [chan alts!! put! <! <!! go timeout close!]])")
	(title "async.proc"))

([FlightPro_Class70004] of  CloFunction

	(source "(when (not= @status \"RUN\") \n  (vreset! status \"RUN\")\n  (go (do \n          (while (and (= @status \"RUN\")\n                            (proc-fn))\n                (<! (timeout time-out)))\n          (if (instance? clojure.lang.IFn final-fun) (final-fun))\n          (vreset! status \"STOP\")))\n  @status)")
	(title "start-process [status proc-fn time-out final-fun]"))

([FlightPro_Class70005] of  CloFunction

	(source "(vreset! status \"FINISH\")")
	(title "stop-process [status]"))

([FlightPro_Class70006] of  CloFunction

	(source "(= @status \"RUN\")")
	(title "running? [status]"))

([FlightPro_Class70007] of  CloFunction

	(source "([func time-out]\n  (go (while true\n           (func)\n           (<! (timeout time-out)))))\n([func param time-out]\n  (go (while true\n           (func param)\n           (<! (timeout time-out)))))")
	(title "repeater"))

([FlightPro_Class70008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class1010000]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70009])
	(title "CS Async Processing"))

([FlightPro_Class70009] of  CloNamespace

	(source "(:require \n  [cljs.core.async :refer [<! timeout close!]])\n(:require-macros \n  [cljs.core.async.macros :refer [go]])")
	(title "csasync.proc"))

([FlightPro_Class70010] of  CloFunction

	(source "(put! chn val)")
	(title "pump-in [chn val]"))

([FlightPro_Class70011] of  CloFunction

	(source "(chan)")
	(title "mk-chan []"))

([FlightPro_Class710000] of  Airport

	(altitude 57)
	(coord 60.25388 25.04416)
	(country "Finland")
	(iata "HEM")
	(icao "EFHF")
	(runways 0)
	(title "Helsinki Malmi Airport"))

([FlightPro_Class710001] of  Airport

	(altitude 219)
	(coord 58.30746 26.69042)
	(country "Estonia")
	(iata "TAY")
	(icao "EETU")
	(runways 0)
	(title "Tartu Airport"))

([FlightPro_Class720000] of  Airport

	(altitude 18)
	(coord 58.99075 22.83073)
	(country "Estonia")
	(iata "KDL")
	(icao "EEKA")
	(runways 0)
	(title "Kardla Airport"))

([FlightPro_Class730000] of  CloFunction

	(source "(set-html! \"camera\" \"<h4>Camera</h4>\")\n(set-html! \"onboard\" \"Onboard:\")\n(set-html! \"onboard-fld\" \n  \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\n   <option value='MANUAL'>MANUAL</option>\n   <option value='select'>select</option>\")\n(set-html! \"view\" \"View:\")\n(set-html! \"view-fld\" 0)\n(set-html! \"view-sld\" \n  \"<input type='range' style='width:150px' id='roll-vals'\n               min='-180' value='0' max='180'\n               oninput='javascript:view3d.client.view(this.value)'>\")\n(set-html! \"pitch\" \"Pitch:\")\n(set-html! \"pitch-fld\" 0)\n(set-html! \"pitch-sld\" \n  \"<input type='range' style='width:150px' id='pitch-vals'\n               min='-90' value='0' max='90'\n               oninput='javascript:view3d.client.pitch(this.value)'>\")\n(set-html! \"roll\" \"Roll:\")\n(set-html! \"roll-fld\" 0)\n(set-html! \"roll-sld\" \n  \"<input type='range' style='width:150px' id='roll-vals'\n               min='-180' value='0' max='180'\n               oninput='javascript:view3d.client.roll(this.value)'>\")")
	(title "left-controls []"))

([FlightPro_Class730001] of  CloFunction

	(source "(left-controls)\n(right-controls)")
	(title "show-controls []"))

([FlightPro_Class730002] of  Rule

	(lhs "?q (Question predicate \"What\"\n	subject \"weather\"\n  	object \"by GeoNames\")")
	(rhs "(ext.data/pump-weather ext.data/gn-weather-html)\n(retract ?q)")
	(salience 0)
	(title "qq:WeatherGeoNames"))

([FlightPro_Class730003] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n        [lat lon] (our-center n s w e)\n        html (or (fun lat lon n s w e)\n	\"Weather information unavailable!\")]\n    (asp/pump-in (:ins-chn @COMM) \n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :time (:ext-data-popup TIO)}))")
	(title "pump-weather [fun]"))

([FlightPro_Class730004] of  CloFunction

	(source "(letfn [(smround [n]\n	(/ (float (Math/round (* n 10))) 10))]\n  (let [dlat (- lat1 lat2)\n          dlon (- lon1 lon2)\n          lad (* (if (>= dlat 0) dlat (- 0 dlat)) 60)\n          lod (* (if (>= dlon 0) dlon (- 0 dlon)) 60)\n          dia (Math/sqrt (+ (* lad lad) (* lod lod)))]\n     (if (< dia 1) (smround dia) (Math/round dia))))")
	(title "rough-distance [[lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class740000] of  Airport

	(altitude 1225)
	(coord 40.91608 -81.4421)
	(country "United States")
	(iata "CAK")
	(icao "KCAK")
	(runways 0)
	(title "Akron Canton Airport"))

([FlightPro_Class740002] of  CloFunction

	(source "([]\n  (apply our-center (:visible @COMM)))\n([n s w e]\n  [(/ (+ n s) 2) (/ (+ w e) 2)])")
	(title "our-center"))

([FlightPro_Class740003] of  CloFunction

	(source "(/ (* (- n s) 60) 2)")
	(title "our-radius [n s w e]"))

([FlightPro_Class740004] of  Airport

	(altitude 67)
	(coord -34.8222 -58.5358)
	(country "Argentina")
	(iata "EZE")
	(icao "SAEZ")
	(runways 0)
	(title "Buenos Aires Ministro Pistarini International Airport"))

([FlightPro_Class740005] of  Airport

	(altitude 3479)
	(coord -15.8711 -47.9186)
	(country "Brazil")
	(iata "BSB")
	(icao "SBBR")
	(runways 0)
	(title "Brasilia International Airport"))

([FlightPro_Class750000] of  CloVar

	(source "\"http://www.myweather2.com/developer/forecast.ashx?uac=Pyih5WakI3&output=json&query=\"")
	(title "WEATHER2-API"))

([FlightPro_Class750004] of  CloFunction

	(source "(let [rsp (gn/call-geonames-weather lat lon)]\n  (if (and rsp (not (empty? rsp)))\n    (let [lat2 	(read-string (rsp \"lat\"))\n            lon2 	(read-string (rsp \"lng\"))\n            [lat3 lon3 loc] (if (and (> n lat2 s) (< w lon2 e))\n		[lat2 lon2 (format \"%.4f %.4f\" lat2 lon2)]\n		[lat lon\n		 (str (geo/rough-distance [lat lon] [lat2 lon2])\n		       \" miles to \" \n		       (gn/direction (gn/bearing lat lon lat2 lon2))\n		       \" from here\")])\n            name 	(rsp \"stationName\")\n            wcd 	(rsp \"weatherCondition\")\n            hym 	(rsp \"hymidity\")\n            tmp 	(rsp \"temperature\")\n            wind 	(rsp \"windDirection\")\n            bwnd 	(if (some? wind)\n	  (let [b (+ (read-string wind) 180)] (if (> b 360) (- b 360) b)))\n            win 	(if (some? bwnd)\n	  (gn/direction bwnd)\n	  \"n/a\")\n            wins 	(rsp \"windSpeed\")\n            tim 	(rsp \"observationTime\")\n            mess	(str name \" Weather Station<br>\"\n	  \"location: \" loc \"<br>\"\n	  \"observation time: \" tim \"<br>\"\n	  \"weather conditions: \" wcd \"<br>\"\n	  \"temperature: \" tmp \" Celsius<br>\"\n	  \"hymidity: \" hym \"<br>\"\n	  \"wind: \" win \", \" wins \" Knots\")]\n         (str \"<h3>Weather by GeoNames</h3>\" mess))))\nnil")
	(title "gn-weather-html [lat lon n s w e]"))

([FlightPro_Class750005] of  CloFunction

	(source "(letfn [(wind [w]\n	(let [e (first (w \"wind\"))]\n	  (str \"Wind: \" (e \"dir\") \", \" (e \"speed\") \" \" (e \"wind_unit\") \"<br>\")))\n           (weather [w]\n	(str \"Weather: \" (w \"weather_text\") \"<br>\" (wind w)))\n           (day [w] (str \"Date: \" (w \"date\") \"<br>\" \n	         (weather (first (w \"day\")))\n	         \"Day max temp: \" (w \"day_max_temp\") \" \" (w \"temp_unit\") \"<br>\"\n	         \"Night min temp: \" (w \"night_min_temp\") \" \" (w \"temp_unit\") \"<br>\"))]\n  (let [w2 (fr24/json-web-data (str ext.data/WEATHER2-API lat \",\" lon))]\n    (if (and w2 (not (empty? w2)))\n      (let [w (first ((w2 \"weather\") \"curren_weather\"))\n              f ((w2 \"weather\") \"forecast\")\n              d1 (first f)\n              d2 (second f)]\n         (str \"<h3>Weather by WEATHER2</h3>\"\n                \"<a href='http://www.myweather2.com'>www.myweather2.com</a><br><br>\"\n                \"<h4>Current weather</h4>\"\n                \"Temperature: \" (w \"temp\") \" \" (w \"temp_unit\") \"<br>\"\n                \"Pressure: \" (w \"pressure\") \"<br>\"\n                \"Humidity: \" (w \"humidity\") \"<br>\"\n                (weather w) \"<br>\"\n                \"<h4>Forcast</h4>\"\n                (day d1) \"<br>\"\n                (day d2))))))")
	(title "w2-weather-html [lat lon n s w e]"))

([FlightPro_Class750006] of  CloDocumentation

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n          { &quot;weather&quot;: <br>        { &quot;curren_weather&quot;: <br>          [ {&quot;humidity&quot;: &quot;73&quot;, <br>              &quot;pressure&quot;: &quot;998&quot;, <br>              &quot;temp&quot;: &quot;-6&quot;, &quot;temp_unit&quot;: &quot;c&quot;, <br>              &quot;weather_code&quot;: &quot;1&quot;, <br>              &quot;weather_text&quot;: &quot;Partly cloudy&quot;,  <br>              &quot;wind&quot;: [ {&quot;dir&quot;: &quot;W&quot;, <br>                             &quot;speed&quot;: &quot;5&quot;, <br>                             &quot;wind_unit&quot;: &quot;kph&quot; } ] } ],  <br>        &quot;forecast&quot;: [ {&quot;date&quot;: &quot;2017-02-25&quot;,  <br>                              &quot;day&quot;: [ {&quot;weather_code&quot;: &quot;3&quot;, <br>                                            &quot;weather_text&quot;: &quot;Overcast skies&quot;,  <br>                                            &quot;wind&quot;: [ {&quot;dir&quot;: &quot;NW&quot;, <br>                                                           &quot;dir_degree&quot;:   &quot;314&quot;, <br>                                                           &quot;speed&quot;: &quot;22&quot;, <br>                                                           &quot;wind_unit&quot;: &quot;kph&quot;   } ] } ], <br>                             &quot;day_max_temp&quot;: &quot;-3&quot;,  <br>                             &quot;night&quot;: [ {&quot;weather_code&quot;: &quot;0&quot;, <br>                                             &quot;weather_text&quot;: &quot;Clear skies&quot;,  <br>                                             &quot;wind&quot;: [ {&quot;dir&quot;: &quot;W&quot;, <br>                                                             &quot;dir_degree&quot;:   &quot;274&quot;, <br>                                                             &quot;speed&quot;: &quot;22&quot;, <br>                                                             &quot;wind_unit&quot;:   &quot;kph&quot; } ] } ], <br>                             &quot;night_min_temp&quot;: &quot;-7&quot;, <br>                             &quot;temp_unit&quot;: &quot;c&quot; }, <br>                           {&quot;date&quot;: &quot;2017-02-26&quot;,  <br>                             &quot;day&quot;: [ {&quot;weather_code&quot;: &quot;73&quot;, <br>                                           &quot;weather_text&quot;: &quot;Moderate snow&quot;,  <br>                                           &quot;wind&quot;: [ {&quot;dir&quot;: &quot;ESE&quot;, <br>                                           &quot;dir_degree&quot;: &quot;117&quot;, <br>                                           &quot;speed&quot;: &quot;22&quot;, <br>                                           &quot;wind_unit&quot;: &quot;kph&quot; } ] } ], <br>                             &quot;day_max_temp&quot;: &quot;-1&quot;,  <br>                             &quot;night&quot;: [ {&quot;weather_code&quot;: &quot;10&quot;, <br>                                              &quot;weather_text&quot;: &quot;Mist&quot;,  <br>                                              &quot;wind&quot;: [ {&quot;dir&quot;: &quot;ENE&quot;, <br>                                                              &quot;dir_degree&quot;:   &quot;57&quot;, <br>                                                              &quot;speed&quot;: &quot;18&quot;, <br>                                                              &quot;wind_unit&quot;:   &quot;kph&quot; } ] } ], <br>                             &quot;night_min_temp&quot;: &quot;-10&quot;, <br>                             &quot;temp_unit&quot;: &quot;c&quot; } ] }}</body>\n</html>"))

([FlightPro_Class750009] of  Rule

	(lhs "?q (Question predicate \"What\"\n	subject \"weather\"\n	object \"by Weather2\")")
	(rhs "(ext.data/pump-weather ext.data/w2-weather-html)\n(retract ?q)")
	(salience 0)
	(title "qq:Weather2"))

([FlightPro_Class760000] of  Airport

	(altitude 60)
	(coord 12.50138 -70.0152)
	(country "Aruba")
	(iata "AUA")
	(icao "TNCA")
	(runways 0)
	(title "Oranjestad Queen Beatrix International Airport"))

([FlightPro_Class760004] of  Airport

	(altitude 349)
	(coord 61.04455 28.14439)
	(country "Finland")
	(iata "LPP")
	(icao "EFLP")
	(runways 0)
	(title "Lappeenranta Airport"))

([FlightPro_Class760005] of  Airport

	(altitude 645)
	(coord 66.56166 25.83083)
	(country "Finland")
	(iata "RVN")
	(icao "EFRO")
	(runways 0)
	(title "Rovaniemi Airport"))

([FlightPro_Class760006] of  Airport

	(altitude 22)
	(coord 1.350189 103.9944)
	(country "Singapore")
	(iata "SIN")
	(icao "WSSS")
	(runways 0)
	(title "Singapore Changi Airport"))

([FlightPro_Class770000] of  CloFunction

	(source "(letfn [(closer [ap1 ap2]\n	(let [crd1 [(ap1 \"lat\")(ap1 \"lon\")]\n	       crd2 [(ap2 \"lat\")(ap2 \"lon\")]]\n	  (<= (distance-nm [lat lon] crd1)\n	         (distance-nm [lat lon] crd2))))]\n  (->> (airports-by-country)\n           vals\n           (mapcat vals)\n           (sort closer)\n           (take n)))")
	(title "nearest-airports [n [lat lon]]"))

([FlightPro_Class770011] of  CloFunction

	(source "(letfn [(inside [x]\n	(let [lat (x \"lat\")\n	       lon (x \"lon\")]\n	  (and (<= lat n)(>= lat s)(<= lon e)(>= lon w))))]\n  (->> (airports-by-country)\n           vals\n           (mapcat vals)\n           (filter inside)))")
	(title "airports-in-bbx [n s w e]"))

([FlightPro_Class780000] of  Airport

	(altitude 17)
	(coord 55.608387 12.645351)
	(country "Denmark")
	(iata "CPH")
	(icao "EKCH")
	(runways 0)
	(title "Copenhagen Airport"))

([FlightPro_Class780001] of  Airport

	(altitude 11)
	(coord 52.30861 4.763889)
	(country "Netherlands")
	(iata "AMS")
	(icao "EHAM")
	(runways 0)
	(title "Amsterdam Schiphol Airport"))

([FlightPro_Class780020] of  Rule

	(lhs "?q (Question predicate \"Where\"\n	subject \"nearest\"\n	object \"airports\")")
	(rhs "(ext.data/pump-nearest-airports 4)\n(retract ?q)")
	(salience 0)
	(title "qq:NearestAirports"))

([FlightPro_Class780021] of  CloFunction

	(source "(let [ocr (our-center)\n        nas (fr24/nearest-airports k ocr)\n        dis (map #(geo/distance-nm ocr [(% \"lat\")(% \"lon\")]) nas)\n        bea (map #(geo/bear-deg ocr [(% \"lat\")(% \"lon\")]) nas)\n        html (str \"<h3>Nearest Airports</h3>\"\n	(apply str (for [i (range k)]\n	  (str (inc i) \". \" (get (nth nas i) \"name\") \", \"\n		(get (nth nas i) \"country\") \" (\"\n		(get (nth nas i) \"iata\") \"), \"\n		(format \"distance: %.1f\" (nth dis i)) \" NM, \"\n		\"direction: \" (int (nth bea i)) \"<br>\"))))\n        chn (:ins-chn @COMM)]\n  (asp/pump-in chn\n	{:instruct :popup\n	 :lat (first ocr)\n	 :lon (second ocr)\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)})\n  (asp/pump-in chn {:instruct :clear-placemarks})\n  (doseq [apt (take k nas)]\n    (point-out-place {:airport apt})\n    (asp/pump-in chn (placemark-instruct {:airport apt :feature \"airport\"}))))")
	(title "pump-nearest-airports [k]"))

([FlightPro_Class790000] of  QuestionTree

	(name "climb"))

([FlightPro_Class790001] of  QuestionTree

	(name "descend"))

([FlightPro_Class8] of  CloFunction

	(source "(let [data (.-data e)\n       data (js/JSON.parse data)]\n  ;;(println [:CZML data])\n  (.process CZM-SRC data))")
	(title "cz-processor [e]"))

([FlightPro_Class80000] of  CloFunction

	(source "(vswap! carr assoc :altitude alt)")
	(title "set-altitude [carr alt]"))

([FlightPro_Class800000] of  QuestionTree

	(name "global city"))

([FlightPro_Class800002] of  Airport

	(altitude 62)
	(coord 64.60028 40.71666)
	(country "Russia")
	(iata "ARH")
	(icao "ULAA")
	(runways 0)
	(title "Arkhangelsk Talagi Airport"))

([FlightPro_Class80001] of  CloFunction

	(source "(GET (:directives URL) {:handler directives-handler\n                       :error-handler error-handler})")
	(title "receive-directives []"))

([FlightPro_Class80002] of  CloVar

	(source "(fn [response]\n  (let [{:keys [status status-text]} response]\n    (println (str \"AJAX ERROR: \" status \" \" status-text))))")
	(title "error-handler"))

([FlightPro_Class80003] of  CloFunction

	(source "(doseq [{:keys [directive] :as dir} (read-transit response)]\n  ;;(println [:DIRECTIVE dir])\n  (condp = directive\n    :callsigns (let [{:keys [list]} dir]\n	(ctl/callsigns list))\n    :vehicle (let [{:keys [vehicle period]} dir]\n                        (bank-vehicle vehicle)\n	(camera-vehicle vehicle period)\n	(ctl/show-flight-data vehicle))\n    :dynamics (let [{:keys [dynamo]} dir]\n	(dynamics dynamo))\n    :onboard-status (let [{:keys [status]} dir]\n	(adjust-pitch status))\n    :instantly-to (let [{:keys [lat lon]} dir]\n	(instantly-to lat lon))\n    (println (str \"Unknown directive: \" [directive dir]))))")
	(title "directives-handler [response]"))

([FlightPro_Class80004] of  CloFunction

	(source "(t/read (t/reader :json) x)")
	(title "read-transit [x]"))

([FlightPro_Class800040] of  Airport

	(altitude 161)
	(coord 60.51414 22.2628)
	(country "Finland")
	(iata "TKU")
	(icao "EFTU")
	(runways 0)
	(title "Turku Airport"))

([FlightPro_Class810000] of  CloFunction

	(source "(let [[lat lon] (our-center)\n        ocn (gn/call-geonames-ocean lat lon)\n        pro \"<html><head><meta charset=\\\"UTF-8\\\"/></meta></head>\"\n        hdr \"<h3>Where we are?</h3>\"\n        html (if (= ocn \"Land\")\n	(let [nby (gn/call-geonames-nearby lat lon nil nil nil nil)\n	       nam (nby \"name\")\n	       cty (nby \"countryName\")\n	       adm (nby \"adminName1\")\n	       cnt (nby \"continentCode\")\n	       lat1 (read-string (nby \"lat\"))\n	       lon1 (read-string (nby \"lng\"))\n                               dis (read-string (nby \"distance\"))\n	       dir (gn/direction (gn/bearing lat1 lon1 lat lon))]\n	   (str pro hdr \"We are in \" (format \"%.0f\" dis)\n		\" miles to \" dir\n		\" from the \" nam \",<br>\"\n		cty \" (\" adm \"),<br>\"  \n		(CONTINENT cnt)))\n                      (str pro hdr \"We are above the \" ocn))]\n    (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :width 600\n	 :height 800\n	 :time (:ext-data-popup TIO)}))")
	(title "pump-where-we-are []"))

([FlightPro_Class810002] of  Rule

	(lhs "?q (Question predicate \"How far\"\n	subject \"global city\")\n(not Question predicate \"User Answer\")")
	(rhs "(async.proc/pump-in \n	(:instructions pro.commands/CHN)\n	{:instruct :ask-user \n	 :question \"city\"\n	 :param {:countries (sort (map #(protege.core/sv % \"title\") \n			(protege.core/cls-instances \"Country\")))}})")
	(salience 0)
	(title "qq:HowFarGlobalCity1"))

([FlightPro_Class810003] of  CloFunction

	(source "(if-let [cns (:countries param)]\n  (do (am/selector \"element\" 1 \"chart.client\" \"countries\" cns :itself 130)\n        (defn handler1 [sel]\n          (am/ask-server {:question \"es\"\n	:predicate \"User Answer\"\n	:subject \"selected country\"\n	:object sel} \n	(fn [r]))))\n  (if-let [cts (:cities param)]\n    (do (am/selector \"element\" 20 \"chart.client\" \"cities\" cts :itself 130)\n      (defn handler20 [sel]\n        (am/ask-server {:question \"es\"\n	:predicate \"User Answer\"\n	:subject \"selected city\"\n	:object sel} \n	(fn [r]))\n        (am/clear-dialog)))))")
	(title "select-city [param]"))

([FlightPro_Class810006] of  CloVar

	(source "{\"AF\" \"Africa\"\n  \"AN\" \"Antarctica\"\n  \"AS\" \"Asia\"\n  \"EU\" \"Europe\"\n  \"NA\" \"North America\"\n  \"OC\" \"Oceania\"\n  \"SA\" \"South America\"}")
	(title "CONTINENT"))

([FlightPro_Class810007] of  Rule

	(lhs "?q (Question predicate \"Where\"\n	subject \"we are\")")
	(rhs "(ext.data/pump-where-we-are)\n(retract ?q)")
	(salience 0)
	(title "qq:WhereWeAre"))

([FlightPro_Class820000] of  CloFunction

	(source "(set-html! \"zoom\" (str \"zoom \" z))")
	(title "display-zoom [z]"))

([FlightPro_Class820008] of  Rule

	(lhs "?q1 (Question predicate \"How far\"\n	subject \"global city\")\n?q2 (Question predicate \"User Answer\"\n	subject \"selected country\"\n	object ?cnt)\n(not Question predicate \"User Answer\")")
	(rhs "(async.proc/pump-in \n	(:instructions pro.commands/CHN)\n	{:instruct :ask-user \n	 :question \"city\"\n	 :param {:cities (ext.data/country-cities ?cnt)}})")
	(salience 0)
	(title "qq:HowFarGlobalCity2"))

([FlightPro_Class820009] of  Rule

	(lhs "?q1 (Question predicate \"How far\"\n	subject \"global city\")\n?q2 (Question predicate \"User Answer\"\n	subject \"selected country\"\n	object ?cnt)\n?q3 (Question predicate \"User Answer\"\n	subject \"selected city\"\n	object ?cty)")
	(rhs "(ext.data/pump-far-city ?cnt ?cty)\n(retract ?q1 ?q2 ?q3)")
	(salience 0)
	(title "qq:HowFarGlobalCity3"))

([FlightPro_Class820010] of  CloFunction

	(source "(if-let [ins (fifos \"Country\" \"title\" cnt)]\n  (let [cod (sv ins \"code\")\n         gns (gn/call-geonames-search \n	{:country cod  :cities \"cities1000\" :orderby \"population\"})]\n    (def LAST-R gns)\n    (sort (map #(% \"name\") gns))))")
	(title "country-cities [cnt]"))

([FlightPro_Class820018] of  CloVar

	(title "LAST-R"))

([FlightPro_Class820021] of  CloFunction

	(source "(if-let [flt (seq (filter #(= (% \"name\") cty) LAST-R))]\n  (let [ct (first flt)\n         [lat1 lon1] (our-center)\n         lat2 (read-string (ct \"lat\"))\n         lon2 (read-string (ct \"lng\"))\n         dis (geo/distance-nm [lat1 lon1] [lat2 lon2])\n         bea (geo/bear-deg [lat1 lon1] [lat2 lon2])\n         html (str \"<h3>\" cty \"</h3>\"\n	\"country: \" cnt \"<br>\"\n	\"latitude: \" lat2 \"<br>\"\n	\"longitude: \" lon2 \"<br>\"\n	\"direction: \" (gn/direction bea)\n	\"<h4>\" (format \"distance: %.1f\" dis) \" NM</h4>\")]\n    (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat1\n	 :lon lon1\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)})))")
	(title "pump-far-city [cnt cty]"))

([FlightPro_Class830000] of  CloFunction

	(source ";;(println [:CMD-NEW-CZML-DOC params])\n(czs/new-doc)\n\"\"")
	(title "new-czml-doc [params]"))

([FlightPro_Class830001] of  CloFunction

	(source "(def DOC-SND true)")
	(title "new-doc []"))

([FlightPro_Class830002] of  Airport

	(altitude 1487)
	(coord 48.35378 11.78608)
	(country "Germany")
	(iata "MUC")
	(icao "EDDM")
	(runways 0)
	(title "Munich Airport"))

([FlightPro_Class830003] of  Airport

	(altitude 392)
	(coord 49.0113 2.537)
	(country "France")
	(iata "CDG")
	(icao "LFPG")
	(runways 0)
	(title "Paris Charles de Gaulle Airport"))

([FlightPro_Class840000] of  Rule

	(lhs "?q (Question predicate \"Where\"\n	subject \"nearest\"\n	object ?ob\n	(not= ?ob \"airports\"))")
	(rhs "(ext.data/pump-nearest ?ob)\n(retract ?q)")
	(salience 0)
	(title "qq:WhereNearest"))

([FlightPro_Class840001] of  CloFunction

	(source "(if-let [flt (seq (filter #(= (sv % \"title\") ob) (cls-instances \"Feature\")))]\n  (let [[lat1 lon1] (our-center)\n         nbr (gn/call-geonames-nearby lat1 lon1 nil (sv (first flt) \"code\") nil 300)\n         html (if (or (nil? nbr) (empty? nbr))\n	\"No information.\"\n	(let [lat2 (read-string (nbr \"lat\"))\n	       lon2 (read-string (nbr \"lng\"))\n	       dis (read-string (nbr \"distance\"))\n	       bea (gn/bearing lat1 lon1 lat2 lon2)]\n	  (str \"<h3>Nearest \" ob \"</h3>\"\n	    \"<h4>\" (nbr \"name\") \"</h4>\"\n	    \"country: \" (nbr \"countryName\") \"<br>\"\n	    \"latitude: \" lat2 \"<br>\"\n	    \"longitude: \" lon2 \"<br>\"\n	    (format \"distance: %.1f\" dis) \" NM<br>\"\n	    \"direction: \" (gn/direction bea))))]\n    (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat1\n	 :lon lon1\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)})))")
	(title "pump-nearest [ob]"))

([FlightPro_Class840011] of  CloFunction

	(source "(or (> (Math/abs (- lat1 lat2)) 0.02)\n     (> (Math/abs (- lon1 lon2)) 0.02))")
	(title "obsolete [[lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class850000] of  CloFunction

	(source "(println :GOTO params)\n(let [{:keys [lat lon]} params]\n  (set-map-view [lat lon])\n  (if (= (:from params) \"CHART\")\n    (asp/pump-in (:directives CHN)\n	 {:directive :instantly-to\n	  :lat lat\n	  :lon lon})))\n\"\"")
	(title "goto [params]"))

([FlightPro_Class850004] of  CloFunction

	(source "([carr altitude]\n  (vswap! carr assoc-in [:elevator :target] altitude)\n  (equalize carr :elevator :altitude set-altitude step-closer nil))\n([carr altitude accel]\n  (vswap! carr assoc-in [:elevator :accel] accel)\n  (elevate carr altitude))")
	(title "elevate"))

([FlightPro_Class850005] of  Rule

	(lhs "?q (Question predicate \"How many\"\n	subject \"airplanes\"\n	object ?ob\n	(not= ?ob \"in the air\"))")
	(rhs "(ext.data/pump-airplanes \n	(str \"Airplanes \" ?ob) \n	(es/flights-of-status\n	  (condp = ?ob\n	    \"all\" \"ANY\"\n	    \"on the ground\" \"GROUND\")))\n(retract ?q)")
	(salience 0)
	(title "qq:AirplanesAll"))

([FlightPro_Class850007] of  CloFunction

	(source "(let [ff (if (= sta \"ANY\") \n            (rt/fact-list 'Flight)\n            (rt/facts-with-slot-value 'Flight 'status = sta))\n       cc (map #(rt/slot-value 'callsign %) ff)]\n  (sort (set cc)))")
	(title "flights-of-status [sta]"))

([FlightPro_Class850012] of  CloFunction

	(source "(let [[lat lon] (our-center)\n       css (sort css)\n       k (count css)\n       cs3 (partition-all 3 css)\n       html (str \"<h3>\" head \"</h3>\"\n	\"<h3>\" k \"</h3><table>\"\n	(apply str (map #(str \"<tr><td>\" (apply str (interpose \"</td><td>\" %)) \"</td></tr>\") cs3))\n	\"</table>\")]\n  (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)}))")
	(title "pump-airplanes [head css]"))

([FlightPro_Class850020] of  QuestionTree

	(name "on level"))

([FlightPro_Class860000] of  CloFunction

	(source "(let [htm (if (= ONBOARD \"MANUAL\")\n                (str \"MANUAL instantly goes to this location?<br><br>\"\n	\"<input type='button' \n	 value='Go!'\n	 style='color:blue;display:block;margin:auto;'\n	 onclick='chart.client.mangoinst(\" lat \",\" lng \")' >\")\n                (str \"Now on board \" ONBOARD))]\n  (popup lat lng htm 8000 240 100))")
	(title "mouse-click [lat lng]"))

([FlightPro_Class860001] of  CloFunction

	(source "(GET (str (:command URL) \"goto?lat=\" lat \"&lon=\" lon \"&from=CHART\"))")
	(title "mangoinst [lat lon]"))

([FlightPro_Class860002] of  QuestionTree

	(name "local city"))

([FlightPro_Class870000] of  Airport

	(altitude 28)
	(coord 22.30888 113.9147)
	(country "Hong Kong")
	(iata "HKG")
	(icao "VHHH")
	(runways 0)
	(title "Hong Kong International Airport"))

([FlightPro_Class870001] of  Airport

	(altitude 21)
	(coord 35.55225 139.7796)
	(country "Japan")
	(iata "HND")
	(icao "RJTT")
	(runways 0)
	(title "Tokyo Haneda International Airport"))

([FlightPro_Class870002] of  Airport

	(altitude 135)
	(coord 35.76472 140.3863)
	(country "Japan")
	(iata "NRT")
	(icao "RJAA")
	(runways 0)
	(title "Tokyo Narita International Airport"))

([FlightPro_Class870008] of  Rule

	(lhs "(Question predicate \"How far\"\n	subject \"local city\")\n(not Question predicate \"User Answer\")")
	(rhs "(async.proc/pump-in \n	(:instructions pro.commands/CHN)\n	{:instruct :ask-user \n	 :question \"city\"\n	 :param {:cities (ext.data/local-cities)}})")
	(salience 0)
	(title "qq:HowFarLocalCity1"))

([FlightPro_Class870009] of  CloFunction

	(source "(let [[lat lon] (our-center)\n       gns (gn/call-geonames-search \n	{:east (+ lon 1.0)	;; + 1 degree (~ 60 NM)\n	 :west (- lon 1.0)\n	 :north (+ lat 1.0)\n	 :south (- lat 1.0)	;; square (120x120 MN)\n	 :cities \"cities1000\" \n	 :orderby \"population\"})]\n  (def LAST-R gns)\n  (sort (map #(% \"name\") gns)))")
	(title "local-cities []"))

([FlightPro_Class870010] of  Rule

	(lhs "?q1 (Question predicate \"How far\"\n	subject \"local city\")\n?q2 (Question predicate \"User Answer\"\n	subject \"selected city\"\n	object ?cty)")
	(rhs "(ext.data/pump-far-city nil ?cty)\n(retract ?q1 ?q2)")
	(salience 0)
	(title "qq:HowFarLocalCity2"))

([FlightPro_Class870095] of  TypeName

	(name "wool"))

([FlightPro_Class870099] of  TypeName

	(name "charging_station"))

([FlightPro_Class870106] of  TypeName

	(name "county"))

([FlightPro_Class870133] of  TypeName

	(name "watermill"))

([FlightPro_Class870268] of  TypeName

	(name "playground"))

([FlightPro_Class870273] of  TypeName

	(name "water_tower"))

([FlightPro_Class870275] of  TypeName

	(name "picnic_site"))

([FlightPro_Class870416] of  TypeName

	(name "insurance"))

([FlightPro_Class870425] of  TypeName

	(name "bakery"))

([FlightPro_Class870446] of  TypeName

	(name "silo"))

([FlightPro_Class870648] of  Airport

	(altitude 291)
	(coord 48.72333 2.379444)
	(country "France")
	(iata "ORY")
	(icao "LFPO")
	(runways 0)
	(title "Paris Orly Airport"))

([FlightPro_Class870729] of  Airport

	(altitude 14418)
	(coord 29.323055 100.05333)
	(country "China")
	(iata "DCY")
	(icao "ZUDC")
	(runways 0)
	(title "Daocheng Yading Airport"))

([FlightPro_Class870730] of  Airport

	(altitude 1026)
	(coord 33.63672 -84.428)
	(country "United States")
	(iata "ATL")
	(icao "KATL")
	(runways 0)
	(title "Atlanta Hartsfield-Jackson International Airport"))

([FlightPro_Class880000] of  CloFuncall

	(source "(ru.rules/sp :all)"))

([FlightPro_Class880002] of  CloFunction

	(source "(mov/set-turn-point CARRIER [lat lon] (@CARRIER :course) (@CARRIER :speed))")
	(title "instantly-to [lat lon]"))

([FlightPro_Class880003] of  CloVar

	(source "\"MANUAL\"")
	(title "ONBOARD"))

([FlightPro_Class890000] of  Airport

	(altitude 4390)
	(coord 27.69658 85.3591)
	(country "Nepal")
	(iata "KTM")
	(icao "VNKT")
	(runways 0)
	(title "Kathmandu Tribhuvan International Airport"))

([FlightPro_Class890001] of  CloVar

	(source "[0 0 0 0 0 0 0]")
	(title "FLY-CTL"))

([FlightPro_Class890003] of  CloFunction

	(source "(let [[lat lon alt head pitch roll per] FLY-CTL\n       th (.-height (first pos))\n       aat (+ COCKPIT-HEIGHT alt th)]\n  (println :TERRAIN-HEIGHT th :COCKPIT-HEIGHT COCKPIT-HEIGHT)\n  (fly-control lat lon aat head pitch roll per))")
	(title "terraHeightResponse [pos]"))

([FlightPro_Class9] of  CloFunction

	(source "(let [dest (js/Cesium.Cartesian3.fromDegrees lon lat alt)]\n  (.flyTo (.-camera VIEWER)\n            #js{:destination dest\n                  :orientation #js{:heading (js/Cesium.Math.toRadians hea)\n                                           :pitch   (js/Cesium.Math.toRadians pit)\n                                           :roll    (js/Cesium.Math.toRadians rol)}\n                  :maximumHeight alt\n                  :duration per\n                  :easingFunction (fn [time] time)}))")
	(title "fly-control [lat lon alt hea pit rol per]"))

([FlightPro_Class90000] of  CloFunction

	(source "(loop [out []]\n  (if (empty? out)\n    (recur (<!! chn))\n    out))")
	(title "one-out [chn]"))

([FlightPro_Class900000] of  CloFunction

	(source "(let [car @CARRIER]\n  (if (not= callsign (:mode car))\n    (vswap! CARRIER assoc :mode callsign))\n  (let [ocrs (:course car)\n         ncrs (:course vehicle)\n         [olat olon] (:coord car)\n         [nlat nlon] (:coord vehicle)\n         ospd (:speed car)\n         nspd (:speed vehicle)]\n    (vswap! CARRIER assoc \n	:coord [(double (/ (+ olat nlat) 2)) (double (/ (+ olon nlon) 2))]\n	:speed (cond\n	             (= nspd 0) 0 \n	             (= ospd 0) nspd\n	             true nspd))\n    (mov/elevate CARRIER (:altitude vehicle) 2)\n    (mov/set-turn-point CARRIER)\n    (if (not= ncrs ocrs)\n      (turn-and-bank CARRIER ncrs))))")
	(title "carrier-interpol2 [callsign vehicle]"))

([FlightPro_Class900001] of  Airport

	(altitude 128)
	(coord 18.20483 -63.055)
	(country "Anguilla")
	(iata "AXA")
	(icao "TQPF")
	(runways 0)
	(title "The Valley Clayton J. Lloyd International Airport"))

([FlightPro_Class900006] of  Airport

	(altitude 163)
	(coord 40.97692 28.8146)
	(country "Turkey")
	(iata "IST")
	(icao "LTBA")
	(runways 0)
	(title "Istanbul Ataturk International Airport"))

([FlightPro_Class90001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:propeller :accel] accel))")
	(title "accel-speed [accel]"))

([FlightPro_Class90002] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:elevator :accel] accel))")
	(title "accel-altitude [accel]"))

([FlightPro_Class90005] of  CloFunction

	(source "(loop [n 1 y z]\n  (if (seq y)\n    (let [[onb1 cs1 t1 crd1 a1 c1 s1 gnd1] (first y)\n           [onb2 cs2 t2 crd2 a2 c2 s2 gnd2] (second y)\n           dt (if (and t1 t2) (- t2 t1) -7777)\n           da (if (and a1 a2) (- a2 a1) -7777)\n           ds (if (and s1 s2) (- s2 s1) -7777)\n           va (if (and dt da) (/ da dt) -7777)\n           vs (if (and dt ds) (/ ds dt) -7777)]\n      (protege.core/ctpl [n onb2 cs2 t2 crd2 a2 c2 s2 gnd2 \n        (read-string (format \"%.1f\" (float va)))\n        (read-string (format \"%.2f\" (float vs)))])\n      (recur (inc n) (rest y))) ))")
	(title "proc [z]"))

([FlightPro_Class910000] of  Airport

	(altitude 619)
	(coord 41.78597 -87.7524)
	(country "United States")
	(iata "MDW")
	(icao "KMDW")
	(runways 0)
	(title "Chicago Midway International Airport"))

([FlightPro_Class920000] of  CloFuncall

	(source "pro.commands/GROUND-ALT"))

([FlightPro_Class930000] of  CloVar

	(source "2")
	(title "COCKPIT-HEIGHT"))

([FlightPro_Class940000] of  CloVar

	(source "(volatile! {:mode \"MANUAL\"\n               :coord [60 30]\n               :altitude 4000\n               :speed 160\n               :course 270})")
	(title "VEHICLE"))

([FlightPro_Class950000] of  CloFuncall

	(source "(pro.commands/terrain)"))

([FlightPro_Class950001] of  CloFuncall

	(source "(pro.commands/terrain {})"))

([FlightPro_Class950040] of  Airport

	(altitude 74)
	(coord 43.43666 5.215)
	(country "France")
	(iata "MRS")
	(icao "LFML")
	(runways 0)
	(title "Marseille Provence Airport"))

([FlightPro_Class960000] of  CloFunction

	(source "(let [ldiff (- lambda lambda0)\n       cosphi (js/Math.cos phi)]\n  (js/Math.atan2 (* cosphi (js.Math.sin ldiff))\n                      (- (* (js/Math.cos phi1) (js/Math.sin phi)) \n                          (* (js/Math.sin phi1) cosphi (js/Math.cos ldiff)))))")
	(title "spherical-azimuth-js [phi1 lambda0 phi lambda]"))

([FlightPro_Class960001] of  CloFunction

	(source "(let [fi1 (* la1 PID180)\n       ld1 (* lo1 PID180)\n       fi2 (* la2 PID180)\n       ld2 (* lo2 PID180)\n       rad (spherical-azimuth-js fi1 ld1 fi2 ld2)\n       deg (/ rad PID180)]\n  (cond\n    (< deg 0) (+ deg 360.0)\n    (> deg 360.0) (- deg 360.0)\n    true deg))")
	(title "bear-deg-js [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class960019] of  GeneralPlan

	(cruise-plan [FlightPro_Class960021])
	(landing-plan [FlightPro_Class960028])
	(takeoff-plan [FlightPro_Class960020])
	(title "Basic Plan"))

([FlightPro_Class960020] of  TakeoffPlan

	(altitude-vector "1500 6")
	(initial-turn-course "-1 2")
	(speed "220 8")
	(title "Basic Takeoff Plan"))

([FlightPro_Class960021] of  CruisePlan

	(altitude-vector "33000 8")
	(min-altitude "4000")
	(min-speed "220")
	(speed "500 1")
	(title "Basic Cruise Plan"))

([FlightPro_Class960023] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class960019])
	(%3AANNOTATION-TEXT "Active Plan")
	(%3ACREATION-TIMESTAMP "2017.05.06 13:56:58.113 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class960028] of  LandingPlan

	(altitude-graph
		"0.1 0"
		"0.5 15"
		"2 600"
		"7 2000")
	(altitude-vector "2000 8")
	(final-turn-course "-1 1")
	(outer-marker-distance "7")
	(speed "180 1 6")
	(speed-graph
		"0.0 0"
		"0.1 10"
		"0.5 100"
		"3 120")
	(title "Basic Landing Plan"))

([FlightPro_Class960029] of  Airport

	(altitude 312)
	(coord 38.94744 -77.4599)
	(country "United States")
	(iata "IAD")
	(icao "KIAD")
	(runways 0)
	(title "Washington Dulles International Airport"))

([FlightPro_Class960030] of  CloFunction

	(source "(if (string? s)\n  (read-string (str \"[\" s \"]\"))\n  (vec (map as-vec s)))")
	(title "as-vec [s]"))

([FlightPro_Class970000] of  Airport

	(altitude 4)
	(coord 37.4611 -122.115)
	(country "United States")
	(iata "PAO")
	(icao "KPAO")
	(runways 0)
	(title "Palo Alto Airport"))

([FlightPro_Class970001] of  Airport

	(altitude 13)
	(coord 37.61897 -122.374)
	(country "United States")
	(iata "SFO")
	(icao "KSFO")
	(runways 0)
	(title "San Francisco International Airport"))

([FlightPro_Class980000] of  Airport

	(altitude 215)
	(coord 57.20194 -2.19777)
	(country "United Kingdom")
	(iata "ABZ")
	(icao "EGPD")
	(runways 0)
	(title "Aberdeen International Airport"))

([FlightPro_Class990000] of  Airport

	(altitude 135)
	(coord 55.95 -3.3725)
	(country "United Kingdom")
	(iata "EDI")
	(icao "EGPH")
	(runways 0)
	(title "Edinburgh Airport"))

([FlightPro_Class990001] of  Airport

	(altitude 217)
	(coord 48.9588 2.4336)
	(country "France")
	(iata "LBG")
	(icao "LFPB")
	(runways 0)
	(title "Paris Le Bourget Airport"))

([FlightPro_Class990003] of  Airport

	(altitude 600)
	(coord 48.11027 16.56972)
	(country "Austria")
	(iata "VIE")
	(icao "LOWW")
	(runways 0)
	(title "Vienna International Airport"))
